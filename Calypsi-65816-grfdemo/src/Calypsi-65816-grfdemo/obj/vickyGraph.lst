###############################################################################
#                                                                             #
# Calypsi ISO C compiler for 65816                              version 3.6.2 #
#                                                       20/Jul/2022  19:41:06 #
# Command line: --core=65816 --code-model=large --data-model=small            #
#               --target=Foenix -I ./include --speed -O2 --debug              #
#               --list-file=obj/vickyGraph.lst -o obj/vickyGraph.o            #
#               src/vickyGraph.c                                              #
#                                                                             #
###############################################################################

    \ 000000                      .rtmodel version,"1"
    \ 000000                      .rtmodel codeModel,"large"
    \ 000000                      .rtmodel dataModel,"small"
    \ 000000                      .rtmodel core,"65816"
    \ 000000                      .rtmodel huge,"0"
    \ 000000                      .rtmodel doubleSize,"32"
    \ 000000                      .rtmodel target,"foenix"
    \ 000000                      .extern DMA_wait_delay
    \ 000000                      .extern _Dp
    \ 000000                      .extern _FillDP2
    \ 000000                      .extern _FillDP4
    \ 000000                      .extern _Float32Add
    \ 000000                      .extern _Float32Div
    \ 000000                      .extern _Float32EQ
    \ 000000                      .extern _Float32GE
    \ 000000                      .extern _Float32LT
    \ 000000                      .extern _Float32Mul
    \ 000000                      .extern _Float32Sub
    \ 000000                      .extern _Float32ToSInt32
    \ 000000                      .extern _MoveLongNear
    \ 000000                      .extern _Mul32
    \ 000000                      .extern _SInt32ToFloat32
    \ 000000                      .extern _Vfp
    \ 000000                      .extern abs
    \ 000000                      .extern printf
    \ 000000                      .extern wait_for_DMA_to_finish
0001                  // -------------------------------------------------------------
0002                  // Foenix C256 - Graphics Library VickyGraph.c
0003                  // Compiled by Ernesto Contreras
0004                  // May 2022
0005                  // -------------------------------------------------------------
0006                  
0007                  #include <stdio.h>
0008                  #include <stdlib.h>
0009                  #include <vicky.h>
0010                  #include <string.h>
0011                  #include <dma.h>
0012                  #include "support.h"
0013                  #include "vickyGraph.h"
0014                  
0015                  // Global Variables for Stack
0016                  #define STACK_MAXSIZE 128
0017                  int stack[128][2];
    \ 000000                      .section zdata,bss
    \ 000000                      .public stack
    \ 000000          stack:      .space  512
0018                  int stackTop;
    \ 000000                      .section zdata,bss
    \ 000000                      .public stackTop
    \ 000000          stackTop:   .space  2
0019                  
0020                  // Global Variables that hold screen resolution / current bitmap page / maxVickyMemory 
0021                  long vickyResX;
    \ 000000                      .section zdata,bss
    \ 000000                      .public vickyResX
    \ 000000          vickyResX:  .space  4
0022                  long vickyResY;
    \ 000000                      .section zdata,bss
    \ 000000                      .public vickyResY
    \ 000000          vickyResY:  .space  4
0023                  int  vickyBitmapPage;
    \ 000000                      .section zdata,bss
    \ 000000                      .public vickyBitmapPage
    \ 000000          vickyBitmapPage:
    \ 000000                      .space  2
0024                  long maxVickyMemory;
    \ 000000                      .section zdata,bss
    \ 000000                      .public maxVickyMemory
    \ 000000          maxVickyMemory:
    \ 000000                      .space  4
0025                  bool vBitPlane[2];
    \ 000000                      .section zdata,bss
    \ 000000                      .public vBitPlane
    \ 000000          vBitPlane:  .space  4
0026                  
0027                  // Define default palette
0028                  // Not used right now, need to implement a function to manually load the palette 
0029                  
0030                  
0031                  // A FEW ANSI FUNCTIONS - JUST BASIC SUPPORT!
0032                  
0033                  // --------------------------------------------------
0034                  // ANSI Code Wrapper Functions to make code readable
0035                  // By Ernesto Contreras 
0036                  // --------------------------------------------------
0037                  void ANSILocate (int row, int col)
0038                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public ANSILocate
    \ 000000          ANSILocate:
0039                  	printf("\033[%d;%dH",row,col);
    \ 000000 a6..                 ldx     dp:.tiny _Dp
    \ 000002 da                   phx
    \ 000003 48                   pha
    \ 000004 a9....               lda     ##`_StringLiteral_[27,91,37,100,59,37,100,72]`
    \ 000007 22......             jsl     long:printf
    \ 00000b 68                   pla
    \ 00000c 68                   pla
0040                  }
    \ 00000d 6b                   rtl
0041                  	
0042                  void ANSIClrScr ()
0043                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public ANSIClrScr
    \ 000000          ANSIClrScr:
0044                  	printf ("\033[2J"); // ANSI clear screen
    \ 000000 a9....               lda     ##`_StringLiteral_[27,91,50,74]`
    \ 000003 22......             jsl     long:printf
0045                  }
    \ 000007 6b                   rtl
0046                  
0047                  // I'm not sure this has any effect...
0048                  void ANSIScrSize (int x, int y)
0049                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public ANSIScrSize
    \ 000000          ANSIScrSize:
0050                  	printf("\033e[8;%d,%d;1H",x,y); // SET ANSI screen size to x,y
    \ 000000 a6..                 ldx     dp:.tiny _Dp
    \ 000002 da                   phx
    \ 000003 48                   pha
    \ 000004 a9....               lda     ##`_StringLiteral_[27,101,91,56,59,37,100,44,37,100,59,49,72]`
    \ 000007 22......             jsl     long:printf
    \ 00000b 68                   pla
    \ 00000c 68                   pla
0051                  }
    \ 00000d 6b                   rtl
0052                  
0053                  // ---------------------------------------------------
0054                  // Vicky II wrapper function to help inititate Graphics mode
0055                  // and do some really basic validations
0056                  // By Ernesto Contreras 
0057                  // --------------------------------------------------
0058                  int vickyVideomode (bool text,bool txtOverlay,bool bitmap,bool tiles,bool sprites,bool gammaFix,bool blank,int resolution)
0059                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public vickyVideomode
    \ 000000          vickyVideomode:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 5a                   phy
    \ 000003 5a                   phy
    \ 000004 5a                   phy
    \ 000005 5a                   phy
    \ 000006 8303                 sta     3,s
    \ 000008 a5..                 lda     dp:.tiny _Dp
    \ 00000a 85..                 sta     dp:.tiny (_Dp+8)
    \ 00000c a5..                 lda     dp:.tiny (_Dp+2)
    \ 00000e 8305                 sta     5,s
0060                  	int length;
0061                  	// init graphic mode variables and stack
0062                  	// Valid resolution values 
0063                  	// --------------------------
0064                  	// 0 - 640 x 480
0065                  	// 1 - 800 x 600
0066                  	// 2 - 320 x 240
0067                  	// 3 - 400 x 300
0068                  
0069                  	int intValue;
0070                  	int intResolution;
0071                  
0072                  // Setup initial values 
0073                  	intValue=0;
    \ 000010 a90000               lda     ##0
    \ 000013 8307                 sta     7,s
0074                  	// global variables
0075                    	vickyResX=0;
0076                  	vickyResY=0;
0077                  	vickyBitmapPage=0;
0078                  
0079                  	if (FOENIX_MODEL == Model_U256) 
    \ 000015 22......             jsl     long:`?L1229`
    \ 000019 aa                   tax
    \ 00001a 8e....               stx     vickyBitmapPage
    \ 00001d e220                 sep     #32
    \ 00001f af87e8af             lda     long:11528327
    \ 000023 c901                 cmp     #1
    \ 000025 c220                 rep     #32
    \ 000027 d00b                 bne     `?L17`
0080                  	{
0081                  		maxVickyMemory = 0x1fffff;
    \ 000029 a9ffff               lda     ##65535
    \ 00002c 8d....               sta     maxVickyMemory
    \ 00002f a91f00               lda     ##31
    \ 000032 8009                 bra     `?L1153`
    \ 000034          `?L17`:
0082                  	}
0083                  	else 
0084                  	{
0085                  		maxVickyMemory = 0x3fffff;
    \ 000034 a9ffff               lda     ##65535
    \ 000037 8d....               sta     maxVickyMemory
    \ 00003a a93f00               lda     ##63
    \ 00003d          `?L1153`:
    \ 00003d 8d....               sta     maxVickyMemory+2
0086                  	}
0087                      printf ("Memory detected: %lx \n\r",maxVickyMemory); 
    \ 000040 ad....               lda     maxVickyMemory+2
    \ 000043 48                   pha
    \ 000044 ad....               lda     maxVickyMemory
    \ 000047 48                   pha
    \ 000048 a9....               lda     ##`_StringLiteral_[77,101,109,111,114,121,32,100,101,116,101,99,116,101,100,58,32,37,108,120,32,10,13]`
    \ 00004b 22......             jsl     long:printf
    \ 00004f 8305                 sta     5,s
0088                  
0089                  	if (text) {intValue+=1;}  // enable text mode 
    \ 000051 68                   pla
    \ 000052 68                   pla
    \ 000053 a303                 lda     3,s
    \ 000055 f009                 beq     `?L20`
    \ 000057 a307                 lda     7,s
    \ 000059 1a                   inc     a
    \ 00005a 8301                 sta     1,s
    \ 00005c a301                 lda     1,s
    \ 00005e 8004                 bra     `?L21`
    \ 000060 a307     `?L20`:     lda     7,s
    \ 000062 8301                 sta     1,s
    \ 000064          `?L21`:
0090                  	if (txtOverlay) {intValue+=2;} // enable text overlay 
    \ 000064 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000066 f00a                 beq     `?L23`
    \ 000068 a301                 lda     1,s
    \ 00006a 1a                   inc     a
    \ 00006b 1a                   inc     a
    \ 00006c 8301                 sta     1,s
    \ 00006e a301                 lda     1,s
    \ 000070 8002                 bra     `?L24`
    \ 000072 a301     `?L23`:     lda     1,s
    \ 000074          `?L24`:
0091                  	if (bitmap || tiles || sprites) {intValue+=4;} // enable graphic module
    \ 000074 a305                 lda     5,s
    \ 000076 d008                 bne     `?L28`
    \ 000078 a30e                 lda     14,s
    \ 00007a d004                 bne     `?L28`
    \ 00007c a310                 lda     16,s
    \ 00007e f00c                 beq     `?L26`
    \ 000080 a90400   `?L28`:     lda     ##4
    \ 000083 18                   clc
    \ 000084 6301                 adc     1,s
    \ 000086 8301                 sta     1,s
    \ 000088 8301                 sta     1,s
    \ 00008a 8002                 bra     `?L27`
    \ 00008c a301     `?L26`:     lda     1,s
    \ 00008e          `?L27`:
0092                  	if (bitmap) {intValue+=8;} // enable bitmap engine
    \ 00008e a305                 lda     5,s
    \ 000090 f008                 beq     `?L29`
    \ 000092 a90800               lda     ##8
    \ 000095 18                   clc
    \ 000096 6301                 adc     1,s
    \ 000098 8002                 bra     `?L1152`
    \ 00009a a301     `?L29`:     lda     1,s
    \ 00009c aa       `?L1152`:   tax
0093                  	if (tiles) {intValue+=16;} // enable tiles engine
    \ 00009d a30e                 lda     14,s
    \ 00009f f006                 beq     `?L33`
    \ 0000a1 8a                   txa
    \ 0000a2 18                   clc
    \ 0000a3 691000               adc     ##16
    \ 0000a6 aa                   tax
    \ 0000a7          `?L33`:
0094                  	if (sprites) {intValue+=32;} // enable sprites engine 
    \ 0000a7 a310                 lda     16,s
    \ 0000a9 f006                 beq     `?L36`
    \ 0000ab 8a                   txa
    \ 0000ac 18                   clc
    \ 0000ad 692000               adc     ##32
    \ 0000b0 aa                   tax
    \ 0000b1          `?L36`:
0095                  	if (gammaFix) {intValue+=64;} // use gammaFix 
    \ 0000b1 a312                 lda     18,s
    \ 0000b3 f006                 beq     `?L39`
    \ 0000b5 8a                   txa
    \ 0000b6 18                   clc
    \ 0000b7 694000               adc     ##64
    \ 0000ba aa                   tax
    \ 0000bb          `?L39`:
0096                  	if (blank) {intValue+=128;} // turn off screen 
    \ 0000bb a314                 lda     20,s
    \ 0000bd f009                 beq     `?L41`
    \ 0000bf 8a                   txa
    \ 0000c0 18                   clc
    \ 0000c1 698000               adc     ##128
    \ 0000c4 8301                 sta     1,s
    \ 0000c6 8001                 bra     `?L1151`
    \ 0000c8 8a       `?L41`:     txa
    \ 0000c9 8301     `?L1151`:   sta     1,s
0097                  	if (resolution>=0 && resolution<4) // resolution selected (0-3)
    \ 0000cb a316                 lda     22,s
    \ 0000cd 1003                 bpl     `?L1416`
    \ 0000cf 4c....               jmp     .kbank `?L44`
    \ 0000d2 1a       `?L1416`:   inc     a
    \ 0000d3 3a                   dec     a
    \ 0000d4 38                   sec
    \ 0000d5 e90400               sbc     ##4
    \ 0000d8 5003                 bvc     `?L508`
    \ 0000da 490080               eor     ##-32768
    \ 0000dd 3003     `?L508`:    bmi     `?L1417`
    \ 0000df 4c....               jmp     .kbank `?L44`
    \ 0000e2          `?L1417`:
0098                  	{
0099                  		intResolution=resolution*256;
    \ 0000e2 a316                 lda     22,s
    \ 0000e4 eb                   xba
    \ 0000e5 2900ff               and     ##-256
    \ 0000e8 8303                 sta     3,s
0100                  		MASTER_CTRL_REG =  intResolution+intValue;
    \ 0000ea a301                 lda     1,s
    \ 0000ec 18                   clc
    \ 0000ed 6303                 adc     3,s
    \ 0000ef 8f0000af             sta     long:11468800
0101                  
0102                  		vickyResX=0;
    \ 0000f3 a90000               lda     ##0
0103                  		vickyResY=0;
0104                  
0105                  		switch (resolution)
    \ 0000f6 22......             jsl     long:`?L1229`
    \ 0000fa a316                 lda     22,s
    \ 0000fc 8305                 sta     5,s
    \ 0000fe a90300               lda     ##3
    \ 000101 c305                 cmp     5,s
    \ 000103 b003                 bcs     `?L1418`
    \ 000105 4c....               jmp     .kbank `?L49`
    \ 000108 a305     `?L1418`:   lda     5,s
    \ 00010a 0a                   asl     a
    \ 00010b aa                   tax
    \ 00010c bf......             lda     long:`?L464`,x
    \ 000110 48                   pha
    \ 000111 60                   rts
    \ 000112          `?L50`:
0106                  		{
0107                  		case 0:
0108                  			vickyResX=640;
0109                  			vickyResY=480;
0110                  			ANSIScrSize (80, 60);
0111                  			TEXT_COLS_VISIBLE = 80;
0112                  			TEXT_ROWS_VISIBLE = 60;
0113                  			break;
0114                  		case 1:
0115                  			vickyResX=800;
0116                  			vickyResY=600;
0117                  			ANSIScrSize (100, 75);
0118                  			TEXT_COLS_VISIBLE = 100;
0119                  			TEXT_ROWS_VISIBLE = 75;
0120                  			break;
0121                  		case 2:
0122                  			vickyResX=320;
0123                  			vickyResY=240;
0124                  			ANSIScrSize (40, 30);
0125                  			TEXT_COLS_VISIBLE = 40;
0126                  			TEXT_ROWS_VISIBLE = 30;
0127                  			break;
0128                  		case 3:
0129                  			vickyResX=400;
    \ 000112 a99001               lda     ##400
    \ 000115 8d....               sta     vickyResX
0130                  			vickyResY=300;
0131                  			ANSIScrSize (50, 37);
    \ 000118 22......             jsl     long:`?L1266`
    \ 00011c a92c01               lda     ##300
    \ 00011f 22......             jsl     long:`?L1233`
    \ 000123 a22500               ldx     ##37
    \ 000126 86..                 stx     dp:.tiny _Dp
    \ 000128 a93200               lda     ##50
    \ 00012b 22......             jsl     long:ANSIScrSize
0132                  			TEXT_COLS_VISIBLE = 50;
    \ 00012f a93200               lda     ##50
    \ 000132 8f110000             sta     long:17
0133                  			TEXT_ROWS_VISIBLE = 38;
    \ 000136 a92600               lda     ##38
0134                  			break;
    \ 000139 8079                 bra     `?L1150`
    \ 00013b a94001   `?L51`:     lda     ##320
    \ 00013e 8d....               sta     vickyResX
    \ 000141 22......             jsl     long:`?L1266`
    \ 000145 a9f000               lda     ##240
    \ 000148 22......             jsl     long:`?L1233`
    \ 00014c a21e00               ldx     ##30
    \ 00014f 86..                 stx     dp:.tiny _Dp
    \ 000151 a92800               lda     ##40
    \ 000154 22......             jsl     long:ANSIScrSize
    \ 000158 a92800               lda     ##40
    \ 00015b 8f110000             sta     long:17
    \ 00015f a91e00               lda     ##30
    \ 000162 8050                 bra     `?L1150`
    \ 000164 a92003   `?L52`:     lda     ##800
    \ 000167 8d....               sta     vickyResX
    \ 00016a 22......             jsl     long:`?L1266`
    \ 00016e a95802               lda     ##600
    \ 000171 22......             jsl     long:`?L1233`
    \ 000175 a24b00               ldx     ##75
    \ 000178 86..                 stx     dp:.tiny _Dp
    \ 00017a a96400               lda     ##100
    \ 00017d 22......             jsl     long:ANSIScrSize
    \ 000181 a96400               lda     ##100
    \ 000184 8f110000             sta     long:17
    \ 000188 a94b00               lda     ##75
    \ 00018b 8027                 bra     `?L1150`
    \ 00018d a98002   `?L53`:     lda     ##640
    \ 000190 8d....               sta     vickyResX
    \ 000193 22......             jsl     long:`?L1266`
    \ 000197 a9e001               lda     ##480
    \ 00019a 22......             jsl     long:`?L1233`
    \ 00019e a23c00               ldx     ##60
    \ 0001a1 86..                 stx     dp:.tiny _Dp
    \ 0001a3 a95000               lda     ##80
    \ 0001a6 22......             jsl     long:ANSIScrSize
    \ 0001aa a95000               lda     ##80
    \ 0001ad 8f110000             sta     long:17
    \ 0001b1 a93c00               lda     ##60
    \ 0001b4 8f150000 `?L1150`:   sta     long:21
    \ 0001b8 8007                 bra     `?L47`
    \ 0001ba          `?L49`:
0135                  		default:
0136                  			vickyResX=0;
    \ 0001ba a90000               lda     ##0
0137                  			vickyResY=0;
    \ 0001bd 22......             jsl     long:`?L1229`
    \ 0001c1          `?L47`:
0138                  		}
0139                  		printf ("graphics mode %d x:%ld y:%ld\n\r",resolution,vickyResX,vickyResY);
    \ 0001c1 ad....               lda     vickyResY+2
    \ 0001c4 48                   pha
    \ 0001c5 ad....               lda     vickyResY
    \ 0001c8 48                   pha
    \ 0001c9 ad....               lda     vickyResX+2
    \ 0001cc 48                   pha
    \ 0001cd ad....               lda     vickyResX
    \ 0001d0 48                   pha
    \ 0001d1 a31e                 lda     30,s
    \ 0001d3 48                   pha
    \ 0001d4 a9....               lda     ##`_StringLiteral_[103,114,97,112,104,105,99,115,32,109,111,100,101,32,37,100,32,120,58,37,108,100,32,121,58,37,108,100,10,13]`
    \ 0001d7 22......             jsl     long:printf
0140                  		return intResolution+intValue;	
    \ 0001db 3b                   tsc
    \ 0001dc 18                   clc
    \ 0001dd 690a00               adc     ##10
    \ 0001e0 1b                   tcs
    \ 0001e1 a301                 lda     1,s
    \ 0001e3 18                   clc
    \ 0001e4 6303                 adc     3,s
    \ 0001e6 8003                 bra     `?L16`
    \ 0001e8          `?L44`:
0141                  	}
0142                  	else {return -1;}
    \ 0001e8 a9ffff               lda     ##-1
    \ 0001eb          `?L16`:
0143                  }
    \ 0001eb 7a                   ply
    \ 0001ec 7a                   ply
    \ 0001ed 7a                   ply
    \ 0001ee 7a                   ply
    \ 0001ef 7a                   ply
    \ 0001f0 84..                 sty     dp:.tiny (_Dp+8)
    \ 0001f2 6b                   rtl
0144                  
0145                  // ---------------------------------------------------
0146                  // Vicky II wrapper functions to help setup bitmap
0147                  // and do some really basic validations
0148                  // By Ernesto Contreras 
0149                  // --------------------------------------------------
0150                  int vickyBitmap(int page, bool enable, long address, int lut, bool collision)
0151                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public vickyBitmap
    \ 000000          vickyBitmap:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 a8                   tay
    \ 000005 3b                   tsc
    \ 000006 38                   sec
    \ 000007 e90a00               sbc     ##10
    \ 00000a 1b                   tcs
    \ 00000b 98                   tya
    \ 00000c 8309                 sta     9,s
    \ 00000e a5..                 lda     dp:.tiny (_Dp+4)
    \ 000010 85..                 sta     dp:.tiny (_Dp+8)
    \ 000012 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000014 85..                 sta     dp:.tiny (_Dp+10)
    \ 000016 a5..                 lda     dp:.tiny _Dp
    \ 000018 8307                 sta     7,s
    \ 00001a a6..                 ldx     dp:.tiny (_Dp+2)
0152                  // page - Value between 0-1 to select one of the two bitmaps supported by Vicky II
0153                  // enable - true or false to show/hide bitmap 
0154                  // address - {0-0x1fffff} (2 Mb)| {0-0x3fffff} (4 Mb)
0155                  // lut - {0-7} select one of the 8 palettes
0156                  // 	collision - true | false  (Enable collision with the bitmap)
0157                  
0158                  	int intEnable;
0159                  	int intCollision;
0160                  	int intLut;
0161                  	
0162                  	// Translate Control Bits value
0163                  	//Bit 0 = disable/enable
0164                  	//Bit 1-3 = Target LUT address located at AF:2000 and up.
0165                  	//Bit 6 = Bitmap Collision On
0166                  	
0167                  	if (enable) {intEnable=1;} else {intEnable=0;}
    \ 00001c a307                 lda     7,s
    \ 00001e f007                 beq     `?L63`
    \ 000020 a90100               lda     ##1
    \ 000023 8301                 sta     1,s
    \ 000025 8005                 bra     `?L1155`
    \ 000027 a90000   `?L63`:     lda     ##0
    \ 00002a 8301                 sta     1,s
    \ 00002c 8301     `?L1155`:   sta     1,s
0168                  	if (collision) {intCollision=32;} else {intCollision=0;}
    \ 00002e a312                 lda     18,s
    \ 000030 f007                 beq     `?L66`
    \ 000032 a92000               lda     ##32
    \ 000035 8303                 sta     3,s
    \ 000037 8005                 bra     `?L1154`
    \ 000039 a90000   `?L66`:     lda     ##0
    \ 00003c 8303                 sta     3,s
    \ 00003e 8303     `?L1154`:   sta     3,s
0169                  	if (lut>=0 && lut <8)   {intLut=lut*2;}
    \ 000040 86..                 stx     dp:.tiny _Dp
    \ 000042 a5..                 lda     dp:.tiny _Dp
    \ 000044 3014                 bmi     `?L69`
    \ 000046 8a                   txa
    \ 000047 38                   sec
    \ 000048 e90800               sbc     ##8
    \ 00004b 5003                 bvc     `?L515`
    \ 00004d 490080               eor     ##-32768
    \ 000050 1008     `?L515`:    bpl     `?L69`
    \ 000052 8a                   txa
    \ 000053 0a                   asl     a
    \ 000054 8305                 sta     5,s
    \ 000056 8305                 sta     5,s
    \ 000058 8002                 bra     `?L70`
    \ 00005a a305     `?L69`:     lda     5,s
    \ 00005c          `?L70`:
0170                  	
0171                  	if (address >= 0 && address < (maxVickyMemory-(vickyResX*vickyResY)))
    \ 00005c a5..                 lda     dp:.tiny (_Dp+10)
    \ 00005e 1003                 bpl     `?L1419`
    \ 000060 4c....               jmp     .kbank `?L72`
    \ 000063          `?L1419`:
    \ 000063 ac....               ldy     vickyResX
    \ 000066 84..                 sty     dp:.tiny _Dp
    \ 000068 ac....               ldy     vickyResX+2
    \ 00006b 84..                 sty     dp:.tiny (_Dp+2)
    \ 00006d ac....               ldy     vickyResY
    \ 000070 84..                 sty     dp:.tiny (_Dp+4)
    \ 000072 ac....               ldy     vickyResY+2
    \ 000075 84..                 sty     dp:.tiny (_Dp+6)
    \ 000077 22......             jsl     long:_Mul32
    \ 00007b 86..                 stx     dp:.tiny (_Dp+2)
    \ 00007d 85..                 sta     dp:.tiny _Dp
    \ 00007f ad....               lda     maxVickyMemory
    \ 000082 ae....               ldx     maxVickyMemory+2
    \ 000085 38                   sec
    \ 000086 e5..                 sbc     dp:.tiny _Dp
    \ 000088 48                   pha
    \ 000089 8a                   txa
    \ 00008a e5..                 sbc     dp:.tiny (_Dp+2)
    \ 00008c aa                   tax
    \ 00008d 68                   pla
    \ 00008e 86..                 stx     dp:.tiny (_Dp+2)
    \ 000090 85..                 sta     dp:.tiny _Dp
    \ 000092 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000094 c5..                 cmp     dp:.tiny _Dp
    \ 000096 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000098 e5..                 sbc     dp:.tiny (_Dp+2)
    \ 00009a 5003                 bvc     `?L518`
    \ 00009c 490080               eor     ##-32768
    \ 00009f 3003     `?L518`:    bmi     `?L1420`
    \ 0000a1 4c....               jmp     .kbank `?L72`
    \ 0000a4          `?L1420`:
0172                  	{
0173                  		if (page==0 || page ==1)
    \ 0000a4 a309                 lda     9,s
    \ 0000a6 f008                 beq     `?L77`
    \ 0000a8 c90100               cmp     ##1
    \ 0000ab f003                 beq     `?L1421`
    \ 0000ad 4c....               jmp     .kbank `?L75`
    \ 0000b0          `?L1421`:
    \ 0000b0          `?L77`:
0174                  		{
0175                  			vickyBitmapPage=page; // set defined page as current Page
    \ 0000b0 8d....               sta     vickyBitmapPage
0176                  			bitplane[page].control = intEnable+intLut+intCollision;
    \ 0000b3 a305                 lda     5,s
    \ 0000b5 18                   clc
    \ 0000b6 6301                 adc     1,s
    \ 0000b8 18                   clc
    \ 0000b9 6303                 adc     3,s
    \ 0000bb 48                   pha
    \ 0000bc a30b                 lda     11,s
    \ 0000be 0a                   asl     a
    \ 0000bf 0a                   asl     a
    \ 0000c0 0a                   asl     a
    \ 0000c1 aa                   tax
    \ 0000c2 68                   pla
    \ 0000c3 e220                 sep     #32
    \ 0000c5 9f0001af             sta     long:11469056,x
    \ 0000c9 c220                 rep     #32
0177                  			bitplane[page].start = (__far vram_ptr) address;
    \ 0000cb a6..                 ldx     dp:.tiny (_Dp+10)
    \ 0000cd a5..                 lda     dp:.tiny (_Dp+8)
    \ 0000cf da                   phx
    \ 0000d0 48                   pha
    \ 0000d1 a00001               ldy     ##256
    \ 0000d4 84..                 sty     dp:.tiny _Dp
    \ 0000d6 a0af00               ldy     ##175
    \ 0000d9 84..                 sty     dp:.tiny (_Dp+2)
    \ 0000db a30d                 lda     13,s
0178                  			bitplane[page].x_offset = 0;
0179                  			bitplane[page].y_offset = 0;
0180                  			bitplane[page].reserved = 0;
0181                  			vBitPlane[page]=enable;
0182                  			return 0;
    \ 0000dd 22......             jsl     long:`?L1208`
    \ 0000e1 68                   pla
    \ 0000e2 fa                   plx
    \ 0000e3 a00100               ldy     ##1
    \ 0000e6 97..                 sta     [.tiny _Dp],y
    \ 0000e8 8a                   txa
    \ 0000e9 e220                 sep     #32
    \ 0000eb 22......             jsl     long:`?L1272`
    \ 0000ef 22......             jsl     long:`?L1236`
    \ 0000f3 a309                 lda     9,s
    \ 0000f5 22......             jsl     long:`?L1208`
    \ 0000f9 e220                 sep     #32
    \ 0000fb a900                 lda     #0
    \ 0000fd c8                   iny
    \ 0000fe 97..                 sta     [.tiny _Dp],y
    \ 000100 c220                 rep     #32
    \ 000102 22......             jsl     long:`?L1236`
    \ 000106 a309                 lda     9,s
    \ 000108 22......             jsl     long:`?L1208`
    \ 00010c e220                 sep     #32
    \ 00010e a900                 lda     #0
    \ 000110 c8                   iny
    \ 000111 97..                 sta     [.tiny _Dp],y
    \ 000113 c220                 rep     #32
    \ 000115 a20001               ldx     ##256
    \ 000118 86..                 stx     dp:.tiny _Dp
    \ 00011a a2af00               ldx     ##175
    \ 00011d 86..                 stx     dp:.tiny (_Dp+2)
    \ 00011f a309                 lda     9,s
    \ 000121 22......             jsl     long:`?L1208`
    \ 000125 a90000               lda     ##0
    \ 000128 c8                   iny
    \ 000129 97..                 sta     [.tiny _Dp],y
    \ 00012b a309                 lda     9,s
    \ 00012d 0a                   asl     a
    \ 00012e aa                   tax
    \ 00012f a307                 lda     7,s
    \ 000131 9d....               sta     vBitPlane,x
    \ 000134 a90000               lda     ##0
    \ 000137 8047                 bra     `?L62`
    \ 000139          `?L75`:
0183                  		}
0184                  			else 
0185                  			{
0186                  				printf ("Bitmap page must be 0 or 1!");
    \ 000139 a9....               lda     ##`_StringLiteral_Bitmap page must be 0 or 1!`
    \ 00013c 22......             jsl     long:printf
0187                  				return -1;
    \ 000140 a9ffff               lda     ##-1
    \ 000143 803b                 bra     `?L62`
    \ 000145          `?L72`:
0188                  			} // Page number must be between 1-2 Error
0189                  	}
0190                  		else  
0191                  		{
0192                  			printf ("Not enough memory at address %lx for a d% by d% screen!, %xl bytes required.\n\r",address,vickyResX,vickyResY,(long)vickyResX*vickyResY);
    \ 000145 22......             jsl     long:`?L1212`
    \ 000149 da                   phx
    \ 00014a 48                   pha
    \ 00014b ad....               lda     vickyResY+2
    \ 00014e 48                   pha
    \ 00014f ad....               lda     vickyResY
    \ 000152 48                   pha
    \ 000153 ad....               lda     vickyResX+2
    \ 000156 48                   pha
    \ 000157 ad....               lda     vickyResX
    \ 00015a 48                   pha
    \ 00015b a5..                 lda     dp:.tiny (_Dp+10)
    \ 00015d 48                   pha
    \ 00015e a5..                 lda     dp:.tiny (_Dp+8)
    \ 000160 48                   pha
    \ 000161 a9....               lda     ##`_StringLiteral_[78,111,116,32,101,110,111,117,103,104,32,109,101,109,111,114,121,32,97,116,32,97,100,100,114,101,115,115,32,37,108,120,32,102,111,114,32,97,32,100,37,32,98,121,32,100,37,32,115,99,114,101,101,110,33,44,32,37,120,108,32,98,121,116,101,115,32,114,101,113,117,105,114,101,100,46,10,13]`
    \ 000164 22......             jsl     long:printf
0193                  			printf ("VRAM detected: 0xb00000 - %lx\n\r",maxVickyMemory);
    \ 000168 ad....               lda     maxVickyMemory+2
    \ 00016b 48                   pha
    \ 00016c ad....               lda     maxVickyMemory
    \ 00016f 48                   pha
    \ 000170 a9....               lda     ##`_StringLiteral_[86,82,65,77,32,100,101,116,101,99,116,101,100,58,32,48,120,98,48,48,48,48,48,32,45,32,37,108,120,10,13]`
    \ 000173 22......             jsl     long:printf
0194                  			return -2;
    \ 000177 3b                   tsc
    \ 000178 18                   clc
    \ 000179 691400               adc     ##20
    \ 00017c 1b                   tcs
    \ 00017d a9feff               lda     ##-2
    \ 000180          `?L62`:
0195                  		} // out of memory range Error
0196                  }
    \ 000180 a8                   tay
    \ 000181 3b                   tsc
    \ 000182 18                   clc
    \ 000183 690a00               adc     ##10
    \ 000186 1b                   tcs
    \ 000187 98                   tya
    \ 000188 7a                   ply
    \ 000189 84..                 sty     dp:.tiny (_Dp+10)
    \ 00018b 7a                   ply
    \ 00018c 84..                 sty     dp:.tiny (_Dp+8)
    \ 00018e 6b                   rtl
0197                  
0198                  void vickyDefPalette ()
0199                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public vickyDefPalette
    \ 000000          vickyDefPalette:
    \ 000000 3b                   tsc
    \ 000001 38                   sec
    \ 000002 e90604               sbc     ##1030
    \ 000005 1b                   tcs
0200                  	uint8_t __far *ptr;
0201                      uint8_t palette[] ={
    \ 000006 3b                   tsc
    \ 000007 18                   clc
    \ 000008 690700               adc     ##7
    \ 00000b 85..                 sta     dp:.tiny _Dp
    \ 00000d a2....               ldx     ##`??_Initializer0`
    \ 000010 86..                 stx     dp:.tiny (_Dp+2)
    \ 000012 a0fe03               ldy     ##1022
    \ 000015 22......             jsl     long:_MoveLongNear
0202                  	0,0,0,255,0,0,0,255,35,35,34,104,73,69,67,139,
0203                  	113,104,98,255,152,139,130,255,186,174,166,93,200,200,200,117,
0204                  	84,93,98,255,101,117,133,255,121,140,158,175,137,161,174,195,
0205                  	164,175,187,255,177,195,204,255,201,219,234,49,214,243,255,61,
0206                  	38,49,88,255,59,61,115,255,65,80,136,110,76,98,154,141,
0207                  	81,110,173,255,107,141,213,255,132,170,251,39,127,206,255,56,
0208                  	53,39,0,255,80,56,0,255,94,77,0,111,127,102,11,140,
0209                  	137,111,0,255,167,140,50,255,214,174,36,43,255,214,136,54,
0210                  	41,43,102,255,58,54,148,255,70,77,182,120,70,94,205,155,
0211                  	64,120,227,255,78,155,249,255,78,188,255,43,73,233,255,69,
0212                  	74,43,40,255,104,69,58,255,132,95,97,144,153,119,122,178,
0213                  	178,144,134,255,217,178,150,255,255,214,199,34,255,236,198,50,
0214                  	25,34,0,255,33,50,0,255,27,74,23,105,24,89,34,136,
0215                  	12,105,47,255,34,136,81,255,45,164,125,31,52,204,166,50,
0216                  	47,31,24,255,77,50,35,255,107,70,37,142,138,107,54,178,
0217                  	184,142,49,255,227,178,65,255,255,210,82,51,253,245,116,63,
0218                  	44,51,26,255,56,63,47,255,64,81,56,116,64,92,50,137,
0219                  	85,116,65,255,96,137,73,255,125,182,85,7,161,218,145,33,
0220                  	17,7,94,255,29,33,130,255,53,60,182,118,95,92,228,155,
0221                  	118,118,255,255,168,155,255,255,199,187,255,49,255,219,255,71,
0222                  	54,49,45,255,77,71,72,255,105,92,91,135,127,115,115,174,
0223                  	149,135,132,255,190,174,171,255,219,199,186,48,246,240,235,60,
0224                  	60,48,59,255,69,60,90,255,88,82,138,130,96,107,174,159,
0225                  	108,130,199,255,117,159,216,255,129,197,236,34,171,250,255,53,
0226                  	42,34,49,255,60,53,74,255,70,70,94,108,81,90,114,138,
0227                  	84,108,126,255,110,138,158,255,136,165,192,16,154,191,221,40,
0228                  	38,16,46,255,61,40,73,255,89,54,102,109,117,84,151,120,
0229                  	145,109,185,255,170,120,193,255,191,153,219,46,218,198,248,64,
0230                  	73,46,0,255,81,64,0,255,98,81,0,130,109,107,0,160,
0231                  	121,130,0,255,135,160,0,255,163,191,0,255,218,222,0,74,
0232                  	37,49,69,255,60,74,97,255,68,97,126,144,81,121,153,169,
0233                  	98,144,178,255,110,169,204,255,130,203,232,9,163,234,251,36,
0234                  	38,9,95,255,52,36,110,110,71,70,144,100,87,96,167,112,
0235                  	100,125,189,189,112,151,206,206,124,182,237,237,147,212,237,128,
0236                  	88,53,50,50,128,82,74,74,157,101,100,100,193,119,120,239,
0237                  	226,140,142,142,239,155,156,156,255,174,184,184,255,212,220,59,
0238                  	41,23,67,67,59,43,113,113,82,59,159,159,105,74,217,175,
0239                  	128,93,248,248,175,125,255,255,197,166,255,255,255,205,255,50,
0240                  	28,37,73,73,50,52,99,99,71,75,124,124,90,89,152,122,
0241                  	110,111,172,172,122,126,193,193,122,141,210,210,124,154,229,8,
0242                  	0,41,32,32,8,79,47,47,0,93,73,73,8,115,97,38,
0243                  	30,131,124,124,38,154,150,150,51,170,180,180,50,204,208,9,
0244                  	0,42,98,98,9,59,117,117,18,79,133,133,32,101,158,57,
0245                  	46,136,186,186,57,170,209,209,75,210,232,232,79,246,255,85,
0246                  	61,35,38,38,85,56,59,59,111,80,86,86,110,104,117,131,
0247                  	123,122,145,145,131,151,179,179,142,175,207,207,177,223,254,71,
0248                  	67,44,29,29,71,61,46,255,60,77,57,57,51,95,76,45,
0249                  	44,113,88,88,45,132,107,197,36,158,120,120,57,189,127,58,
0250                  	35,36,55,55,58,57,83,83,73,76,120,120,79,93,148,99,
0251                  	88,109,169,169,99,126,191,191,116,147,215,215,128,163,244,90,
0252                  	71,75,45,45,90,101,71,71,105,123,91,91,125,149,113,150,
0253                  	142,174,135,135,150,193,138,138,193,209,169,169,235,250,224,95,
0254                  	64,27,0,0,95,49,3,3,124,72,7,7,162,93,16,234,
0255                  	192,118,20,20,234,151,64,64,241,177,85,85,255,204,109,115,
0256                  	105,71,85,85,115,93,118,118,136,116,151,151,147,140,185,157,
0257                  	154,163,213,213,157,189,235,235,155,213,255,255,134,247,253,81,
0258                  	33,29,29,29,81,49,60,60,127,74,88,88,186,100,121,236,
0259                  	241,133,149,149,236,150,169,169,247,171,186,186,254,189,209,93,
0260                  	80,36,38,38,93,51,40,40,114,61,45,45,131,80,61,197,
0261                  	174,101,81,81,197,116,82,82,196,130,108,108,195,147,131,74,
0262                  	41,33,73,73,74,65,94,94,91,83,119,119,106,96,145,148,
0263                  	132,121,173,173,148,139,181,181,170,174,212,212,207,226,255,39,
0264                  	3,28,114,114,39,51,156,156,62,90,191,191,39,134,233,5,
0265                  	8,177,255,255,5,207,255,255,43,240,255,255,255,255,255,65};
0266                  
0267                  	int vi, index;
0268                  	vi=0;
    \ 000019 a90000               lda     ##0
    \ 00001c 8301                 sta     1,s
0269                  	for (index=0;index<256;index++)
    \ 00001e aa                   tax
    \ 00001f a301                 lda     1,s
    \ 000021 8303                 sta     3,s
    \ 000023 8a                   txa
    \ 000024 8305     `?L1156`:   sta     5,s
    \ 000026 a305                 lda     5,s
    \ 000028 38                   sec
    \ 000029 e90001               sbc     ##256
    \ 00002c 5003                 bvc     `?L525`
    \ 00002e 490080               eor     ##-32768
    \ 000031 3007     `?L525`:    bmi     `?L84`
0270                  	{
0271                  		ptr= (long)GRPH_LUT0_LONG +(index*4);
0272                  		//printf ("ptr:%lx r:%d g:%d b:%d a:%d \r",ptr, palette[vi], palette[vi+1], palette[vi+2], palette[vi+3]);
0273                  		// set rgb components at palette address
0274                  		*(ptr+2)= palette[vi++]; // red
0275                  		*(ptr+1)= palette[vi++]; // green
0276                  		*(ptr)=   palette[vi++]; // blue 
0277                  		*(ptr+3)= palette[vi++]; // alpha
0278                  	}
0279                  }
    \ 000033 3b                   tsc
    \ 000034 18                   clc
    \ 000035 690604               adc     ##1030
    \ 000038 1b                   tcs
    \ 000039 6b                   rtl
    \ 00003a a305     `?L84`:     lda     5,s
    \ 00003c 0a                   asl     a
    \ 00003d 0a                   asl     a
    \ 00003e a20000               ldx     ##0
    \ 000041 a8                   tay
    \ 000042 1001                 bpl     `?L527`
    \ 000044 ca                   dex
    \ 000045 18       `?L527`:    clc
    \ 000046 690020               adc     ##8192
    \ 000049 48                   pha
    \ 00004a 8a                   txa
    \ 00004b 69af00               adc     ##175
    \ 00004e aa                   tax
    \ 00004f 68                   pla
    \ 000050 86..                 stx     dp:.tiny (_Dp+2)
    \ 000052 85..                 sta     dp:.tiny _Dp
    \ 000054 a303                 lda     3,s
    \ 000056 8301                 sta     1,s
    \ 000058 a303                 lda     3,s
    \ 00005a 1a                   inc     a
    \ 00005b 8303                 sta     3,s
    \ 00005d 3b                   tsc
    \ 00005e 18                   clc
    \ 00005f 690700               adc     ##7
    \ 000062 a8                   tay
    \ 000063 b301                 lda     (1,s),y
    \ 000065 e220                 sep     #32
    \ 000067 a00200               ldy     ##2
    \ 00006a 97..                 sta     [.tiny _Dp],y
    \ 00006c c220                 rep     #32
    \ 00006e a303                 lda     3,s
    \ 000070 8301                 sta     1,s
    \ 000072 a303                 lda     3,s
    \ 000074 1a                   inc     a
    \ 000075 8303                 sta     3,s
    \ 000077 3b                   tsc
    \ 000078 18                   clc
    \ 000079 690700               adc     ##7
    \ 00007c a8                   tay
    \ 00007d b301                 lda     (1,s),y
    \ 00007f e220                 sep     #32
    \ 000081 a00100               ldy     ##1
    \ 000084 97..                 sta     [.tiny _Dp],y
    \ 000086 c220                 rep     #32
    \ 000088 a303                 lda     3,s
    \ 00008a 8301                 sta     1,s
    \ 00008c a303                 lda     3,s
    \ 00008e 1a                   inc     a
    \ 00008f 8303                 sta     3,s
    \ 000091 3b                   tsc
    \ 000092 18                   clc
    \ 000093 690700               adc     ##7
    \ 000096 a8                   tay
    \ 000097 b301                 lda     (1,s),y
    \ 000099 e220                 sep     #32
    \ 00009b 87..                 sta     [.tiny _Dp]
    \ 00009d c220                 rep     #32
    \ 00009f a303                 lda     3,s
    \ 0000a1 8301                 sta     1,s
    \ 0000a3 a303                 lda     3,s
    \ 0000a5 1a                   inc     a
    \ 0000a6 8303                 sta     3,s
    \ 0000a8 3b                   tsc
    \ 0000a9 18                   clc
    \ 0000aa 690700               adc     ##7
    \ 0000ad a8                   tay
    \ 0000ae b301                 lda     (1,s),y
    \ 0000b0 e220                 sep     #32
    \ 0000b2 22......             jsl     long:`?L1272`
    \ 0000b6 a305                 lda     5,s
    \ 0000b8 1a                   inc     a
    \ 0000b9 8301                 sta     1,s
    \ 0000bb a301                 lda     1,s
    \ 0000bd 4c....               jmp     .kbank `?L1156`
    \ 000000                      .section cdata,rodata
    \ 000000          `??_Initializer0`:
    \ 000000 000000ff             .byte   0,0,0,-1,0,0,0,-1
    \ 000004 000000ff
    \ 000008 23232268             .byte   35,35,34,104,73,69,67,-117
    \ 00000c 4945438b
    \ 000010 716862ff             .byte   113,104,98,-1,-104,-117,-126,-1
    \ 000014 988b82ff
    \ 000018 baaea65d             .byte   -70,-82,-90,93,-56,-56,-56,117
    \ 00001c c8c8c875
    \ 000020 545d62ff             .byte   84,93,98,-1,101,117,-123,-1
    \ 000024 657585ff
    \ 000028 798c9eaf             .byte   121,-116,-98,-81,-119,-95,-82,-61
    \ 00002c 89a1aec3
    \ 000030 a4afbbff             .byte   -92,-81,-69,-1,-79,-61,-52,-1
    \ 000034 b1c3ccff
    \ 000038 c9dbea31             .byte   -55,-37,-22,49,-42,-13,-1,61
    \ 00003c d6f3ff3d
    \ 000040 263158ff             .byte   38,49,88,-1,59,61,115,-1
    \ 000044 3b3d73ff
    \ 000048 4150886e             .byte   65,80,-120,110,76,98,-102,-115
    \ 00004c 4c629a8d
    \ 000050 516eadff             .byte   81,110,-83,-1,107,-115,-43,-1
    \ 000054 6b8dd5ff
    \ 000058 84aafb27             .byte   -124,-86,-5,39,127,-50,-1,56
    \ 00005c 7fceff38
    \ 000060 352700ff             .byte   53,39,0,-1,80,56,0,-1
    \ 000064 503800ff
    \ 000068 5e4d006f             .byte   94,77,0,111,127,102,11,-116
    \ 00006c 7f660b8c
    \ 000070 896f00ff             .byte   -119,111,0,-1,-89,-116,50,-1
    \ 000074 a78c32ff
    \ 000078 d6ae242b             .byte   -42,-82,36,43,-1,-42,-120,54
    \ 00007c ffd68836
    \ 000080 292b66ff             .byte   41,43,102,-1,58,54,-108,-1
    \ 000084 3a3694ff
    \ 000088 464db678             .byte   70,77,-74,120,70,94,-51,-101
    \ 00008c 465ecd9b
    \ 000090 4078e3ff             .byte   64,120,-29,-1,78,-101,-7,-1
    \ 000094 4e9bf9ff
    \ 000098 4ebcff2b             .byte   78,-68,-1,43,73,-23,-1,69
    \ 00009c 49e9ff45
    \ 0000a0 4a2b28ff             .byte   74,43,40,-1,104,69,58,-1
    \ 0000a4 68453aff
    \ 0000a8 845f6190             .byte   -124,95,97,-112,-103,119,122,-78
    \ 0000ac 99777ab2
    \ 0000b0 b29086ff             .byte   -78,-112,-122,-1,-39,-78,-106,-1
    \ 0000b4 d9b296ff
    \ 0000b8 ffd6c722             .byte   -1,-42,-57,34,-1,-20,-58,50
    \ 0000bc ffecc632
    \ 0000c0 192200ff             .byte   25,34,0,-1,33,50,0,-1
    \ 0000c4 213200ff
    \ 0000c8 1b4a1769             .byte   27,74,23,105,24,89,34,-120
    \ 0000cc 18592288
    \ 0000d0 0c692fff             .byte   12,105,47,-1,34,-120,81,-1
    \ 0000d4 228851ff
    \ 0000d8 2da47d1f             .byte   45,-92,125,31,52,-52,-90,50
    \ 0000dc 34cca632
    \ 0000e0 2f1f18ff             .byte   47,31,24,-1,77,50,35,-1
    \ 0000e4 4d3223ff
    \ 0000e8 6b46258e             .byte   107,70,37,-114,-118,107,54,-78
    \ 0000ec 8a6b36b2
    \ 0000f0 b88e31ff             .byte   -72,-114,49,-1,-29,-78,65,-1
    \ 0000f4 e3b241ff
    \ 0000f8 ffd25233             .byte   -1,-46,82,51,-3,-11,116,63
    \ 0000fc fdf5743f
    \ 000100 2c331aff             .byte   44,51,26,-1,56,63,47,-1
    \ 000104 383f2fff
    \ 000108 40513874             .byte   64,81,56,116,64,92,50,-119
    \ 00010c 405c3289
    \ 000110 557441ff             .byte   85,116,65,-1,96,-119,73,-1
    \ 000114 608949ff
    \ 000118 7db65507             .byte   125,-74,85,7,-95,-38,-111,33
    \ 00011c a1da9121
    \ 000120 11075eff             .byte   17,7,94,-1,29,33,-126,-1
    \ 000124 1d2182ff
    \ 000128 353cb676             .byte   53,60,-74,118,95,92,-28,-101
    \ 00012c 5f5ce49b
    \ 000130 7676ffff             .byte   118,118,-1,-1,-88,-101,-1,-1
    \ 000134 a89bffff
    \ 000138 c7bbff31             .byte   -57,-69,-1,49,-1,-37,-1,71
    \ 00013c ffdbff47
    \ 000140 36312dff             .byte   54,49,45,-1,77,71,72,-1
    \ 000144 4d4748ff
    \ 000148 695c5b87             .byte   105,92,91,-121,127,115,115,-82
    \ 00014c 7f7373ae
    \ 000150 958784ff             .byte   -107,-121,-124,-1,-66,-82,-85,-1
    \ 000154 beaeabff
    \ 000158 dbc7ba30             .byte   -37,-57,-70,48,-10,-16,-21,60
    \ 00015c f6f0eb3c
    \ 000160 3c303bff             .byte   60,48,59,-1,69,60,90,-1
    \ 000164 453c5aff
    \ 000168 58528a82             .byte   88,82,-118,-126,96,107,-82,-97
    \ 00016c 606bae9f
    \ 000170 6c82c7ff             .byte   108,-126,-57,-1,117,-97,-40,-1
    \ 000174 759fd8ff
    \ 000178 81c5ec22             .byte   -127,-59,-20,34,-85,-6,-1,53
    \ 00017c abfaff35
    \ 000180 2a2231ff             .byte   42,34,49,-1,60,53,74,-1
    \ 000184 3c354aff
    \ 000188 46465e6c             .byte   70,70,94,108,81,90,114,-118
    \ 00018c 515a728a
    \ 000190 546c7eff             .byte   84,108,126,-1,110,-118,-98,-1
    \ 000194 6e8a9eff
    \ 000198 88a5c010             .byte   -120,-91,-64,16,-102,-65,-35,40
    \ 00019c 9abfdd28
    \ 0001a0 26102eff             .byte   38,16,46,-1,61,40,73,-1
    \ 0001a4 3d2849ff
    \ 0001a8 5936666d             .byte   89,54,102,109,117,84,-105,120
    \ 0001ac 75549778
    \ 0001b0 916db9ff             .byte   -111,109,-71,-1,-86,120,-63,-1
    \ 0001b4 aa78c1ff
    \ 0001b8 bf99db2e             .byte   -65,-103,-37,46,-38,-58,-8,64
    \ 0001bc dac6f840
    \ 0001c0 492e00ff             .byte   73,46,0,-1,81,64,0,-1
    \ 0001c4 514000ff
    \ 0001c8 62510082             .byte   98,81,0,-126,109,107,0,-96
    \ 0001cc 6d6b00a0
    \ 0001d0 798200ff             .byte   121,-126,0,-1,-121,-96,0,-1
    \ 0001d4 87a000ff
    \ 0001d8 a3bf00ff             .byte   -93,-65,0,-1,-38,-34,0,74
    \ 0001dc dade004a
    \ 0001e0 253145ff             .byte   37,49,69,-1,60,74,97,-1
    \ 0001e4 3c4a61ff
    \ 0001e8 44617e90             .byte   68,97,126,-112,81,121,-103,-87
    \ 0001ec 517999a9
    \ 0001f0 6290b2ff             .byte   98,-112,-78,-1,110,-87,-52,-1
    \ 0001f4 6ea9ccff
    \ 0001f8 82cbe809             .byte   -126,-53,-24,9,-93,-22,-5,36
    \ 0001fc a3eafb24
    \ 000200 26095fff             .byte   38,9,95,-1,52,36,110,110
    \ 000204 34246e6e
    \ 000208 47469064             .byte   71,70,-112,100,87,96,-89,112
    \ 00020c 5760a770
    \ 000210 647dbdbd             .byte   100,125,-67,-67,112,-105,-50,-50
    \ 000214 7097cece
    \ 000218 7cb6eded             .byte   124,-74,-19,-19,-109,-44,-19,-128
    \ 00021c 93d4ed80
    \ 000220 58353232             .byte   88,53,50,50,-128,82,74,74
    \ 000224 80524a4a
    \ 000228 9d656464             .byte   -99,101,100,100,-63,119,120,-17
    \ 00022c c17778ef
    \ 000230 e28c8e8e             .byte   -30,-116,-114,-114,-17,-101,-100,-100
    \ 000234 ef9b9c9c
    \ 000238 ffaeb8b8             .byte   -1,-82,-72,-72,-1,-44,-36,59
    \ 00023c ffd4dc3b
    \ 000240 29174343             .byte   41,23,67,67,59,43,113,113
    \ 000244 3b2b7171
    \ 000248 523b9f9f             .byte   82,59,-97,-97,105,74,-39,-81
    \ 00024c 694ad9af
    \ 000250 805df8f8             .byte   -128,93,-8,-8,-81,125,-1,-1
    \ 000254 af7dffff
    \ 000258 c5a6ffff             .byte   -59,-90,-1,-1,-1,-51,-1,50
    \ 00025c ffcdff32
    \ 000260 1c254949             .byte   28,37,73,73,50,52,99,99
    \ 000264 32346363
    \ 000268 474b7c7c             .byte   71,75,124,124,90,89,-104,122
    \ 00026c 5a59987a
    \ 000270 6e6facac             .byte   110,111,-84,-84,122,126,-63,-63
    \ 000274 7a7ec1c1
    \ 000278 7a8dd2d2             .byte   122,-115,-46,-46,124,-102,-27,8
    \ 00027c 7c9ae508
    \ 000280 00292020             .byte   0,41,32,32,8,79,47,47
    \ 000284 084f2f2f
    \ 000288 005d4949             .byte   0,93,73,73,8,115,97,38
    \ 00028c 08736126
    \ 000290 1e837c7c             .byte   30,-125,124,124,38,-102,-106,-106
    \ 000294 269a9696
    \ 000298 33aab4b4             .byte   51,-86,-76,-76,50,-52,-48,9
    \ 00029c 32ccd009
    \ 0002a0 002a6262             .byte   0,42,98,98,9,59,117,117
    \ 0002a4 093b7575
    \ 0002a8 124f8585             .byte   18,79,-123,-123,32,101,-98,57
    \ 0002ac 20659e39
    \ 0002b0 2e88baba             .byte   46,-120,-70,-70,57,-86,-47,-47
    \ 0002b4 39aad1d1
    \ 0002b8 4bd2e8e8             .byte   75,-46,-24,-24,79,-10,-1,85
    \ 0002bc 4ff6ff55
    \ 0002c0 3d232626             .byte   61,35,38,38,85,56,59,59
    \ 0002c4 55383b3b
    \ 0002c8 6f505656             .byte   111,80,86,86,110,104,117,-125
    \ 0002cc 6e687583
    \ 0002d0 7b7a9191             .byte   123,122,-111,-111,-125,-105,-77,-77
    \ 0002d4 8397b3b3
    \ 0002d8 8eafcfcf             .byte   -114,-81,-49,-49,-79,-33,-2,71
    \ 0002dc b1dffe47
    \ 0002e0 432c1d1d             .byte   67,44,29,29,71,61,46,-1
    \ 0002e4 473d2eff
    \ 0002e8 3c4d3939             .byte   60,77,57,57,51,95,76,45
    \ 0002ec 335f4c2d
    \ 0002f0 2c715858             .byte   44,113,88,88,45,-124,107,-59
    \ 0002f4 2d846bc5
    \ 0002f8 249e7878             .byte   36,-98,120,120,57,-67,127,58
    \ 0002fc 39bd7f3a
    \ 000300 23243737             .byte   35,36,55,55,58,57,83,83
    \ 000304 3a395353
    \ 000308 494c7878             .byte   73,76,120,120,79,93,-108,99
    \ 00030c 4f5d9463
    \ 000310 586da9a9             .byte   88,109,-87,-87,99,126,-65,-65
    \ 000314 637ebfbf
    \ 000318 7493d7d7             .byte   116,-109,-41,-41,-128,-93,-12,90
    \ 00031c 80a3f45a
    \ 000320 474b2d2d             .byte   71,75,45,45,90,101,71,71
    \ 000324 5a654747
    \ 000328 697b5b5b             .byte   105,123,91,91,125,-107,113,-106
    \ 00032c 7d957196
    \ 000330 8eae8787             .byte   -114,-82,-121,-121,-106,-63,-118,-118
    \ 000334 96c18a8a
    \ 000338 c1d1a9a9             .byte   -63,-47,-87,-87,-21,-6,-32,95
    \ 00033c ebfae05f
    \ 000340 401b0000             .byte   64,27,0,0,95,49,3,3
    \ 000344 5f310303
    \ 000348 7c480707             .byte   124,72,7,7,-94,93,16,-22
    \ 00034c a25d10ea
    \ 000350 c0761414             .byte   -64,118,20,20,-22,-105,64,64
    \ 000354 ea974040
    \ 000358 f1b15555             .byte   -15,-79,85,85,-1,-52,109,115
    \ 00035c ffcc6d73
    \ 000360 69475555             .byte   105,71,85,85,115,93,118,118
    \ 000364 735d7676
    \ 000368 88749797             .byte   -120,116,-105,-105,-109,-116,-71,-99
    \ 00036c 938cb99d
    \ 000370 9aa3d5d5             .byte   -102,-93,-43,-43,-99,-67,-21,-21
    \ 000374 9dbdebeb
    \ 000378 9bd5ffff             .byte   -101,-43,-1,-1,-122,-9,-3,81
    \ 00037c 86f7fd51
    \ 000380 211d1d1d             .byte   33,29,29,29,81,49,60,60
    \ 000384 51313c3c
    \ 000388 7f4a5858             .byte   127,74,88,88,-70,100,121,-20
    \ 00038c ba6479ec
    \ 000390 f1859595             .byte   -15,-123,-107,-107,-20,-106,-87,-87
    \ 000394 ec96a9a9
    \ 000398 f7abbaba             .byte   -9,-85,-70,-70,-2,-67,-47,93
    \ 00039c febdd15d
    \ 0003a0 50242626             .byte   80,36,38,38,93,51,40,40
    \ 0003a4 5d332828
    \ 0003a8 723d2d2d             .byte   114,61,45,45,-125,80,61,-59
    \ 0003ac 83503dc5
    \ 0003b0 ae655151             .byte   -82,101,81,81,-59,116,82,82
    \ 0003b4 c5745252
    \ 0003b8 c4826c6c             .byte   -60,-126,108,108,-61,-109,-125,74
    \ 0003bc c393834a
    \ 0003c0 29214949             .byte   41,33,73,73,74,65,94,94
    \ 0003c4 4a415e5e
    \ 0003c8 5b537777             .byte   91,83,119,119,106,96,-111,-108
    \ 0003cc 6a609194
    \ 0003d0 8479adad             .byte   -124,121,-83,-83,-108,-117,-75,-75
    \ 0003d4 948bb5b5
    \ 0003d8 aaaed4d4             .byte   -86,-82,-44,-44,-49,-30,-1,39
    \ 0003dc cfe2ff27
    \ 0003e0 031c7272             .byte   3,28,114,114,39,51,-100,-100
    \ 0003e4 27339c9c
    \ 0003e8 3e5abfbf             .byte   62,90,-65,-65,39,-122,-23,5
    \ 0003ec 2786e905
    \ 0003f0 08b1ffff             .byte   8,-79,-1,-1,5,-49,-1,-1
    \ 0003f4 05cfffff
    \ 0003f8 2bf0ffff             .byte   43,-16,-1,-1,-1,-1,-1,65
    \ 0003fc ffffff41
0280                  
0281                  int vickyPaletteCol (uint8_t palette, uint8_t index, uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)
0282                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public vickyPaletteCol
    \ 000000          vickyPaletteCol:
    \ 000000 5a                   phy
    \ 000001 5a                   phy
    \ 000002 e220                 sep     #32
    \ 000004 8301                 sta     1,s
    \ 000006 c220                 rep     #32
0283                  	uint8_t __far *ptr;
0284                  // select palette address
0285                  	switch (palette)
    \ 000008 a301                 lda     1,s
    \ 00000a 29ff00               and     ##255
    \ 00000d 8302                 sta     2,s
    \ 00000f a90700               lda     ##7
    \ 000012 c302                 cmp     2,s
    \ 000014 b003                 bcs     `?L1422`
    \ 000016 4c....               jmp     .kbank `?L93`
    \ 000019 a302     `?L1422`:   lda     2,s
    \ 00001b 0a                   asl     a
    \ 00001c aa                   tax
    \ 00001d bf......             lda     long:`?L469`,x
    \ 000021 48                   pha
    \ 000022 60                   rts
    \ 000023          `?L94`:
0286                  	{
0287                  	case 0:
0288                  		ptr= (long)GRPH_LUT0_LONG +(index*4);
0289                  		// set rgb components at palette address
0290                  		*(ptr+2)= red; // red
0291                  		*(ptr+1)= green; // green
0292                  		*(ptr)=   blue; // blue 
0293                  		*(ptr+3)= alpha; // alpha
0294                  		break;
0295                  	case 1:
0296                  		ptr= (long)GRPH_LUT1_LONG +(index*4);
0297                  		//printf ("ptr:%lx r:%d g:%d b:%d a:%d \r",ptr, palette[vi], palette[vi+1], palette[vi+2], palette[vi+3]);
0298                  		// set rgb components at palette address
0299                  		*(ptr+2)= red; // red
0300                  		*(ptr+1)= green; // green
0301                  		*(ptr)=   blue; // blue 
0302                  		*(ptr+3)= alpha; // alpha
0303                  		break;
0304                  	case 2:
0305                  		ptr= (long)GRPH_LUT2_LONG +(index*4);
0306                  		//printf ("ptr:%lx r:%d g:%d b:%d a:%d \r",ptr, palette[vi], palette[vi+1], palette[vi+2], palette[vi+3]);
0307                  		// set rgb components at palette address
0308                  		*(ptr+2)= red; // red
0309                  		*(ptr+1)= green; // green
0310                  		*(ptr)=   blue; // blue 
0311                  		*(ptr+3)= alpha; // alpha
0312                  		break;
0313                  	case 3:
0314                  		ptr= (long)GRPH_LUT3_LONG +(index*4);
0315                  		//printf ("ptr:%lx r:%d g:%d b:%d a:%d \r",ptr, palette[vi], palette[vi+1], palette[vi+2], palette[vi+3]);
0316                  		// set rgb components at palette address
0317                  		*(ptr+2)= red; // red
0318                  		*(ptr+1)= green; // green
0319                  		*(ptr)=   blue; // blue 
0320                  		*(ptr+3)= alpha; // alpha
0321                  		break;
0322                  	case 4:
0323                  		ptr= (long)GRPH_LUT4_LONG +(index*4);
0324                  		//printf ("ptr:%lx r:%d g:%d b:%d a:%d \r",ptr, palette[vi], palette[vi+1], palette[vi+2], palette[vi+3]);
0325                  		// set rgb components at palette address
0326                  		*(ptr+2)= red; // red
0327                  		*(ptr+1)= green; // green
0328                  		*(ptr)=   blue; // blue 
0329                  		*(ptr+3)= alpha; // alpha
0330                  		break;
0331                  	case 5:
0332                  		ptr= (long)GRPH_LUT5_LONG +(index*4);
0333                  		//printf ("ptr:%lx r:%d g:%d b:%d a:%d \r",ptr, palette[vi], palette[vi+1], palette[vi+2], palette[vi+3]);
0334                  		// set rgb components at palette address
0335                  		*(ptr+2)= red; // red
0336                  		*(ptr+1)= green; // green
0337                  		*(ptr)=   blue; // blue 
0338                  		*(ptr+3)= alpha; // alpha
0339                  		break;
0340                  	case 6:
0341                  		ptr= (long)GRPH_LUT6_LONG +(index*4);
0342                  		//printf ("ptr:%lx r:%d g:%d b:%d a:%d \r",ptr, palette[vi], palette[vi+1], palette[vi+2], palette[vi+3]);
0343                  		// set rgb components at palette address
0344                  		*(ptr+2)= red; // red
0345                  		*(ptr+1)= green; // green
0346                  		*(ptr)=   blue; // blue 
0347                  		*(ptr+3)= alpha; // alpha
0348                  		break;
0349                  	case 7:
0350                  		ptr= (long)GRPH_LUT7_LONG +(index*4);
    \ 000023 22......             jsl     long:`?L1203`
    \ 000027 1001                 bpl     `?L529`
    \ 000029 ca                   dex
    \ 00002a 18       `?L529`:    clc
    \ 00002b 69003c               adc     ##15360
0351                  		//printf ("ptr:%lx r:%d g:%d b:%d a:%d \r",ptr, palette[vi], palette[vi+1], palette[vi+2], palette[vi+3]);
0352                  		// set rgb components at palette address
0353                  		*(ptr+2)= red; // red
0354                  		*(ptr+1)= green; // green
0355                  		*(ptr)=   blue; // blue 
0356                  		*(ptr+3)= alpha; // alpha
0357                  		break;
    \ 00002e 8059                 bra     `?L1157`
    \ 000030          `?L95`:
    \ 000030 22......             jsl     long:`?L1203`
    \ 000034 1001                 bpl     `?L531`
    \ 000036 ca                   dex
    \ 000037 18       `?L531`:    clc
    \ 000038 690038               adc     ##14336
    \ 00003b 804c                 bra     `?L1157`
    \ 00003d          `?L96`:
    \ 00003d 22......             jsl     long:`?L1203`
    \ 000041 1001                 bpl     `?L533`
    \ 000043 ca                   dex
    \ 000044 18       `?L533`:    clc
    \ 000045 690034               adc     ##13312
    \ 000048 803f                 bra     `?L1157`
    \ 00004a          `?L97`:
    \ 00004a 22......             jsl     long:`?L1203`
    \ 00004e 1001                 bpl     `?L535`
    \ 000050 ca                   dex
    \ 000051 18       `?L535`:    clc
    \ 000052 690030               adc     ##12288
    \ 000055 8032                 bra     `?L1157`
    \ 000057          `?L98`:
    \ 000057 22......             jsl     long:`?L1203`
    \ 00005b 1001                 bpl     `?L537`
    \ 00005d ca                   dex
    \ 00005e 18       `?L537`:    clc
    \ 00005f 69002c               adc     ##11264
    \ 000062 8025                 bra     `?L1157`
    \ 000064          `?L99`:
    \ 000064 22......             jsl     long:`?L1203`
    \ 000068 1001                 bpl     `?L539`
    \ 00006a ca                   dex
    \ 00006b 18       `?L539`:    clc
    \ 00006c 690028               adc     ##10240
    \ 00006f 8018                 bra     `?L1157`
    \ 000071          `?L100`:
    \ 000071 22......             jsl     long:`?L1203`
    \ 000075 1001                 bpl     `?L541`
    \ 000077 ca                   dex
    \ 000078 18       `?L541`:    clc
    \ 000079 690024               adc     ##9216
    \ 00007c 800b                 bra     `?L1157`
    \ 00007e          `?L101`:
    \ 00007e 22......             jsl     long:`?L1203`
    \ 000082 1001                 bpl     `?L543`
    \ 000084 ca                   dex
    \ 000085 18       `?L543`:    clc
    \ 000086 690020               adc     ##8192
    \ 000089 48       `?L1157`:   pha
    \ 00008a 8a                   txa
    \ 00008b 69af00               adc     ##175
    \ 00008e aa                   tax
    \ 00008f 68                   pla
    \ 000090 86..                 stx     dp:.tiny (_Dp+2)
    \ 000092 85..                 sta     dp:.tiny _Dp
    \ 000094 e220                 sep     #32
    \ 000096 a30a                 lda     10,s
    \ 000098 a00200               ldy     ##2
    \ 00009b 97..                 sta     [.tiny _Dp],y
    \ 00009d a30c                 lda     12,s
    \ 00009f 88                   dey
    \ 0000a0 97..                 sta     [.tiny _Dp],y
    \ 0000a2 a30e                 lda     14,s
    \ 0000a4 87..                 sta     [.tiny _Dp]
    \ 0000a6 a310                 lda     16,s
    \ 0000a8 22......             jsl     long:`?L1272`
0358                  	default:
0359                  		// LUT table out of bounds (0-7)
0360                  		return -1;
0361                  	}
0362                  	return 0;
    \ 0000ac a90000               lda     ##0
    \ 0000af 8003                 bra     `?L90`
    \ 0000b1 a9ffff   `?L93`:     lda     ##-1
    \ 0000b4          `?L90`:
0363                  }
    \ 0000b4 7a                   ply
    \ 0000b5 7a                   ply
    \ 0000b6 6b                   rtl
0364                  
0365                  // int vickyBackCol (uint8_t palette, uint8_t index, uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)
0366                  // int vickyBorderCol (uint8_t palette, uint8_t index, uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)
0367                  
0368                  
0369                  // -------------------------------------------------------------------
0370                  // Simple Read VRAM address by Ernesto Contreras
0371                  // Required for getPixel
0372                  // -------------------------------------------------------------------
0373                  static inline uint8_t __read_vram (uint8_t volatile __far *p) {
0374                    // Force clear of FIFO
0375                    VMEM2CPU_CTRL_REG = VMEM2CPU_Clear_FIFO;
0376                    VMEM2CPU_CTRL_REG = 0;
0377                  	// Wait for Buffer to be clear
0378                  	while (__fifo_count > 0)
0379                  	;
0380                  	*p;  // dummy read
0381                  // Wait for fifo buffer 
0382                  	while (__fifo_count == 0) 
0383                  	;
0384                    return __byte_port;
0385                  }
0386                  
0387                  // -------------------------------------------------------------------
0388                  // Read VRAM Buffer Implementation 
0389                  // thx to hth313 - Calypsi creator for his support!
0390                  // Required for getScanLine
0391                  // -------------------------------------------------------------------
0392                   int read_vram_buffer (uint8_t volatile __far *p, int length, uint8_t __far *buffer) 
0393                   {
    \ 000000                      .section farcode,text
    \ 000000                      .public read_vram_buffer
    \ 000000          read_vram_buffer:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 5a                   phy
    \ 000003 5a                   phy
    \ 000004 8301                 sta     1,s
0394                  	int i; 
0395                  	VMEM2CPU_CTRL_REG = VMEM2CPU_Clear_FIFO; // clear fifo before reading data
0396                  	VMEM2CPU_CTRL_REG = 0;
0397                  	// Wait for fifo clear
0398                  	if (__fifo_count>0)
    \ 000006 22......             jsl     long:`?L1223`
    \ 00000a 1a                   inc     a
    \ 00000b 3a                   dec     a
    \ 00000c 38                   sec
    \ 00000d ef0209af             sbc     long:11471106
    \ 000011 5003                 bvc     `?L545`
    \ 000013 490080               eor     ##-32768
    \ 000016 100b     `?L545`:    bpl     `?L126`
    \ 000018          `?L128`:
0399                  		while (__fifo_count>0)
    \ 000018 22......             jsl     long:`?L1252`
    \ 00001c 5003                 bvc     `?L547`
    \ 00001e 490080               eor     ##-32768
    \ 000021 30f5     `?L547`:    bmi     `?L128`
    \ 000023          `?L126`:
0400                  		;
0401                  // Ask for as may bytes as the value - length
0402                  	i=0;
    \ 000023 a90000               lda     ##0
0403                     while (i<length)
    \ 000026 8303                 sta     3,s
    \ 000028 a303     `?L131`:    lda     3,s
    \ 00002a 38                   sec
    \ 00002b e301                 sbc     1,s
    \ 00002d 5003                 bvc     `?L549`
    \ 00002f 490080               eor     ##-32768
    \ 000032 1011     `?L549`:    bpl     `?L134`
0404                    {
0405                  	*p;  		// dummy read
    \ 000034 e220                 sep     #32
    \ 000036 a7..                 lda     [.tiny _Dp]
    \ 000038 c220                 rep     #32
0406                  	i++;		// increment pixel request counter
    \ 00003a a303                 lda     3,s
    \ 00003c 1a                   inc     a
    \ 00003d 8303                 sta     3,s
0407                  	p++;		// increment VRAM pointer
    \ 00003f e6..                 inc     dp:.tiny _Dp
    \ 000041 a303                 lda     3,s
    \ 000043 80e3                 bra     `?L131`
    \ 000045          `?L134`:
0408                    }
0409                  // Wait for fifo buffer 
0410                  	while (__fifo_count == 00)
    \ 000045 af0209af             lda     long:11471106
    \ 000049 f0fa                 beq     `?L134`
0411                  	;
0412                  	i=0;
    \ 00004b a20000               ldx     ##0
    \ 00004e          `?L137`:
0413                  // Move lenght number of bytes into array
0414                  	while (__fifo_count > 0) 
    \ 00004e 22......             jsl     long:`?L1252`
    \ 000052 5003                 bvc     `?L551`
    \ 000054 490080               eor     ##-32768
    \ 000057 101d     `?L551`:    bpl     `?L138`
0415                  	  *(buffer+(i++)) = __byte_port;
    \ 000059 9b                   txy
    \ 00005a 8a                   txa
    \ 00005b 1a                   inc     a
    \ 00005c aa                   tax
    \ 00005d 22......             jsl     long:`?L1253`
    \ 000061 84..                 sty     dp:.tiny (_Dp+8)
    \ 000063 18                   clc
    \ 000064 a5..                 lda     dp:.tiny _Dp
    \ 000066 65..                 adc     dp:.tiny (_Dp+8)
    \ 000068 85..                 sta     dp:.tiny _Dp
    \ 00006a e220                 sep     #32
    \ 00006c af0109af             lda     long:11471105
    \ 000070 87..                 sta     [.tiny _Dp]
    \ 000072 c220                 rep     #32
    \ 000074 80d8                 bra     `?L137`
    \ 000076          `?L138`:
0416                     
0417                  	VMEM2CPU_CTRL_REG = VMEM2CPU_Clear_FIFO; // clear fifo before reading data
0418                  	VMEM2CPU_CTRL_REG = 0;
0419                  	return i;
    \ 000076 22......             jsl     long:`?L1223`
    \ 00007a 8a                   txa
0420                  }
    \ 00007b 7a                   ply
    \ 00007c 7a                   ply
    \ 00007d 7a                   ply
    \ 00007e 84..                 sty     dp:.tiny (_Dp+8)
    \ 000080 6b                   rtl
0421                  
0422                  
0423                  // -----------------------------------------------------
0424                  // Simple getPixel Implementation by Ernesto Contreras
0425                  // -----------------------------------------------------
0426                  int getPixel (int x, int y) {
    \ 000000                      .section farcode,text
    \ 000000                      .public getPixel
    \ 000000          getPixel:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 5a                   phy
    \ 000005 5a                   phy
    \ 000006 8301                 sta     1,s
    \ 000008 a5..                 lda     dp:.tiny _Dp
    \ 00000a 8303                 sta     3,s
0427                  	void __far *ptr;
0428                  	uint8_t byte, length;
0429                      if (vBitPlane[vickyBitmapPage]) // if Bitmap for the page is enabled
    \ 00000c 22......             jsl     long:`?L1238`
    \ 000010 d003                 bne     `?L1423`
    \ 000012 4c....               jmp     .kbank `?L145`
    \ 000015          `?L1423`:
0430                  	{
0431                  		// check screen Boundaries
0432                  		if (x<vickyResX && y<vickyResY)
    \ 000015 a20000               ldx     ##0
    \ 000018 a301                 lda     1,s
    \ 00001a 1001                 bpl     `?L553`
    \ 00001c ca                   dex
    \ 00001d          `?L553`:
    \ 00001d 22......             jsl     long:`?L1232`
    \ 000021 5003                 bvc     `?L555`
    \ 000023 490080               eor     ##-32768
    \ 000026 106e     `?L555`:    bpl     `?L145`
    \ 000028 a20000               ldx     ##0
    \ 00002b a303                 lda     3,s
    \ 00002d 1001                 bpl     `?L557`
    \ 00002f ca                   dex
    \ 000030          `?L557`:
    \ 000030 22......             jsl     long:`?L1245`
    \ 000034 5003                 bvc     `?L559`
    \ 000036 490080               eor     ##-32768
    \ 000039 105b     `?L559`:    bpl     `?L145`
0433                  		{
0434                  			ptr = (void *)(0xb00000+x+y*vickyResX);
    \ 00003b a301                 lda     1,s
    \ 00003d a20000               ldx     ##0
    \ 000040 a8                   tay
    \ 000041 1001                 bpl     `?L561`
    \ 000043 ca                   dex
    \ 000044 18       `?L561`:    clc
    \ 000045 690000               adc     ##0
    \ 000048 48                   pha
    \ 000049 22......             jsl     long:`?L1259`
    \ 00004d 68                   pla
    \ 00004e 86..                 stx     dp:.tiny (_Dp+10)
    \ 000050 85..                 sta     dp:.tiny (_Dp+8)
    \ 000052 a303                 lda     3,s
    \ 000054 a20000               ldx     ##0
    \ 000057 a8                   tay
    \ 000058 1001                 bpl     `?L563`
    \ 00005a ca                   dex
    \ 00005b          `?L563`:
    \ 00005b 22......             jsl     long:`?L1196`
    \ 00005f 65..                 adc     dp:.tiny (_Dp+8)
    \ 000061 48                   pha
    \ 000062 8a                   txa
    \ 000063 65..                 adc     dp:.tiny (_Dp+10)
    \ 000065 68                   pla
    \ 000066 85..                 sta     dp:.tiny _Dp
    \ 000068 64..                 stz     dp:.tiny (_Dp+2)
0435                  			ptr+= (long) bitplane[vickyBitmapPage].start;
    \ 00006a a6..                 ldx     dp:.tiny (_Dp+2)
    \ 00006c a5..                 lda     dp:.tiny _Dp
0436                  			return __read_vram (ptr);
    \ 00006e 86..                 stx     dp:.tiny (_Dp+2)
    \ 000070 85..                 sta     dp:.tiny _Dp
    \ 000072 22......             jsl     long:`?L1223`
    \ 000076          `?L494`:
    \ 000076 22......             jsl     long:`?L1252`
    \ 00007a 5003                 bvc     `?L566`
    \ 00007c 490080               eor     ##-32768
    \ 00007f 30f5     `?L566`:    bmi     `?L494`
    \ 000081 e220                 sep     #32
    \ 000083 a7..                 lda     [.tiny _Dp]
    \ 000085 c220                 rep     #32
    \ 000087 af0209af `?L497`:    lda     long:11471106
    \ 00008b f0fa                 beq     `?L497`
    \ 00008d af0109af             lda     long:11471105
    \ 000091 29ff00               and     ##255
    \ 000094 8003                 bra     `?L143`
    \ 000096          `?L145`:
0437                  		}
0438                  	}
0439                  	return -1;
    \ 000096 a9ffff               lda     ##-1
    \ 000099          `?L143`:
0440                  }
    \ 000099 7a                   ply
    \ 00009a 7a                   ply
    \ 00009b 5c......             jmp     long:`?L185`
0441                  
0442                  // -----------------------------------------------------
0443                  // Simple getScanLine Implementation by Ernesto Contreras
0444                  // Results in pixBuffer[]
0445                  // -----------------------------------------------------
0446                  int getScanLine (int y, uint8_t __far *buffer) {
    \ 000000                      .section farcode,text
    \ 000000                      .public getScanLine
    \ 000000          getScanLine:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 a8                   tay
    \ 000009 3b                   tsc
    \ 00000a 38                   sec
    \ 00000b e91000               sbc     ##16
    \ 00000e 1b                   tcs
    \ 00000f 98                   tya
    \ 000010 830d                 sta     13,s
    \ 000012 a5..                 lda     dp:.tiny _Dp
    \ 000014 85..                 sta     dp:.tiny (_Dp+12)
    \ 000016 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000018 85..                 sta     dp:.tiny (_Dp+14)
0447                  	void __far *ptr,*ptr2;
0448                  	int st,length, length2, length3, bank;
0449                      if (vBitPlane[vickyBitmapPage]) // if Bitmap for the page is enabled
    \ 00001a 22......             jsl     long:`?L1238`
    \ 00001e f009                 beq     `?L155`
0450                  	
0451                  	// initialize variables 
0452                  	st=0;
    \ 000020 a90000               lda     ##0
    \ 000023 8301                 sta     1,s
    \ 000025 8301                 sta     1,s
    \ 000027 8002                 bra     `?L156`
    \ 000029 a301     `?L155`:    lda     1,s
    \ 00002b          `?L156`:
0453                  	// check screen Boundaries
0454                  	if (y<vickyResY)
    \ 00002b a20000               ldx     ##0
    \ 00002e a30d                 lda     13,s
    \ 000030 1001                 bpl     `?L568`
    \ 000032 ca                   dex
    \ 000033          `?L568`:
    \ 000033 22......             jsl     long:`?L1245`
    \ 000037 5003                 bvc     `?L570`
    \ 000039 490080               eor     ##-32768
    \ 00003c 3003     `?L570`:    bmi     `?L1424`
    \ 00003e 4c....               jmp     .kbank `?L158`
    \ 000041          `?L1424`:
0455                  	{
0456                  		ptr = (0xb00000+y*vickyResX); // calculate position of scanline in Memory
    \ 000041 22......             jsl     long:`?L1267`
    \ 000045 1001                 bpl     `?L572`
    \ 000047 ca                   dex
    \ 000048          `?L572`:
    \ 000048 22......             jsl     long:`?L1196`
    \ 00004c 690000               adc     ##0
    \ 00004f 48                   pha
0457                  		ptr+= (long) bitplane[vickyBitmapPage].start;
0458                  		length = vickyResX; // read as many bytes as current vickyResX
0459                  		if (((long)ptr & 0xff0000)==((long)ptr+length & 0xff0000))
    \ 000050 22......             jsl     long:`?L1259`
    \ 000054 68                   pla
    \ 000055 86..                 stx     dp:.tiny (_Dp+10)
    \ 000057 85..                 sta     dp:.tiny (_Dp+8)
    \ 000059 ad....               lda     vickyResX
    \ 00005c 830f                 sta     15,s
    \ 00005e a5..                 lda     dp:.tiny (_Dp+10)
    \ 000060 29ff00               and     ##255
    \ 000063 aa                   tax
    \ 000064 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000066 290000               and     ##0
    \ 000069 86..                 stx     dp:.tiny (_Dp+2)
    \ 00006b 85..                 sta     dp:.tiny _Dp
    \ 00006d a30f                 lda     15,s
    \ 00006f a20000               ldx     ##0
    \ 000072 a8                   tay
    \ 000073 1001                 bpl     `?L575`
    \ 000075 ca                   dex
    \ 000076 18       `?L575`:    clc
    \ 000077 65..                 adc     dp:.tiny (_Dp+8)
    \ 000079 48                   pha
    \ 00007a 8a                   txa
    \ 00007b 65..                 adc     dp:.tiny (_Dp+10)
    \ 00007d aa                   tax
    \ 00007e 68                   pla
    \ 00007f 86..                 stx     dp:.tiny (_Dp+6)
    \ 000081 85..                 sta     dp:.tiny (_Dp+4)
    \ 000083 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000085 29ff00               and     ##255
    \ 000088 aa                   tax
    \ 000089 a5..                 lda     dp:.tiny (_Dp+4)
    \ 00008b 290000               and     ##0
    \ 00008e 86..                 stx     dp:.tiny (_Dp+6)
    \ 000090 85..                 sta     dp:.tiny (_Dp+4)
    \ 000092 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000094 c5..                 cmp     dp:.tiny _Dp
    \ 000096 d053                 bne     `?L161`
    \ 000098 a5..                 lda     dp:.tiny (_Dp+6)
    \ 00009a c5..                 cmp     dp:.tiny (_Dp+2)
    \ 00009c d04d                 bne     `?L161`
0460                  		// Test if bytes requested from FIFO cross a 64k Bank boundary
0461                  		{
0462                  			// of course they dont!
0463                  			while (st<length)
    \ 00009e a301                 lda     1,s
    \ 0000a0 a301     `?L164`:    lda     1,s
    \ 0000a2 38                   sec
    \ 0000a3 e30f                 sbc     15,s
    \ 0000a5 5003                 bvc     `?L578`
    \ 0000a7 490080               eor     ##-32768
    \ 0000aa 3003     `?L578`:    bmi     `?L1425`
    \ 0000ac 4c....               jmp     .kbank `?L162`
    \ 0000af          `?L1425`:
0464                  			{
0465                  				st = read_vram_buffer(ptr, length, buffer);
    \ 0000af a5..                 lda     dp:.tiny (_Dp+12)
    \ 0000b1 85..                 sta     dp:.tiny (_Dp+4)
    \ 0000b3 a5..                 lda     dp:.tiny (_Dp+14)
    \ 0000b5 85..                 sta     dp:.tiny (_Dp+6)
    \ 0000b7 22......             jsl     long:`?L1204`
    \ 0000bb a30f                 lda     15,s
    \ 0000bd 22......             jsl     long:read_vram_buffer
    \ 0000c1 8301                 sta     1,s
0466                  				if (st<length)
    \ 0000c3 a301                 lda     1,s
    \ 0000c5 38                   sec
    \ 0000c6 e30f                 sbc     15,s
    \ 0000c8 5003                 bvc     `?L581`
    \ 0000ca 490080               eor     ##-32768
    \ 0000cd 1018     `?L581`:    bpl     `?L168`
0467                  				{
0468                  					// recalculate all pointers and lengths for a retry
0469                  					ptr = (0xb00000+y*vickyResX); // calculate position of scanline in Memory
    \ 0000cf 22......             jsl     long:`?L1267`
    \ 0000d3 1001                 bpl     `?L583`
    \ 0000d5 ca                   dex
    \ 0000d6          `?L583`:
    \ 0000d6 22......             jsl     long:`?L1196`
    \ 0000da 690000               adc     ##0
    \ 0000dd 48                   pha
    \ 0000de 22......             jsl     long:`?L1259`
    \ 0000e2 68                   pla
    \ 0000e3 86..                 stx     dp:.tiny (_Dp+10)
    \ 0000e5 85..                 sta     dp:.tiny (_Dp+8)
    \ 0000e7 a301     `?L168`:    lda     1,s
    \ 0000e9 80b5                 bra     `?L164`
    \ 0000eb          `?L161`:
0470                  					ptr+= (long) bitplane[vickyBitmapPage].start;
0471                  				}
0472                  			}
0473                  		}
0474                  		else
0475                  		// Ooops this byte group just crossed the line!, let's do something about it! 
0476                  		// Let's do a FIFO request for the group of bytes in each bank
0477                  		{
0478                  			// Calculate boundaries for both FIFO requests
0479                  			bank=(long)(ptr+length) & (0xff0000);
    \ 0000eb a90000               lda     ##0
    \ 0000ee 8301                 sta     1,s
0480                  			length2=(bank-0x10000)-(long)ptr-1; // calculate number of bytes to reach end of bank
    \ 0000f0 38                   sec
    \ 0000f1 e5..                 sbc     dp:.tiny (_Dp+8)
    \ 0000f3 3a                   dec     a
    \ 0000f4 8309                 sta     9,s
0481                  			length3=vickyResX-length2;
    \ 0000f6 ad....               lda     vickyResX
    \ 0000f9 38                   sec
    \ 0000fa e309                 sbc     9,s
    \ 0000fc 8301                 sta     1,s
0482                  			ptr2=(long)ptr+length & 0xff0000;
    \ 0000fe a30f                 lda     15,s
    \ 000100 a20000               ldx     ##0
    \ 000103 a8                   tay
    \ 000104 1001                 bpl     `?L586`
    \ 000106 ca                   dex
    \ 000107 18       `?L586`:    clc
    \ 000108 65..                 adc     dp:.tiny (_Dp+8)
    \ 00010a 48                   pha
    \ 00010b 8a                   txa
    \ 00010c 65..                 adc     dp:.tiny (_Dp+10)
    \ 00010e aa                   tax
    \ 00010f 68                   pla
    \ 000110 86..                 stx     dp:.tiny (_Dp+2)
    \ 000112 85..                 sta     dp:.tiny _Dp
    \ 000114 a9ff00               lda     ##255
    \ 000117 25..                 and     dp:.tiny (_Dp+2)
    \ 000119 48                   pha
    \ 00011a a90000               lda     ##0
    \ 00011d 25..                 and     dp:.tiny _Dp
    \ 00011f 8307                 sta     7,s
    \ 000121 68                   pla
    \ 000122 8307                 sta     7,s
0483                  			// FIFO for 1st Bank
0484                  			st=0;
    \ 000124 a90000               lda     ##0
    \ 000127 8303                 sta     3,s
0485                  			while (st<length2)
    \ 000129 8303                 sta     3,s
    \ 00012b a309                 lda     9,s
    \ 00012d a303     `?L170`:    lda     3,s
    \ 00012f 38                   sec
    \ 000130 e309                 sbc     9,s
    \ 000132 5003                 bvc     `?L588`
    \ 000134 490080               eor     ##-32768
    \ 000137 1053     `?L588`:    bpl     `?L171`
0486                  			{
0487                  				st = read_vram_buffer(ptr, length2, buffer);
    \ 000139 a5..                 lda     dp:.tiny (_Dp+12)
    \ 00013b 85..                 sta     dp:.tiny (_Dp+4)
    \ 00013d a5..                 lda     dp:.tiny (_Dp+14)
    \ 00013f 85..                 sta     dp:.tiny (_Dp+6)
    \ 000141 22......             jsl     long:`?L1204`
    \ 000145 a309                 lda     9,s
    \ 000147 22......             jsl     long:read_vram_buffer
    \ 00014b 830b                 sta     11,s
0488                  				if (st<length2)
    \ 00014d a30b                 lda     11,s
    \ 00014f 38                   sec
    \ 000150 e309                 sbc     9,s
    \ 000152 5003                 bvc     `?L591`
    \ 000154 490080               eor     ##-32768
    \ 000157 1029     `?L591`:    bpl     `?L173`
0489                  				{
0490                  					// recalculate all pointers and lengths for a retry
0491                  					ptr = (0xb00000+y*vickyResX); // calculate position of scanline in Memory
    \ 000159 22......             jsl     long:`?L1267`
    \ 00015d 1001                 bpl     `?L593`
    \ 00015f ca                   dex
    \ 000160          `?L593`:
    \ 000160 22......             jsl     long:`?L1196`
    \ 000164 690000               adc     ##0
    \ 000167 48                   pha
    \ 000168 22......             jsl     long:`?L1259`
    \ 00016c 68                   pla
    \ 00016d 86..                 stx     dp:.tiny (_Dp+10)
    \ 00016f 85..                 sta     dp:.tiny (_Dp+8)
0492                  					ptr+= (long) bitplane[vickyBitmapPage].start;
0493                  					bank=(long)(ptr+length) & (0xff0000);
    \ 000171 a90000               lda     ##0
    \ 000174 8303                 sta     3,s
0494                  					length2=(bank-0x10000)-(long)ptr-1; // calculate number of bytes to reach end of bank
    \ 000176 38                   sec
    \ 000177 e5..                 sbc     dp:.tiny (_Dp+8)
    \ 000179 3a                   dec     a
    \ 00017a 8303                 sta     3,s
    \ 00017c a303                 lda     3,s
    \ 00017e 8309                 sta     9,s
    \ 000180 8002                 bra     `?L174`
    \ 000182 a309     `?L173`:    lda     9,s
    \ 000184 a30b     `?L174`:    lda     11,s
    \ 000186 8303                 sta     3,s
    \ 000188 a309                 lda     9,s
    \ 00018a 80a1                 bra     `?L170`
    \ 00018c          `?L171`:
0495                  				}
0496                  			}
0497                  
0498                  			//FIFO for 2nd Bank
0499                  			st=0;
    \ 00018c a90000               lda     ##0
    \ 00018f 8303                 sta     3,s
0500                  			while (st<length3)
    \ 000191 a307                 lda     7,s
    \ 000193 85..                 sta     dp:.tiny (_Dp+10)
    \ 000195 a305                 lda     5,s
    \ 000197 85..                 sta     dp:.tiny (_Dp+8)
    \ 000199 a309                 lda     9,s
    \ 00019b 8305                 sta     5,s
    \ 00019d a301                 lda     1,s
    \ 00019f a303     `?L176`:    lda     3,s
    \ 0001a1 38                   sec
    \ 0001a2 e301                 sbc     1,s
    \ 0001a4 5003                 bvc     `?L596`
    \ 0001a6 490080               eor     ##-32768
    \ 0001a9 107d     `?L596`:    bpl     `?L162`
0501                  			{
0502                  				st = read_vram_buffer(ptr2, length3, (void *)(buffer+length2+1));
    \ 0001ab a5..                 lda     dp:.tiny (_Dp+12)
    \ 0001ad 1a                   inc     a
    \ 0001ae 18                   clc
    \ 0001af 6305                 adc     5,s
    \ 0001b1 85..                 sta     dp:.tiny (_Dp+4)
    \ 0001b3 64..                 stz     dp:.tiny (_Dp+6)
    \ 0001b5 22......             jsl     long:`?L1204`
    \ 0001b9 a301                 lda     1,s
    \ 0001bb 22......             jsl     long:read_vram_buffer
    \ 0001bf 8303                 sta     3,s
0503                  				if (st<length3)
    \ 0001c1 a303                 lda     3,s
    \ 0001c3 38                   sec
    \ 0001c4 e301                 sbc     1,s
    \ 0001c6 5003                 bvc     `?L599`
    \ 0001c8 490080               eor     ##-32768
    \ 0001cb 1054     `?L599`:    bpl     `?L179`
0504                  				{
0505                  					// recalculate all pointers and lengths for a retry
0506                  					ptr = (0xb00000+y*vickyResX); // calculate position of scanline in Memory
    \ 0001cd 22......             jsl     long:`?L1267`
    \ 0001d1 1001                 bpl     `?L601`
    \ 0001d3 ca                   dex
    \ 0001d4          `?L601`:
    \ 0001d4 22......             jsl     long:`?L1196`
    \ 0001d8 690000               adc     ##0
    \ 0001db 48                   pha
0507                  					ptr+= (long) bitplane[vickyBitmapPage].start;
0508                  					bank=(long)(ptr+length) & (0xff0000);
0509                  					length2=(bank-0x10000)-(long)ptr-1; // calculate number of bytes to reach end of bank
0510                  					length3=vickyResX-length2;
0511                  					ptr2=(long)ptr+length & 0xff0000;
    \ 0001dc 22......             jsl     long:`?L1259`
    \ 0001e0 68                   pla
    \ 0001e1 86..                 stx     dp:.tiny (_Dp+2)
    \ 0001e3 85..                 sta     dp:.tiny _Dp
    \ 0001e5 a90000               lda     ##0
    \ 0001e8 8301                 sta     1,s
    \ 0001ea 38                   sec
    \ 0001eb e5..                 sbc     dp:.tiny _Dp
    \ 0001ed 3a                   dec     a
    \ 0001ee 8305                 sta     5,s
    \ 0001f0 ad....               lda     vickyResX
    \ 0001f3 38                   sec
    \ 0001f4 e305                 sbc     5,s
    \ 0001f6 8301                 sta     1,s
    \ 0001f8 a30f                 lda     15,s
    \ 0001fa a20000               ldx     ##0
    \ 0001fd a8                   tay
    \ 0001fe 1001                 bpl     `?L604`
    \ 000200 ca                   dex
    \ 000201 18       `?L604`:    clc
    \ 000202 65..                 adc     dp:.tiny _Dp
    \ 000204 48                   pha
    \ 000205 8a                   txa
    \ 000206 65..                 adc     dp:.tiny (_Dp+2)
    \ 000208 aa                   tax
    \ 000209 68                   pla
    \ 00020a 86..                 stx     dp:.tiny (_Dp+2)
    \ 00020c 85..                 sta     dp:.tiny _Dp
    \ 00020e a5..                 lda     dp:.tiny (_Dp+2)
    \ 000210 29ff00               and     ##255
    \ 000213 aa                   tax
    \ 000214 a5..                 lda     dp:.tiny _Dp
    \ 000216 290000               and     ##0
    \ 000219 86..                 stx     dp:.tiny (_Dp+10)
    \ 00021b 85..                 sta     dp:.tiny (_Dp+8)
    \ 00021d a301                 lda     1,s
    \ 00021f 8002                 bra     `?L180`
    \ 000221 a301     `?L179`:    lda     1,s
    \ 000223 a301     `?L180`:    lda     1,s
    \ 000225 4c....               jmp     .kbank `?L176`
    \ 000228 a30f     `?L162`:    lda     15,s
    \ 00022a 8002                 bra     `?L154`
    \ 00022c a303     `?L158`:    lda     3,s
    \ 00022e          `?L154`:
0512                  				}
0513                  			}
0514                  		}
0515                  	}
0516                  	return length; // returns number of bytes read
0517                  }
    \ 00022e a8                   tay
    \ 00022f 3b                   tsc
    \ 000230 18                   clc
    \ 000231 691000               adc     ##16
    \ 000234 1b                   tcs
    \ 000235 98                   tya
    \ 000236 5c......             jmp     long:`?L1186`
0518                  
0519                  // -----------------------------------------------------
0520                  // Simple setPixel Implementation by Ernesto Contreras
0521                  // -----------------------------------------------------
0522                  static inline void setPixel (unsigned long x, unsigned long y, uint8_t col)
0523                  {
    \ 000000                      .section farcode,text
    \ 000000          setPixel:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 86..                 stx     dp:.tiny (_Dp+6)
    \ 000006 85..                 sta     dp:.tiny (_Dp+4)
0524                  uint8_t __far24 *ptr;
0525                  	if (vBitPlane[vickyBitmapPage]) // if Bitmap for the page is enabled
    \ 000008 22......             jsl     long:`?L1238`
    \ 00000c f045                 beq     `?L185`
0526                  		{
0527                  			// check screen Boundaries
0528                  			if (x<vickyResX && y<vickyResY)
    \ 00000e a5..                 lda     dp:.tiny (_Dp+4)
    \ 000010 cd....               cmp     vickyResX
    \ 000013 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000015 ed....               sbc     vickyResX+2
    \ 000018 b039                 bcs     `?L185`
    \ 00001a a5..                 lda     dp:.tiny _Dp
    \ 00001c cd....               cmp     vickyResY
    \ 00001f a5..                 lda     dp:.tiny (_Dp+2)
    \ 000021 ed....               sbc     vickyResY+2
    \ 000024 b02d                 bcs     `?L185`
0529                  			{
0530                  					ptr = (0xb00000+x+y*vickyResX);
    \ 000026 a6..                 ldx     dp:.tiny (_Dp+6)
    \ 000028 a5..                 lda     dp:.tiny (_Dp+4)
    \ 00002a 18                   clc
    \ 00002b 690000               adc     ##0
    \ 00002e 48                   pha
    \ 00002f 22......             jsl     long:`?L1259`
    \ 000033 68                   pla
    \ 000034 22......             jsl     long:`?L1224`
    \ 000038 48                   pha
    \ 000039 8a                   txa
    \ 00003a 65..                 adc     dp:.tiny (_Dp+10)
    \ 00003c aa                   tax
    \ 00003d 68                   pla
0531                  					ptr+= (long) bitplane[vickyBitmapPage].start;
0532                  					*ptr = col;
    \ 00003e 22......             jsl     long:`?L1202`
    \ 000042 a00100               ldy     ##1
    \ 000045 b7..                 lda     [.tiny (_Dp+4)],y
    \ 000047 22......             jsl     long:`?L1209`
    \ 00004b e220                 sep     #32
    \ 00004d a308                 lda     8,s
    \ 00004f 87..                 sta     [.tiny _Dp]
    \ 000051 c220                 rep     #32
    \ 000053          `?L185`:
0533                  			}
0534                  		}
0535                  }
    \ 000053 7a                   ply
    \ 000054 84..                 sty     dp:.tiny (_Dp+10)
    \ 000056 7a                   ply
    \ 000057 84..                 sty     dp:.tiny (_Dp+8)
    \ 000059 6b                   rtl
0536                  
0537                  // -----------------------------------------------------
0538                  // Plot function
0539                  // wrapper for setPixel.. by Ernesto Contreras
0540                  // This function is callable directly from an external program, but can´t be inlined
0541                  // -----------------------------------------------------
0542                  void plot (unsigned long x, unsigned long y, uint8_t col)
0543                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public plot
    \ 000000          plot:
    \ 000000 86..                 stx     dp:.tiny (_Dp+6)
    \ 000002 85..                 sta     dp:.tiny (_Dp+4)
0544                  	setPixel(x,y,col);
    \ 000004 a304                 lda     4,s
    \ 000006 48                   pha
    \ 000007 a6..                 ldx     dp:.tiny (_Dp+6)
    \ 000009 a5..                 lda     dp:.tiny (_Dp+4)
    \ 00000b 22......             jsl     long:setPixel
    \ 00000f 68                   pla
0545                  }
    \ 000010 6b                   rtl
0546                  
0547                  
0548                  // ----------------------------------------------------------
0549                  // setPixel_fast by Ernesto Contreras
0550                  // removed boundary checking for speed optimization
0551                  // Warning: calling function is responsible that the x,y range is not out of bounds or the universe might collapse! (at least for the Foenix..)
0552                  // ----------------------------------------------------------
0553                  static inline void setPixel_fast (unsigned long x, unsigned long y, uint8_t col)
0554                  {
0555                  uint8_t __far24 *ptr;
0556                  		ptr = (0xb00000+x+y*vickyResX);
0557                  		ptr+= (long) bitplane[vickyBitmapPage].start;
0558                  		*ptr = col;
0559                  }
0560                  // ----------------------------------------------------------
0561                  // clrBitmap function by Ernesto Contreras
0562                  // Modified memset function from Calypsi
0563                  // thx to hth313 - Calypsi creator for his memset  support!
0564                  // ----------------------------------------------------------
0565                  void clrBitmap ()
0566                  {uint8_t __far24 *ptr;
    \ 000000                      .section farcode,text
    \ 000000                      .public clrBitmap
    \ 000000          clrBitmap:
0567                  	ptr= bitplane[vickyBitmapPage].start;
0568                      VDMA_CONTROL_REG |= VDMA_CTRL_TRF_Fill + 1; //1=Enable!
0569                  	VDMA_DST_ADDY = ptr;
0570                      VDMA_BYTE_2_WRITE = 0;
0571                      VDMA_SIZE = (long) (vickyResX*vickyResY);
    \ 000000 22......             jsl     long:`?L1207`
    \ 000004 e220                 sep     #32
    \ 000006 a905                 lda     #5
    \ 000008 22......             jsl     long:`?L1227`
    \ 00000c 8f0704af             sta     long:11469831
    \ 000010 a900                 lda     #0
    \ 000012 8f0104af             sta     long:11469825
    \ 000016 c220                 rep     #32
    \ 000018 22......             jsl     long:`?L1212`
    \ 00001c 8f0804af             sta     long:11469832
    \ 000020 8a                   txa
    \ 000021 8f0a04af             sta     long:11469834
0572                  
0573                      // Start VDMA
0574                      VDMA_CONTROL_REG |= VDMA_CTRL_Start_TRF;
0575                  
0576                      // When started, the 65816 is held, but it takes a few cycles.
0577                      // Provide a short delay to ensure that we do not execute too far
0578                      // before the transfer actually starts. Call a delay subroutine for
0579                      // this.
0580                      DMA_wait_delay();
    \ 000025 22......             jsl     long:`?L1219`
0581                      wait_for_DMA_to_finish();
0582                  }
    \ 000029 6b                   rtl
0583                  
0584                  // ----------------------------------------------------------
0585                  // Vram2Dram_linearCopy function  - Experimental & not working yet
0586                  // The author is not responsible for any loss of bytes under any circumstance!!
0587                  // Author Alonso Contreras (my evil twin)
0588                  // ----------------------------------------------------------
0589                  void vram2dram_linearCopy ( long source, int __far *buffer, long length)
0590                  {uint8_t __far24 *ptr;
    \ 000000                      .section farcode,text
    \ 000000                      .public vram2dram_linearCopy
    \ 000000          vram2dram_linearCopy:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 86..                 stx     dp:.tiny (_Dp+10)
    \ 00000a 85..                 sta     dp:.tiny (_Dp+8)
0591                  	//source+= (long) bitplane[vickyBitmapPage].start;
0592                      VDMA_CONTROL_REG |= VDMA_CTRL_SysRAM_Dst + 1; //1=Enable!
    \ 00000c e220                 sep     #32
    \ 00000e a921                 lda     #33
    \ 000010 0f0004af             ora     long:11469824
    \ 000014 8f0004af             sta     long:11469824
0593                  	SDMA_CTRL_REG0 |= SDMA_CTRL0_SysRAM_Dst + 1;
    \ 000018 a921                 lda     #33
0594                  
0595                  	ptr=source + (long) bitplane[vickyBitmapPage].start;
0596                  	// Set source, destination and lenght of copy
0597                  	VDMA_SRC_ADDY = ptr;
0598                  	SDMA_DST_ADDY = buffer;
0599                      VDMA_SIZE = length;
0600                  	SDMA_SIZE = length;
0601                      printf ("source: %x dest: %x len:%ld\r",ptr,buffer,length);
    \ 00001a 22......             jsl     long:`?L1271`
    \ 00001e d4..                 pei     dp:.tiny (_Dp+10)
    \ 000020 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000022 a90001               lda     ##256
    \ 000025 85..                 sta     dp:.tiny (_Dp+8)
    \ 000027 a9af00               lda     ##175
    \ 00002a 85..                 sta     dp:.tiny (_Dp+10)
    \ 00002c ad....               lda     vickyBitmapPage
    \ 00002f 0a                   asl     a
    \ 000030 0a                   asl     a
    \ 000031 0a                   asl     a
    \ 000032 85..                 sta     dp:.tiny (_Dp+12)
    \ 000034 18                   clc
    \ 000035 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000037 65..                 adc     dp:.tiny (_Dp+12)
    \ 000039 85..                 sta     dp:.tiny (_Dp+8)
    \ 00003b a00300               ldy     ##3
    \ 00003e b7..                 lda     [.tiny (_Dp+8)],y
    \ 000040 29ff00               and     ##255
    \ 000043 aa                   tax
    \ 000044 a00100               ldy     ##1
    \ 000047 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000049 22......             jsl     long:_FillDP2
    \ 00004d ..                   .byte   .tiny (_Dp+8)
    \ 00004e 22......             jsl     long:_FillDP2
    \ 000052 ..                   .byte   .tiny (_Dp+10)
    \ 000053 18                   clc
    \ 000054 65..                 adc     dp:.tiny (_Dp+8)
    \ 000056 48                   pha
    \ 000057 8a                   txa
    \ 000058 65..                 adc     dp:.tiny (_Dp+10)
    \ 00005a aa                   tax
    \ 00005b 68                   pla
    \ 00005c 86..                 stx     dp:.tiny (_Dp+14)
    \ 00005e 85..                 sta     dp:.tiny (_Dp+12)
    \ 000060 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000062 8f0204af             sta     long:11469826
    \ 000066 e220                 sep     #32
    \ 000068 a5..                 lda     dp:.tiny (_Dp+14)
    \ 00006a 8f0404af             sta     long:11469828
    \ 00006e c220                 rep     #32
    \ 000070 a5..                 lda     dp:.tiny _Dp
    \ 000072 85..                 sta     dp:.tiny (_Dp+8)
    \ 000074 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000076 85..                 sta     dp:.tiny (_Dp+10)
    \ 000078 a5..                 lda     dp:.tiny (_Dp+8)
    \ 00007a 8f2504af             sta     long:11469861
    \ 00007e e220                 sep     #32
    \ 000080 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000082 8f2704af             sta     long:11469863
    \ 000086 c220                 rep     #32
    \ 000088 a5..                 lda     dp:.tiny (_Dp+4)
    \ 00008a 8f0804af             sta     long:11469832
    \ 00008e a5..                 lda     dp:.tiny (_Dp+6)
    \ 000090 8f0a04af             sta     long:11469834
    \ 000094 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000096 8d2804               sta     1064
    \ 000099 a5..                 lda     dp:.tiny (_Dp+6)
    \ 00009b 8d2a04               sta     1066
    \ 00009e a5..                 lda     dp:.tiny (_Dp+6)
    \ 0000a0 48                   pha
    \ 0000a1 a5..                 lda     dp:.tiny (_Dp+4)
    \ 0000a3 48                   pha
    \ 0000a4 a5..                 lda     dp:.tiny (_Dp+2)
    \ 0000a6 48                   pha
    \ 0000a7 a5..                 lda     dp:.tiny _Dp
    \ 0000a9 48                   pha
    \ 0000aa a6..                 ldx     dp:.tiny (_Dp+14)
    \ 0000ac a5..                 lda     dp:.tiny (_Dp+12)
    \ 0000ae da                   phx
    \ 0000af 48                   pha
    \ 0000b0 a9....               lda     ##`_StringLiteral_[115,111,117,114,99,101,58,32,37,120,32,100,101,115,116,58,32,37,120,32,108,101,110,58,37,108,100,13]`
    \ 0000b3 22......             jsl     long:printf
0602                      // Start VDMA
0603                      VDMA_CONTROL_REG |= VDMA_CTRL_Start_TRF;
    \ 0000b7 3b                   tsc
    \ 0000b8 18                   clc
    \ 0000b9 690c00               adc     ##12
    \ 0000bc 1b                   tcs
    \ 0000bd e220                 sep     #32
    \ 0000bf a980                 lda     #-128
    \ 0000c1 0f0004af             ora     long:11469824
    \ 0000c5 8f0004af             sta     long:11469824
0604                  	SDMA_CTRL_REG0 |= SDMA_CTRL0_Start_TRF;
    \ 0000c9 a980                 lda     #-128
0605                  	printf ("Xfer inititated\r");
    \ 0000cb 22......             jsl     long:`?L1271`
    \ 0000cf a9....               lda     ##`_StringLiteral_[88,102,101,114,32,105,110,105,116,105,116,97,116,101,100,13]`
    \ 0000d2 22......             jsl     long:printf
0606                      // When started, the 65816 is held, but it takes a few cycles.
0607                      // Provide a short delay to ensure that we do not execute too far
0608                      // before the transfer actually starts. Call a delay subroutine for
0609                      // this.
0610                      DMA_wait_delay();
    \ 0000d6 22......             jsl     long:DMA_wait_delay
0611                  	printf ("waiting..\r");
    \ 0000da a9....               lda     ##`_StringLiteral_[119,97,105,116,105,110,103,46,46,13]`
    \ 0000dd 22......             jsl     long:printf
0612                      wait_for_DMA_to_finish();
    \ 0000e1 22......             jsl     long:wait_for_DMA_to_finish
0613                  	printf ("Finish..\r");
    \ 0000e5 a9....               lda     ##`_StringLiteral_[70,105,110,105,115,104,46,46,13]`
    \ 0000e8 22......             jsl     long:printf
    \ 0000ec          `?L1186`:
0614                  }
    \ 0000ec 7a                   ply
    \ 0000ed 84..                 sty     dp:.tiny (_Dp+14)
    \ 0000ef 7a                   ply
    \ 0000f0 84..                 sty     dp:.tiny (_Dp+12)
    \ 0000f2 5c......             jmp     long:`?L185`
0615                  
0616                  //----------------------------------------------------
0617                  // Super Simple Rectangle by Ernesto Contreras
0618                  // ---------------------------------------------------
0619                  void plot_rectangle (int x0, int y0, int x1, int y1, uint8_t col)
0620                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public plot_rectangle
    \ 000000          plot_rectangle:
    \ 000000 5a                   phy
    \ 000001 5a                   phy
    \ 000002 5a                   phy
    \ 000003 8301                 sta     1,s
    \ 000005 a5..                 lda     dp:.tiny _Dp
    \ 000007 8303                 sta     3,s
    \ 000009 a5..                 lda     dp:.tiny (_Dp+2)
    \ 00000b 8305                 sta     5,s
0621                  	plot_line (x0,y0,x1,y0,col);
    \ 00000d a30c                 lda     12,s
    \ 00000f 48                   pha
    \ 000010 a305                 lda     5,s
    \ 000012 48                   pha
    \ 000013 a309                 lda     9,s
    \ 000015 85..                 sta     dp:.tiny (_Dp+2)
    \ 000017 a307                 lda     7,s
    \ 000019 85..                 sta     dp:.tiny _Dp
    \ 00001b a305                 lda     5,s
    \ 00001d 22......             jsl     long:plot_line
0622                  	plot_line (x0,y1,x1,y1,col);
    \ 000021 a310                 lda     16,s
    \ 000023 48                   pha
    \ 000024 a310                 lda     16,s
    \ 000026 48                   pha
    \ 000027 a30d                 lda     13,s
    \ 000029 85..                 sta     dp:.tiny (_Dp+2)
    \ 00002b a312                 lda     18,s
    \ 00002d 85..                 sta     dp:.tiny _Dp
    \ 00002f a309                 lda     9,s
    \ 000031 22......             jsl     long:plot_line
0623                  	plot_line (x0,y0,x0,y1,col);
    \ 000035 a314                 lda     20,s
    \ 000037 48                   pha
    \ 000038 a314                 lda     20,s
    \ 00003a 48                   pha
    \ 00003b a30d                 lda     13,s
    \ 00003d 85..                 sta     dp:.tiny (_Dp+2)
    \ 00003f a30f                 lda     15,s
    \ 000041 85..                 sta     dp:.tiny _Dp
    \ 000043 a30d                 lda     13,s
    \ 000045 22......             jsl     long:plot_line
0624                  	plot_line (x1,y0,x1,y1,col);
    \ 000049 a318                 lda     24,s
    \ 00004b 48                   pha
    \ 00004c a318                 lda     24,s
    \ 00004e 48                   pha
    \ 00004f a315                 lda     21,s
    \ 000051 85..                 sta     dp:.tiny (_Dp+2)
    \ 000053 a313                 lda     19,s
    \ 000055 85..                 sta     dp:.tiny _Dp
    \ 000057 a315                 lda     21,s
    \ 000059 22......             jsl     long:plot_line
    \ 00005d 3b                   tsc
    \ 00005e 18                   clc
    \ 00005f 691000               adc     ##16
    \ 000062 1b                   tcs
0625                  }
    \ 000063 7a                   ply
    \ 000064 7a                   ply
    \ 000065 7a                   ply
    \ 000066 6b                   rtl
0626                  
0627                  //-----------------------------------------
0628                  // Solid Rectangle by Ernesto Contreras
0629                  // Uses VDMA Fill function
0630                  //------------------------------------------
0631                  void plot_solid_rectangle  (int x0, int y0, int x1, int y1, uint8_t col)
0632                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public plot_solid_rectangle
    \ 000000          plot_solid_rectangle:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 a8                   tay
    \ 000005 3b                   tsc
    \ 000006 38                   sec
    \ 000007 e90a00               sbc     ##10
    \ 00000a 1b                   tcs
    \ 00000b 98                   tya
    \ 00000c aa                   tax
    \ 00000d a5..                 lda     dp:.tiny _Dp
    \ 00000f 8303                 sta     3,s
    \ 000011 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000013 8305                 sta     5,s
0633                  uint8_t __far24 *ptr;
0634                  int swap;
0635                  long address;
0636                  
0637                  	if (x0>x1) // Ensure x1 is greater than x0 
    \ 000015 a305                 lda     5,s
    \ 000017 86..                 stx     dp:.tiny _Dp
    \ 000019 38                   sec
    \ 00001a e5..                 sbc     dp:.tiny _Dp
    \ 00001c 5003                 bvc     `?L621`
    \ 00001e 490080               eor     ##-32768
    \ 000021 1011     `?L621`:    bpl     `?L210`
0638                  	{ 
0639                  	  swap=x0;
    \ 000023 8a                   txa
    \ 000024 8301                 sta     1,s
0640                  	  x0=x1;
    \ 000026 a305                 lda     5,s
    \ 000028 a8                   tay
0641                  	  x1=swap;
    \ 000029 a301                 lda     1,s
    \ 00002b aa                   tax
    \ 00002c 98                   tya
    \ 00002d 8307                 sta     7,s
    \ 00002f 8a                   txa
    \ 000030 8305                 sta     5,s
    \ 000032 8003                 bra     `?L211`
    \ 000034 8a       `?L210`:    txa
    \ 000035 8307                 sta     7,s
    \ 000037          `?L211`:
0642                  	}
0643                  	
0644                  	if (y0>y1) // Ensure y1 is greater than y0 
    \ 000037 a312                 lda     18,s
    \ 000039 38                   sec
    \ 00003a e303                 sbc     3,s
    \ 00003c 5003                 bvc     `?L623`
    \ 00003e 490080               eor     ##-32768
    \ 000041 100b     `?L623`:    bpl     `?L213`
0645                  	{ 
0646                  	  swap=y0;
    \ 000043 a303                 lda     3,s
    \ 000045 8301                 sta     1,s
0647                  	  y0=y1;
    \ 000047 a312                 lda     18,s
    \ 000049 a8                   tay
0648                  	  y1=swap;
    \ 00004a a301                 lda     1,s
    \ 00004c 8005                 bra     `?L1164`
    \ 00004e a303     `?L213`:    lda     3,s
    \ 000050 a8                   tay
    \ 000051 a312                 lda     18,s
    \ 000053 aa       `?L1164`:   tax
0649                  	}
0650                  
0651                  	// one pixel rectangles are not allowed!
0652                  	if (x0==x1) {x1++;}
    \ 000054 a305                 lda     5,s
    \ 000056 c307                 cmp     7,s
    \ 000058 d009                 bne     `?L216`
    \ 00005a 1a                   inc     a
    \ 00005b 3a                   dec     a
    \ 00005c 1a                   inc     a
    \ 00005d 8301                 sta     1,s
    \ 00005f a301                 lda     1,s
    \ 000061 8002                 bra     `?L1163`
    \ 000063 1a       `?L216`:    inc     a
    \ 000064 3a                   dec     a
    \ 000065 8303     `?L1163`:   sta     3,s
0653                  	if (y0==y1) {y1++;}
    \ 000067 84..                 sty     dp:.tiny _Dp
    \ 000069 e4..                 cpx     dp:.tiny _Dp
    \ 00006b d008                 bne     `?L219`
    \ 00006d 8a                   txa
    \ 00006e 1a                   inc     a
    \ 00006f 8301                 sta     1,s
    \ 000071 a301                 lda     1,s
    \ 000073 8001                 bra     `?L1162`
    \ 000075 8a       `?L219`:    txa
    \ 000076 8305     `?L1162`:   sta     5,s
0654                  	
0655                  	// validate coordinates before memset
0656                  	if (x0<0) {x0=0;}
    \ 000078 a307                 lda     7,s
    \ 00007a 1007                 bpl     `?L222`
    \ 00007c a90000               lda     ##0
    \ 00007f 8301                 sta     1,s
    \ 000081 8002                 bra     `?L1161`
    \ 000083 1a       `?L222`:    inc     a
    \ 000084 3a                   dec     a
    \ 000085 8301     `?L1161`:   sta     1,s
0657                  	if (y0<0) {y0=0;}
    \ 000087 84..                 sty     dp:.tiny _Dp
    \ 000089 a5..                 lda     dp:.tiny _Dp
    \ 00008b 1005                 bpl     `?L225`
    \ 00008d a90000               lda     ##0
    \ 000090 8001                 bra     `?L1160`
    \ 000092 98       `?L225`:    tya
    \ 000093 8307     `?L1160`:   sta     7,s
0658                  	if (x1<0) {x1=0;}
    \ 000095 a303                 lda     3,s
    \ 000097 1005                 bpl     `?L229`
    \ 000099 a90000               lda     ##0
    \ 00009c 8303                 sta     3,s
    \ 00009e          `?L229`:
0659                  	if (y1<0) {y1=0;}
    \ 00009e a305                 lda     5,s
    \ 0000a0 1005                 bpl     `?L232`
    \ 0000a2 a90000               lda     ##0
    \ 0000a5 8305                 sta     5,s
    \ 0000a7          `?L232`:
0660                  	
0661                  	if (x0>=vickyResX) {x0=vickyResX-1;}
    \ 0000a7 a20000               ldx     ##0
    \ 0000aa a301                 lda     1,s
    \ 0000ac 1001                 bpl     `?L625`
    \ 0000ae ca                   dex
    \ 0000af          `?L625`:
    \ 0000af 22......             jsl     long:`?L1232`
    \ 0000b3 5003                 bvc     `?L627`
    \ 0000b5 490080               eor     ##-32768
    \ 0000b8 3006     `?L627`:    bmi     `?L234`
    \ 0000ba ad....               lda     vickyResX
    \ 0000bd 3a                   dec     a
    \ 0000be 8002                 bra     `?L1159`
    \ 0000c0 a301     `?L234`:    lda     1,s
    \ 0000c2 8309     `?L1159`:   sta     9,s
0662                  	if (y0>=vickyResY) {y0=vickyResY;}
    \ 0000c4 a20000               ldx     ##0
    \ 0000c7 a307                 lda     7,s
    \ 0000c9 1001                 bpl     `?L629`
    \ 0000cb ca                   dex
    \ 0000cc          `?L629`:
    \ 0000cc 22......             jsl     long:`?L1245`
    \ 0000d0 5003                 bvc     `?L631`
    \ 0000d2 490080               eor     ##-32768
    \ 0000d5 3005     `?L631`:    bmi     `?L238`
    \ 0000d7 ad....               lda     vickyResY
    \ 0000da 8307                 sta     7,s
    \ 0000dc          `?L238`:
0663                  	if (x1>=vickyResX) {x1=vickyResX-1;}
    \ 0000dc a20000               ldx     ##0
    \ 0000df a303                 lda     3,s
    \ 0000e1 1001                 bpl     `?L633`
    \ 0000e3 ca                   dex
    \ 0000e4          `?L633`:
    \ 0000e4 22......             jsl     long:`?L1232`
    \ 0000e8 5003                 bvc     `?L635`
    \ 0000ea 490080               eor     ##-32768
    \ 0000ed 3008     `?L635`:    bmi     `?L240`
    \ 0000ef ad....               lda     vickyResX
    \ 0000f2 3a                   dec     a
    \ 0000f3 8301                 sta     1,s
    \ 0000f5 8004                 bra     `?L241`
    \ 0000f7 a303     `?L240`:    lda     3,s
    \ 0000f9 8301                 sta     1,s
    \ 0000fb          `?L241`:
0664                  	if (y1>=vickyResY) {y1=vickyResY;}
    \ 0000fb a20000               ldx     ##0
    \ 0000fe a305                 lda     5,s
    \ 000100 1001                 bpl     `?L637`
    \ 000102 ca                   dex
    \ 000103          `?L637`:
    \ 000103 22......             jsl     long:`?L1245`
    \ 000107 5003                 bvc     `?L639`
    \ 000109 490080               eor     ##-32768
    \ 00010c 3007     `?L639`:    bmi     `?L243`
    \ 00010e ad....               lda     vickyResY
    \ 000111 8303                 sta     3,s
    \ 000113 8002                 bra     `?L1158`
    \ 000115 a305     `?L243`:    lda     5,s
    \ 000117 8303     `?L1158`:   sta     3,s
0665                  
0666                  	ptr= bitplane[vickyBitmapPage].start;
0667                  	address=(x0 + vickyResX * y0);
    \ 000119 22......             jsl     long:`?L1207`
    \ 00011d a309                 lda     9,s
    \ 00011f a20000               ldx     ##0
    \ 000122 a8                   tay
    \ 000123 1001                 bpl     `?L641`
    \ 000125 ca                   dex
    \ 000126          `?L641`:
    \ 000126 86..                 stx     dp:.tiny (_Dp+10)
    \ 000128 85..                 sta     dp:.tiny (_Dp+8)
    \ 00012a ad....               lda     vickyResX
    \ 00012d 85..                 sta     dp:.tiny _Dp
    \ 00012f ad....               lda     vickyResX+2
    \ 000132 85..                 sta     dp:.tiny (_Dp+2)
    \ 000134 a307                 lda     7,s
    \ 000136 a20000               ldx     ##0
    \ 000139 a8                   tay
    \ 00013a 1001                 bpl     `?L643`
    \ 00013c ca                   dex
    \ 00013d          `?L643`:
    \ 00013d 86..                 stx     dp:.tiny (_Dp+6)
    \ 00013f 85..                 sta     dp:.tiny (_Dp+4)
    \ 000141 22......             jsl     long:_Mul32
    \ 000145 18                   clc
    \ 000146 65..                 adc     dp:.tiny (_Dp+8)
    \ 000148 48                   pha
    \ 000149 8a                   txa
    \ 00014a 65..                 adc     dp:.tiny (_Dp+10)
    \ 00014c aa                   tax
    \ 00014d 68                   pla
0668                  	ptr= address + (long)bitplane[vickyBitmapPage].start;
0669                      VDMA_CONTROL_REG |= VDMA_CTRL_TRF_Fill | VDMA_CTRL_1D_2D  + 1; //1 added to Enable!, I believe Calypsi memset function needs this change too!
0670                  	VDMA_DST_ADDY = ptr; // calculate destination address 
0671                      VDMA_BYTE_2_WRITE = col;
0672                  	VDMA_X_SIZE = x1-x0;  
0673                  	VDMA_Y_SIZE = y1-y0;
0674                      VDMA_DST_STRIDE = vickyResX;
0675                  	// printf ("x:%d y:%d x1:%d y1:%d address:%ld %ld\n\r",x0,y0,x1,y1,address,ptr); // debug
0676                      // Start VDMA
0677                      VDMA_CONTROL_REG |= VDMA_CTRL_Start_TRF;
0678                  
0679                      // When started, the 65816 is held, but it takes a few cycles.
0680                      // Provide a short delay to ensure that we do not execute too far
0681                      // before the transfer actually starts. Call a delay subroutine for
0682                      // this.
0683                      DMA_wait_delay();
    \ 00014e 22......             jsl     long:`?L1202`
    \ 000152 a00300               ldy     ##3
    \ 000155 b7..                 lda     [.tiny (_Dp+4)],y
    \ 000157 29ff00               and     ##255
    \ 00015a aa                   tax
    \ 00015b a00100               ldy     ##1
    \ 00015e b7..                 lda     [.tiny (_Dp+4)],y
    \ 000160 18                   clc
    \ 000161 65..                 adc     dp:.tiny _Dp
    \ 000163 48                   pha
    \ 000164 8a                   txa
    \ 000165 65..                 adc     dp:.tiny (_Dp+2)
    \ 000167 aa                   tax
    \ 000168 68                   pla
    \ 000169 86..                 stx     dp:.tiny (_Dp+2)
    \ 00016b 85..                 sta     dp:.tiny _Dp
    \ 00016d e220                 sep     #32
    \ 00016f a907                 lda     #7
    \ 000171 22......             jsl     long:`?L1227`
    \ 000175 8f0704af             sta     long:11469831
    \ 000179 a314                 lda     20,s
    \ 00017b 8f0104af             sta     long:11469825
    \ 00017f c220                 rep     #32
    \ 000181 a301                 lda     1,s
    \ 000183 38                   sec
    \ 000184 e309                 sbc     9,s
    \ 000186 8f0804af             sta     long:11469832
    \ 00018a a303                 lda     3,s
    \ 00018c 38                   sec
    \ 00018d e307                 sbc     7,s
    \ 00018f 8f0a04af             sta     long:11469834
    \ 000193 ad....               lda     vickyResX
    \ 000196 8f0e04af             sta     long:11469838
    \ 00019a 22......             jsl     long:`?L1219`
0684                      wait_for_DMA_to_finish();
0685                  }
    \ 00019e 3b                   tsc
    \ 00019f 18                   clc
    \ 0001a0 690a00               adc     ##10
    \ 0001a3 1b                   tcs
    \ 0001a4 5c......             jmp     long:`?L1188`
0686                  
0687                  // ----------------------------------------------
0688                  // 4 point Bezier curve 
0689                  // Credits to M G Channel
0690                  // https://www.youtube.com/watch?v=KiscPiPdLv4
0691                  // Adapted by Ernesto Contreras
0692                  // ----------------------------------------------
0693                  void plot_bezier (int x0, int y0, int x1, int y1, int x2, int y2, int x3, int y3, uint8_t col)
0694                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public plot_bezier
    \ 000000          plot_bezier:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 a8                   tay
    \ 000009 3b                   tsc
    \ 00000a 38                   sec
    \ 00000b e91200               sbc     ##18
    \ 00000e 1b                   tcs
    \ 00000f 98                   tya
    \ 000010 8301                 sta     1,s
    \ 000012 a5..                 lda     dp:.tiny _Dp
    \ 000014 8303                 sta     3,s
    \ 000016 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000018 8305                 sta     5,s
0695                  	float u, pxe, pye,pxi,pyi;
0696                  	pxi=0;
    \ 00001a a90000               lda     ##0
    \ 00001d 85..                 sta     dp:.tiny _Dp
    \ 00001f 85..                 sta     dp:.tiny (_Dp+2)
0697                  	pyi=0;
    \ 000021 85..                 sta     dp:.tiny (_Dp+4)
    \ 000023 85..                 sta     dp:.tiny (_Dp+6)
0698                  	for (u=0;u<=1.0;u=u+0.02)
    \ 000025 85..                 sta     dp:.tiny (_Dp+8)
    \ 000027 85..                 sta     dp:.tiny (_Dp+10)
    \ 000029 a5..                 lda     dp:.tiny _Dp
    \ 00002b 830f                 sta     15,s
    \ 00002d a5..                 lda     dp:.tiny (_Dp+2)
    \ 00002f 8311                 sta     17,s
    \ 000031 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000033 8307                 sta     7,s
    \ 000035 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000037 8309     `?L1165`:   sta     9,s
    \ 000039 a90000               lda     ##0
    \ 00003c a2803f               ldx     ##16256
    \ 00003f a4..                 ldy     dp:.tiny (_Dp+8)
    \ 000041 84..                 sty     dp:.tiny _Dp
    \ 000043 a4..                 ldy     dp:.tiny (_Dp+10)
    \ 000045 22......             jsl     long:`?L1249`
    \ 000049 b013                 bcs     `?L249`
0699                  	{
0700                  		pxe=pow(1-u,3)*x0+3*u*pow(1-u,2)*x1+3*pow(u,2)*(1-u)*x2+pow(u,3)*x3;
0701                  		pye=pow(1-u,3)*y0+3*u*pow(1-u,2)*y1+3*pow(u,2)*(1-u)*y2+pow(u,3)*y3;
0702                  		if (pxi!=0 || pyi!=0)
0703                  		{
0704                  			plot_line (pxi,pyi,pxe,pye,col);
0705                  		}
0706                  		pxi=pxe;
0707                  		pyi=pye;
0708                  	}
0709                  }	
    \ 00004b 3b                   tsc
    \ 00004c 18                   clc
    \ 00004d 691200               adc     ##18
    \ 000050 1b                   tcs
    \ 000051 7a                   ply
    \ 000052 84..                 sty     dp:.tiny (_Dp+14)
    \ 000054 7a                   ply
    \ 000055 84..                 sty     dp:.tiny (_Dp+12)
    \ 000057 7a       `?L1188`:   ply
    \ 000058 84..                 sty     dp:.tiny (_Dp+10)
    \ 00005a 7a                   ply
    \ 00005b 84..                 sty     dp:.tiny (_Dp+8)
    \ 00005d 6b                   rtl
    \ 00005e a20300   `?L249`:    ldx     ##3
    \ 000061 86..                 stx     dp:.tiny _Dp
    \ 000063 d4..                 pei     dp:.tiny _Dp
    \ 000065 22......             jsl     long:`?L1201`
    \ 000069 22......             jsl     long:_FillDP2
    \ 00006d ..                   .byte   .tiny _Dp
    \ 00006e 22......             jsl     long:pow
    \ 000072 86..                 stx     dp:.tiny (_Dp+2)
    \ 000074 85..                 sta     dp:.tiny _Dp
    \ 000076 a301                 lda     1,s
    \ 000078 a20000               ldx     ##0
    \ 00007b a8                   tay
    \ 00007c 1001                 bpl     `?L651`
    \ 00007e ca                   dex
    \ 00007f          `?L651`:
    \ 00007f 22......             jsl     long:_SInt32ToFloat32
    \ 000083 22......             jsl     long:_Float32Mul
    \ 000087 da                   phx
    \ 000088 48                   pha
    \ 000089 22......             jsl     long:`?L1273`
    \ 00008d a4..                 ldy     dp:.tiny (_Dp+10)
    \ 00008f 22......             jsl     long:`?L1200`
    \ 000093 da                   phx
    \ 000094 48                   pha
    \ 000095 a20200               ldx     ##2
    \ 000098 86..                 stx     dp:.tiny _Dp
    \ 00009a d4..                 pei     dp:.tiny _Dp
    \ 00009c 22......             jsl     long:`?L1201`
    \ 0000a0 22......             jsl     long:_FillDP2
    \ 0000a4 ..                   .byte   .tiny _Dp
    \ 0000a5 22......             jsl     long:pow
    \ 0000a9 22......             jsl     long:_FillDP4
    \ 0000ad ..                   .byte   .tiny _Dp
    \ 0000ae 22......             jsl     long:`?L1194`
    \ 0000b2 a309                 lda     9,s
    \ 0000b4 a20000               ldx     ##0
    \ 0000b7 a8                   tay
    \ 0000b8 1001                 bpl     `?L659`
    \ 0000ba ca                   dex
    \ 0000bb          `?L659`:
    \ 0000bb 22......             jsl     long:_SInt32ToFloat32
    \ 0000bf 22......             jsl     long:_Float32Mul
    \ 0000c3 22......             jsl     long:_FillDP4
    \ 0000c7 ..                   .byte   .tiny _Dp
    \ 0000c8 22......             jsl     long:_Float32Add
    \ 0000cc da                   phx
    \ 0000cd 48                   pha
    \ 0000ce 22......             jsl     long:`?L1265`
    \ 0000d2 d4..                 pei     dp:.tiny (_Dp+2)
    \ 0000d4 d4..                 pei     dp:.tiny _Dp
    \ 0000d6 a20200               ldx     ##2
    \ 0000d9 22......             jsl     long:`?L1221`
    \ 0000dd 22......             jsl     long:_FillDP2
    \ 0000e1 ..                   .byte   .tiny _Dp
    \ 0000e2 22......             jsl     long:_FillDP2
    \ 0000e6 ..                   .byte   .tiny (_Dp+2)
    \ 0000e7 22......             jsl     long:_Float32Mul
    \ 0000eb da                   phx
    \ 0000ec 48                   pha
    \ 0000ed 22......             jsl     long:`?L1201`
    \ 0000f1 22......             jsl     long:_FillDP4
    \ 0000f5 ..                   .byte   .tiny _Dp
    \ 0000f6 22......             jsl     long:`?L1194`
    \ 0000fa a324                 lda     36,s
    \ 0000fc a20000               ldx     ##0
    \ 0000ff a8                   tay
    \ 000100 1001                 bpl     `?L668`
    \ 000102 ca                   dex
    \ 000103          `?L668`:
    \ 000103 22......             jsl     long:_SInt32ToFloat32
    \ 000107 22......             jsl     long:_Float32Mul
    \ 00010b 22......             jsl     long:_FillDP4
    \ 00010f ..                   .byte   .tiny _Dp
    \ 000110 22......             jsl     long:_Float32Add
    \ 000114 da                   phx
    \ 000115 48                   pha
    \ 000116 a20300               ldx     ##3
    \ 000119 22......             jsl     long:`?L1221`
    \ 00011d 86..                 stx     dp:.tiny (_Dp+2)
    \ 00011f 85..                 sta     dp:.tiny _Dp
    \ 000121 a328                 lda     40,s
    \ 000123 a20000               ldx     ##0
    \ 000126 a8                   tay
    \ 000127 1001                 bpl     `?L674`
    \ 000129 ca                   dex
    \ 00012a          `?L674`:
    \ 00012a 22......             jsl     long:_SInt32ToFloat32
    \ 00012e 22......             jsl     long:_Float32Mul
    \ 000132 22......             jsl     long:_FillDP4
    \ 000136 ..                   .byte   .tiny _Dp
    \ 000137 22......             jsl     long:_Float32Add
    \ 00013b 86..                 stx     dp:.tiny (_Dp+14)
    \ 00013d 85..                 sta     dp:.tiny (_Dp+12)
    \ 00013f a20300               ldx     ##3
    \ 000142 86..                 stx     dp:.tiny _Dp
    \ 000144 d4..                 pei     dp:.tiny _Dp
    \ 000146 22......             jsl     long:`?L1201`
    \ 00014a 22......             jsl     long:_FillDP2
    \ 00014e ..                   .byte   .tiny _Dp
    \ 00014f 22......             jsl     long:pow
    \ 000153 86..                 stx     dp:.tiny (_Dp+2)
    \ 000155 85..                 sta     dp:.tiny _Dp
    \ 000157 a303                 lda     3,s
    \ 000159 a20000               ldx     ##0
    \ 00015c a8                   tay
    \ 00015d 1001                 bpl     `?L681`
    \ 00015f ca                   dex
    \ 000160          `?L681`:
    \ 000160 22......             jsl     long:_SInt32ToFloat32
    \ 000164 22......             jsl     long:_Float32Mul
    \ 000168 da                   phx
    \ 000169 48                   pha
    \ 00016a 22......             jsl     long:`?L1273`
    \ 00016e a4..                 ldy     dp:.tiny (_Dp+10)
    \ 000170 22......             jsl     long:`?L1200`
    \ 000174 da                   phx
    \ 000175 48                   pha
    \ 000176 a20200               ldx     ##2
    \ 000179 86..                 stx     dp:.tiny _Dp
    \ 00017b d4..                 pei     dp:.tiny _Dp
    \ 00017d 22......             jsl     long:`?L1201`
    \ 000181 22......             jsl     long:_FillDP2
    \ 000185 ..                   .byte   .tiny _Dp
    \ 000186 22......             jsl     long:pow
    \ 00018a 22......             jsl     long:_FillDP4
    \ 00018e ..                   .byte   .tiny _Dp
    \ 00018f 22......             jsl     long:`?L1194`
    \ 000193 a322                 lda     34,s
    \ 000195 a20000               ldx     ##0
    \ 000198 a8                   tay
    \ 000199 1001                 bpl     `?L689`
    \ 00019b ca                   dex
    \ 00019c          `?L689`:
    \ 00019c 22......             jsl     long:_SInt32ToFloat32
    \ 0001a0 22......             jsl     long:_Float32Mul
    \ 0001a4 22......             jsl     long:_FillDP4
    \ 0001a8 ..                   .byte   .tiny _Dp
    \ 0001a9 22......             jsl     long:_Float32Add
    \ 0001ad da                   phx
    \ 0001ae 48                   pha
    \ 0001af 22......             jsl     long:`?L1265`
    \ 0001b3 d4..                 pei     dp:.tiny (_Dp+2)
    \ 0001b5 d4..                 pei     dp:.tiny _Dp
    \ 0001b7 a20200               ldx     ##2
    \ 0001ba 22......             jsl     long:`?L1221`
    \ 0001be 22......             jsl     long:_FillDP2
    \ 0001c2 ..                   .byte   .tiny _Dp
    \ 0001c3 22......             jsl     long:_FillDP2
    \ 0001c7 ..                   .byte   .tiny (_Dp+2)
    \ 0001c8 22......             jsl     long:_Float32Mul
    \ 0001cc da                   phx
    \ 0001cd 48                   pha
    \ 0001ce 22......             jsl     long:`?L1201`
    \ 0001d2 22......             jsl     long:_FillDP4
    \ 0001d6 ..                   .byte   .tiny _Dp
    \ 0001d7 22......             jsl     long:`?L1194`
    \ 0001db a326                 lda     38,s
    \ 0001dd a20000               ldx     ##0
    \ 0001e0 a8                   tay
    \ 0001e1 1001                 bpl     `?L698`
    \ 0001e3 ca                   dex
    \ 0001e4          `?L698`:
    \ 0001e4 22......             jsl     long:_SInt32ToFloat32
    \ 0001e8 22......             jsl     long:_Float32Mul
    \ 0001ec 22......             jsl     long:_FillDP4
    \ 0001f0 ..                   .byte   .tiny _Dp
    \ 0001f1 22......             jsl     long:_Float32Add
    \ 0001f5 da                   phx
    \ 0001f6 48                   pha
    \ 0001f7 a20300               ldx     ##3
    \ 0001fa 22......             jsl     long:`?L1221`
    \ 0001fe 86..                 stx     dp:.tiny (_Dp+2)
    \ 000200 85..                 sta     dp:.tiny _Dp
    \ 000202 a32a                 lda     42,s
    \ 000204 a20000               ldx     ##0
    \ 000207 a8                   tay
    \ 000208 1001                 bpl     `?L704`
    \ 00020a ca                   dex
    \ 00020b          `?L704`:
    \ 00020b 22......             jsl     long:_SInt32ToFloat32
    \ 00020f 22......             jsl     long:_Float32Mul
    \ 000213 22......             jsl     long:_FillDP4
    \ 000217 ..                   .byte   .tiny _Dp
    \ 000218 22......             jsl     long:_Float32Add
    \ 00021c 830b                 sta     11,s
    \ 00021e 8a                   txa
    \ 00021f 830d                 sta     13,s
    \ 000221 a311                 lda     17,s
    \ 000223 85..                 sta     dp:.tiny (_Dp+2)
    \ 000225 a30f                 lda     15,s
    \ 000227 85..                 sta     dp:.tiny _Dp
    \ 000229 a90000               lda     ##0
    \ 00022c aa                   tax
    \ 00022d 22......             jsl     long:_Float32EQ
    \ 000231 d00f                 bne     `?L255`
    \ 000233 a309                 lda     9,s
    \ 000235 85..                 sta     dp:.tiny (_Dp+2)
    \ 000237 a307                 lda     7,s
    \ 000239 85..                 sta     dp:.tiny _Dp
    \ 00023b 8a                   txa
    \ 00023c 22......             jsl     long:_Float32EQ
    \ 000240 f031                 beq     `?L254`
    \ 000242 a328     `?L255`:    lda     40,s
    \ 000244 48                   pha
    \ 000245 a30f                 lda     15,s
    \ 000247 aa                   tax
    \ 000248 a30d                 lda     13,s
    \ 00024a 22......             jsl     long:_Float32ToSInt32
    \ 00024e 48                   pha
    \ 00024f a6..                 ldx     dp:.tiny (_Dp+14)
    \ 000251 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000253 22......             jsl     long:_Float32ToSInt32
    \ 000257 85..                 sta     dp:.tiny (_Dp+2)
    \ 000259 a30d                 lda     13,s
    \ 00025b aa                   tax
    \ 00025c a30b                 lda     11,s
    \ 00025e 22......             jsl     long:_Float32ToSInt32
    \ 000262 85..                 sta     dp:.tiny _Dp
    \ 000264 a315                 lda     21,s
    \ 000266 aa                   tax
    \ 000267 a313                 lda     19,s
    \ 000269 22......             jsl     long:_Float32ToSInt32
    \ 00026d 22......             jsl     long:plot_line
    \ 000271 68                   pla
    \ 000272 68                   pla
    \ 000273          `?L254`:
    \ 000273 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000275 8307                 sta     7,s
    \ 000277 a5..                 lda     dp:.tiny (_Dp+14)
    \ 000279 8309                 sta     9,s
    \ 00027b 22......             jsl     long:`?L1204`
    \ 00027f a90ad7               lda     ##55050
    \ 000282 a2a33c               ldx     ##15523
    \ 000285 22......             jsl     long:_Float32Add
    \ 000289 86..                 stx     dp:.tiny (_Dp+10)
    \ 00028b 85..                 sta     dp:.tiny (_Dp+8)
    \ 00028d a307                 lda     7,s
    \ 00028f 830f                 sta     15,s
    \ 000291 a309                 lda     9,s
    \ 000293 8311                 sta     17,s
    \ 000295 a30b                 lda     11,s
    \ 000297 8307                 sta     7,s
    \ 000299 a30d                 lda     13,s
    \ 00029b 4c....               jmp     .kbank `?L1165`
0710                  		
0711                  // ---------------------------
0712                  // Simple pow function (power), to avoid adding complete Math.h
0713                  // Ernesto Contreras
0714                  // ---------------------------
0715                  float pow(float value,int power)
0716                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public pow
    \ 000000          pow:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000006 5a                   phy
    \ 000007 86..                 stx     dp:.tiny (_Dp+14)
    \ 000009 85..                 sta     dp:.tiny (_Dp+12)
    \ 00000b a5..                 lda     dp:.tiny _Dp
    \ 00000d 85..                 sta     dp:.tiny (_Dp+8)
0717                  	int c;
0718                  	float result;
0719                  	result=1;
    \ 00000f a90000               lda     ##0
    \ 000012 85..                 sta     dp:.tiny _Dp
    \ 000014 a9803f               lda     ##16256
    \ 000017 85..                 sta     dp:.tiny (_Dp+2)
0720                  	for (c=0;c<power;c++)
    \ 000019 a90000               lda     ##0
    \ 00001c 8301                 sta     1,s
    \ 00001e a301     `?L260`:    lda     1,s
    \ 000020 38                   sec
    \ 000021 e5..                 sbc     dp:.tiny (_Dp+8)
    \ 000023 5003                 bvc     `?L717`
    \ 000025 490080               eor     ##-32768
    \ 000028 300f     `?L717`:    bmi     `?L259`
0721                  	{
0722                  		result*=value;
0723                  	}
0724                  	return result;
    \ 00002a a6..                 ldx     dp:.tiny (_Dp+2)
    \ 00002c a5..                 lda     dp:.tiny _Dp
0725                  }
    \ 00002e 7a                   ply
    \ 00002f 7a                   ply
    \ 000030 84..                 sty     dp:.tiny (_Dp+14)
    \ 000032 7a                   ply
    \ 000033 84..                 sty     dp:.tiny (_Dp+12)
    \ 000035 7a                   ply
    \ 000036 84..                 sty     dp:.tiny (_Dp+8)
    \ 000038 6b                   rtl
    \ 000039          `?L259`:
    \ 000039 a6..                 ldx     dp:.tiny (_Dp+14)
    \ 00003b a5..                 lda     dp:.tiny (_Dp+12)
    \ 00003d 22......             jsl     long:`?L1194`
    \ 000041 a301                 lda     1,s
    \ 000043 1a                   inc     a
    \ 000044 8301                 sta     1,s
    \ 000046 a301                 lda     1,s
    \ 000048 80d4                 bra     `?L260`
0726                  
0727                  // ------------------------------------------
0728                  // Graphics Primitives
0729                  // Bresenham Algorithms in C
0730                  // Original Author: Bert Timmerman
0731                  // https://gist.github.com/bert/1085538
0732                  // Modified for Calypsi by Ernesto Contreras 
0733                  // ------------------------------------------
0734                  
0735                  
0736                  //----------------------------------------------------------
0737                  // Plot Line 
0738                  // Bresenham Algorithm
0739                  // Modified by Ernesto Contreras to optimize horizontal line cases (used to fill solid figures & floodfill)
0740                  // --------------------------------------------------------
0741                  void plot_line (int x0, int y0, int x1, int y1, uint8_t col)
0742                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public plot_line
    \ 000000          plot_line:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 a8                   tay
    \ 000009 3b                   tsc
    \ 00000a 38                   sec
    \ 00000b e91400               sbc     ##20
    \ 00000e 1b                   tcs
    \ 00000f 98                   tya
    \ 000010 8307                 sta     7,s
    \ 000012 a5..                 lda     dp:.tiny _Dp
    \ 000014 8309                 sta     9,s
    \ 000016 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000018 8313                 sta     19,s
0743                  long swap;
0744                  uint8_t __far24 *ptr;
0745                  	if (y0==y1) 
    \ 00001a a320                 lda     32,s
    \ 00001c c309                 cmp     9,s
    \ 00001e f003                 beq     `?L1426`
    \ 000020 4c....               jmp     .kbank `?L267`
    \ 000023          `?L1426`:
0746                  	// ------------------------------------------------
0747                      // Optimizations for horizontal Lines
0748                  	// ------------------------------------------------
0749                  	{
0750                  		if (y0<=vickyResY && y0>=0)
    \ 000023 18                   clc
    \ 000024 a20000               ldx     ##0
    \ 000027 a309                 lda     9,s
    \ 000029 1001                 bpl     `?L720`
    \ 00002b ca                   dex
    \ 00002c          `?L720`:
    \ 00002c ed....               sbc     vickyResY
    \ 00002f 8a                   txa
    \ 000030 ed....               sbc     vickyResY+2
    \ 000033 5003                 bvc     `?L722`
    \ 000035 490080               eor     ##-32768
    \ 000038 3003     `?L722`:    bmi     `?L1427`
    \ 00003a 4c....               jmp     .kbank `?L266`
    \ 00003d a309     `?L1427`:   lda     9,s
    \ 00003f 1003                 bpl     `?L1428`
    \ 000041 4c....               jmp     .kbank `?L266`
    \ 000044          `?L1428`:
0751                  		{
0752                  			if (x0>x1)
    \ 000044 a313                 lda     19,s
    \ 000046 38                   sec
    \ 000047 e307                 sbc     7,s
    \ 000049 5003                 bvc     `?L724`
    \ 00004b 490080               eor     ##-32768
    \ 00004e 1019     `?L724`:    bpl     `?L273`
0753                  			{
0754                  				swap=x1;
    \ 000050 a313                 lda     19,s
    \ 000052 a20000               ldx     ##0
    \ 000055 a8                   tay
    \ 000056 1001                 bpl     `?L726`
    \ 000058 ca                   dex
    \ 000059          `?L726`:
    \ 000059 86..                 stx     dp:.tiny (_Dp+2)
    \ 00005b 85..                 sta     dp:.tiny _Dp
0755                  				x1=x0;
    \ 00005d a307                 lda     7,s
    \ 00005f 8301                 sta     1,s
0756                  				x0=swap;
    \ 000061 a5..                 lda     dp:.tiny _Dp
    \ 000063 8303                 sta     3,s
    \ 000065 8303                 sta     3,s
    \ 000067 8008                 bra     `?L274`
    \ 000069 a307     `?L273`:    lda     7,s
    \ 00006b 8303                 sta     3,s
    \ 00006d a313                 lda     19,s
    \ 00006f 8301                 sta     1,s
    \ 000071          `?L274`:
0757                  			}
0758                  			
0759                  			// validate Coordinates
0760                  			if (x1>=vickyResX)
    \ 000071 a20000               ldx     ##0
    \ 000074 a301                 lda     1,s
    \ 000076 1001                 bpl     `?L728`
    \ 000078 ca                   dex
    \ 000079          `?L728`:
    \ 000079 22......             jsl     long:`?L1232`
    \ 00007d 5003                 bvc     `?L730`
    \ 00007f 490080               eor     ##-32768
    \ 000082 300a     `?L730`:    bmi     `?L276`
0761                  				x1=vickyResX-1;
    \ 000084 ad....               lda     vickyResX
    \ 000087 3a                   dec     a
    \ 000088 8301                 sta     1,s
    \ 00008a a301                 lda     1,s
    \ 00008c 8002                 bra     `?L1169`
    \ 00008e a301     `?L276`:    lda     1,s
    \ 000090 8305     `?L1169`:   sta     5,s
0762                  			if (x0>=vickyResX)
    \ 000092 a20000               ldx     ##0
    \ 000095 a303                 lda     3,s
    \ 000097 1001                 bpl     `?L732`
    \ 000099 ca                   dex
    \ 00009a          `?L732`:
    \ 00009a 22......             jsl     long:`?L1232`
    \ 00009e 5003                 bvc     `?L734`
    \ 0000a0 490080               eor     ##-32768
    \ 0000a3 300a     `?L734`:    bmi     `?L280`
0763                  				x0=vickyResX-1;
    \ 0000a5 ad....               lda     vickyResX
    \ 0000a8 3a                   dec     a
    \ 0000a9 8301                 sta     1,s
    \ 0000ab a301                 lda     1,s
    \ 0000ad 8303                 sta     3,s
    \ 0000af          `?L280`:
0764                  			if (x1<0)
    \ 0000af a305                 lda     5,s
    \ 0000b1 1007                 bpl     `?L282`
0765                  				x1=0;
    \ 0000b3 a90000               lda     ##0
    \ 0000b6 8301                 sta     1,s
    \ 0000b8 8002                 bra     `?L1168`
    \ 0000ba 1a       `?L282`:    inc     a
    \ 0000bb 3a                   dec     a
    \ 0000bc 8301     `?L1168`:   sta     1,s
0766                  			if (x0<0)
    \ 0000be a303                 lda     3,s
    \ 0000c0 1007                 bpl     `?L286`
0767                  				x0=0;
    \ 0000c2 a90000               lda     ##0
    \ 0000c5 8303                 sta     3,s
    \ 0000c7 8303                 sta     3,s
    \ 0000c9          `?L286`:
0768                  			
0769                  			swap=x1-x0;
    \ 0000c9 a301                 lda     1,s
    \ 0000cb 38                   sec
    \ 0000cc e303                 sbc     3,s
    \ 0000ce a20000               ldx     ##0
    \ 0000d1 a8                   tay
    \ 0000d2 1001                 bpl     `?L736`
    \ 0000d4 ca                   dex
    \ 0000d5          `?L736`:
    \ 0000d5 86..                 stx     dp:.tiny (_Dp+10)
    \ 0000d7 85..                 sta     dp:.tiny (_Dp+8)
0770                  			// ----------------------------------------------------
0771                  			//if line crosses a 64k page use setPixel (safer slower method) 
0772                  			// ----------------------------------------------------
0773                  			if (((swap+x0+y0*vickyResX) & 0xffff) < ((x0+y0*vickyResX) & 0xffff) )
    \ 0000d9 a303                 lda     3,s
    \ 0000db a20000               ldx     ##0
    \ 0000de a8                   tay
    \ 0000df 1001                 bpl     `?L738`
    \ 0000e1 ca                   dex
    \ 0000e2 18       `?L738`:    clc
    \ 0000e3 65..                 adc     dp:.tiny (_Dp+8)
    \ 0000e5 48                   pha
    \ 0000e6 8a                   txa
    \ 0000e7 65..                 adc     dp:.tiny (_Dp+10)
    \ 0000e9 aa                   tax
    \ 0000ea 68                   pla
    \ 0000eb 22......             jsl     long:`?L1268`
    \ 0000ef 1001                 bpl     `?L740`
    \ 0000f1 ca                   dex
    \ 0000f2          `?L740`:
    \ 0000f2 22......             jsl     long:`?L1196`
    \ 0000f6 65..                 adc     dp:.tiny (_Dp+12)
    \ 0000f8 48                   pha
    \ 0000f9 8a                   txa
    \ 0000fa 65..                 adc     dp:.tiny (_Dp+14)
    \ 0000fc aa                   tax
    \ 0000fd 68                   pla
    \ 0000fe 86..                 stx     dp:.tiny (_Dp+2)
    \ 000100 85..                 sta     dp:.tiny _Dp
    \ 000102 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000104 290000               and     ##0
    \ 000107 aa                   tax
    \ 000108 a5..                 lda     dp:.tiny _Dp
    \ 00010a 29ffff               and     ##65535
    \ 00010d 86..                 stx     dp:.tiny (_Dp+2)
    \ 00010f 85..                 sta     dp:.tiny _Dp
    \ 000111 d4..                 pei     dp:.tiny (_Dp+2)
    \ 000113 d4..                 pei     dp:.tiny _Dp
    \ 000115 a307                 lda     7,s
    \ 000117 a20000               ldx     ##0
    \ 00011a a8                   tay
    \ 00011b 1001                 bpl     `?L743`
    \ 00011d ca                   dex
    \ 00011e          `?L743`:
    \ 00011e 86..                 stx     dp:.tiny (_Dp+14)
    \ 000120 85..                 sta     dp:.tiny (_Dp+12)
    \ 000122 a30d                 lda     13,s
    \ 000124 a20000               ldx     ##0
    \ 000127 a8                   tay
    \ 000128 1001                 bpl     `?L745`
    \ 00012a ca                   dex
    \ 00012b          `?L745`:
    \ 00012b 22......             jsl     long:`?L1196`
    \ 00012f 65..                 adc     dp:.tiny (_Dp+12)
    \ 000131 48                   pha
    \ 000132 8a                   txa
    \ 000133 65..                 adc     dp:.tiny (_Dp+14)
    \ 000135 aa                   tax
    \ 000136 68                   pla
    \ 000137 86..                 stx     dp:.tiny (_Dp+6)
    \ 000139 85..                 sta     dp:.tiny (_Dp+4)
    \ 00013b a5..                 lda     dp:.tiny (_Dp+6)
    \ 00013d 290000               and     ##0
    \ 000140 aa                   tax
    \ 000141 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000143 29ffff               and     ##65535
    \ 000146 86..                 stx     dp:.tiny (_Dp+6)
    \ 000148 85..                 sta     dp:.tiny (_Dp+4)
    \ 00014a 22......             jsl     long:_FillDP2
    \ 00014e ..                   .byte   .tiny _Dp
    \ 00014f 22......             jsl     long:_FillDP2
    \ 000153 ..                   .byte   .tiny (_Dp+2)
    \ 000154 a5..                 lda     dp:.tiny _Dp
    \ 000156 c5..                 cmp     dp:.tiny (_Dp+4)
    \ 000158 a5..                 lda     dp:.tiny (_Dp+2)
    \ 00015a e5..                 sbc     dp:.tiny (_Dp+6)
    \ 00015c 5003                 bvc     `?L748`
    \ 00015e 490080               eor     ##-32768
    \ 000161 1070     `?L748`:    bpl     `?L288`
    \ 000163          `?L291`:
0774                  			{
0775                  				do
0776                  				{
0777                  					setPixel_fast(x0+swap--,y0,col);
    \ 000163 22......             jsl     long:`?L1204`
    \ 000167 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000169 aa                   tax
    \ 00016a a5..                 lda     dp:.tiny (_Dp+8)
    \ 00016c d001                 bne     `?L750`
    \ 00016e ca                   dex
    \ 00016f 3a       `?L750`:    dec     a
    \ 000170 86..                 stx     dp:.tiny (_Dp+14)
    \ 000172 85..                 sta     dp:.tiny (_Dp+12)
    \ 000174 a303                 lda     3,s
    \ 000176 a20000               ldx     ##0
    \ 000179 a8                   tay
    \ 00017a 1001                 bpl     `?L752`
    \ 00017c ca                   dex
    \ 00017d 18       `?L752`:    clc
    \ 00017e 65..                 adc     dp:.tiny _Dp
    \ 000180 48                   pha
    \ 000181 8a                   txa
    \ 000182 65..                 adc     dp:.tiny (_Dp+2)
    \ 000184 aa                   tax
    \ 000185 68                   pla
    \ 000186 86..                 stx     dp:.tiny (_Dp+6)
    \ 000188 85..                 sta     dp:.tiny (_Dp+4)
    \ 00018a a309                 lda     9,s
    \ 00018c a20000               ldx     ##0
    \ 00018f a8                   tay
    \ 000190 1001                 bpl     `?L754`
    \ 000192 ca                   dex
    \ 000193          `?L754`:
    \ 000193 86..                 stx     dp:.tiny (_Dp+2)
    \ 000195 85..                 sta     dp:.tiny _Dp
    \ 000197 a6..                 ldx     dp:.tiny (_Dp+6)
    \ 000199 a5..                 lda     dp:.tiny (_Dp+4)
    \ 00019b 18                   clc
    \ 00019c 690000               adc     ##0
    \ 00019f 48                   pha
    \ 0001a0 22......             jsl     long:`?L1259`
    \ 0001a4 68                   pla
    \ 0001a5 22......             jsl     long:`?L1224`
    \ 0001a9 48                   pha
    \ 0001aa 8a                   txa
    \ 0001ab 65..                 adc     dp:.tiny (_Dp+10)
    \ 0001ad aa                   tax
    \ 0001ae 68                   pla
    \ 0001af 22......             jsl     long:`?L1202`
    \ 0001b3 a00100               ldy     ##1
    \ 0001b6 b7..                 lda     [.tiny (_Dp+4)],y
    \ 0001b8 22......             jsl     long:`?L1209`
    \ 0001bc e220                 sep     #32
    \ 0001be a322                 lda     34,s
    \ 0001c0 87..                 sta     [.tiny _Dp]
    \ 0001c2 c220                 rep     #32
0778                  				}while (swap>=0);
    \ 0001c4 a5..                 lda     dp:.tiny (_Dp+12)
    \ 0001c6 85..                 sta     dp:.tiny (_Dp+8)
    \ 0001c8 a5..                 lda     dp:.tiny (_Dp+14)
    \ 0001ca 85..                 sta     dp:.tiny (_Dp+10)
    \ 0001cc a5..                 lda     dp:.tiny (_Dp+14)
    \ 0001ce 1093                 bpl     `?L291`
    \ 0001d0 4c....               jmp     .kbank `?L266`
    \ 0001d3          `?L288`:
0779                  			}
0780                  			else
0781                  				//----------------------------------
0782                  				// Use fast pixel laying method!
0783                  				//-----------------------------------
0784                  			{
0785                  				if (vBitPlane[vickyBitmapPage]) // if Bitmap for the page is enabled
    \ 0001d3 22......             jsl     long:`?L1238`
    \ 0001d7 d003                 bne     `?L1429`
    \ 0001d9 4c....               jmp     .kbank `?L266`
    \ 0001dc          `?L1429`:
0786                  				{
0787                  					ptr = 0xb00000+x0+y0*vickyResX;
    \ 0001dc a303                 lda     3,s
    \ 0001de a20000               ldx     ##0
    \ 0001e1 a8                   tay
    \ 0001e2 1001                 bpl     `?L757`
    \ 0001e4 ca                   dex
    \ 0001e5 18       `?L757`:    clc
    \ 0001e6 690000               adc     ##0
    \ 0001e9 48                   pha
    \ 0001ea 22......             jsl     long:`?L1259`
    \ 0001ee 68                   pla
    \ 0001ef 22......             jsl     long:`?L1268`
    \ 0001f3 1001                 bpl     `?L759`
    \ 0001f5 ca                   dex
    \ 0001f6          `?L759`:
    \ 0001f6 22......             jsl     long:`?L1196`
    \ 0001fa 65..                 adc     dp:.tiny (_Dp+12)
    \ 0001fc 48                   pha
    \ 0001fd 8a                   txa
    \ 0001fe 65..                 adc     dp:.tiny (_Dp+14)
    \ 000200 aa                   tax
    \ 000201 68                   pla
    \ 000202 86..                 stx     dp:.tiny (_Dp+14)
    \ 000204 85..                 sta     dp:.tiny (_Dp+12)
0788                  					ptr+= (long)bitplane[vickyBitmapPage].start;
    \ 000206 22......             jsl     long:`?L1236`
    \ 00020a ad....               lda     vickyBitmapPage
    \ 00020d 22......             jsl     long:`?L1208`
    \ 000211 a00100               ldy     ##1
    \ 000214 b7..                 lda     [.tiny _Dp],y
    \ 000216 85..                 sta     dp:.tiny _Dp
    \ 000218 18                   clc
    \ 000219 a5..                 lda     dp:.tiny (_Dp+12)
    \ 00021b 65..                 adc     dp:.tiny _Dp
    \ 00021d 85..                 sta     dp:.tiny (_Dp+12)
    \ 00021f          `?L297`:
0789                  					do 
0790                  					{
0791                  							*(ptr+swap--) = col;
    \ 00021f a5..                 lda     dp:.tiny (_Dp+8)
    \ 000221 85..                 sta     dp:.tiny (_Dp+4)
    \ 000223 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000225 85..                 sta     dp:.tiny (_Dp+6)
    \ 000227 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000229 aa                   tax
    \ 00022a a5..                 lda     dp:.tiny (_Dp+8)
    \ 00022c d001                 bne     `?L762`
    \ 00022e ca                   dex
    \ 00022f 3a       `?L762`:    dec     a
    \ 000230 86..                 stx     dp:.tiny (_Dp+2)
    \ 000232 85..                 sta     dp:.tiny _Dp
    \ 000234 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000236 85..                 sta     dp:.tiny (_Dp+8)
    \ 000238 a5..                 lda     dp:.tiny (_Dp+14)
    \ 00023a 85..                 sta     dp:.tiny (_Dp+10)
    \ 00023c 18                   clc
    \ 00023d a5..                 lda     dp:.tiny (_Dp+8)
    \ 00023f 65..                 adc     dp:.tiny (_Dp+4)
    \ 000241 85..                 sta     dp:.tiny (_Dp+8)
    \ 000243 e220                 sep     #32
    \ 000245 a322                 lda     34,s
    \ 000247 87..                 sta     [.tiny (_Dp+8)]
    \ 000249 c220                 rep     #32
0792                  					}while (swap>=0);
    \ 00024b a5..                 lda     dp:.tiny _Dp
    \ 00024d 85..                 sta     dp:.tiny (_Dp+8)
    \ 00024f a5..                 lda     dp:.tiny (_Dp+2)
    \ 000251 85..                 sta     dp:.tiny (_Dp+10)
    \ 000253 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000255 10c8                 bpl     `?L297`
    \ 000257 4c....               jmp     .kbank `?L266`
    \ 00025a          `?L267`:
0793                  				}
0794                  			}
0795                  		}
0796                  	}
0797                  	else
0798                  	// -------------------------------------
0799                  	// use regular Bresenham method for slanted lines
0800                  	// -------------------------------------
0801                  	{
0802                  		 int dx =  abs (x1 - x0), sx = x0 < x1 ? 1 : -1;
    \ 00025a a313                 lda     19,s
    \ 00025c 38                   sec
    \ 00025d e307                 sbc     7,s
    \ 00025f 22......             jsl     long:abs
    \ 000263 830b                 sta     11,s
    \ 000265 a307                 lda     7,s
    \ 000267 38                   sec
    \ 000268 e313                 sbc     19,s
    \ 00026a 5003                 bvc     `?L765`
    \ 00026c 490080               eor     ##-32768
    \ 00026f 3007     `?L765`:    bmi     `?L474`
    \ 000271 a9ffff               lda     ##-1
    \ 000274 8301                 sta     1,s
    \ 000276 8005                 bra     `?L1167`
    \ 000278 a90100   `?L474`:    lda     ##1
    \ 00027b 8301                 sta     1,s
    \ 00027d 8301     `?L1167`:   sta     1,s
0803                  		 int dy = -abs (y1 - y0), sy = y0 < y1 ? 1 : -1; 
    \ 00027f a320                 lda     32,s
    \ 000281 38                   sec
    \ 000282 e309                 sbc     9,s
    \ 000284 22......             jsl     long:abs
    \ 000288 85..                 sta     dp:.tiny _Dp
    \ 00028a 38                   sec
    \ 00028b a90000               lda     ##0
    \ 00028e e5..                 sbc     dp:.tiny _Dp
    \ 000290 830d                 sta     13,s
    \ 000292 a309                 lda     9,s
    \ 000294 38                   sec
    \ 000295 e320                 sbc     32,s
    \ 000297 5003                 bvc     `?L768`
    \ 000299 490080               eor     ##-32768
    \ 00029c 3007     `?L768`:    bmi     `?L477`
    \ 00029e a9ffff               lda     ##-1
    \ 0002a1 8303                 sta     3,s
    \ 0002a3 8005                 bra     `?L1166`
    \ 0002a5 a90100   `?L477`:    lda     ##1
    \ 0002a8 8303                 sta     3,s
    \ 0002aa 8303     `?L1166`:   sta     3,s
0804                  		 int err = dx + dy, e2; /* error value e_xy */
    \ 0002ac a30d                 lda     13,s
    \ 0002ae 18                   clc
    \ 0002af 630b                 adc     11,s
    \ 0002b1 8305                 sta     5,s
0805                  		 
0806                  		 for (;;)
    \ 0002b3 a307                 lda     7,s
    \ 0002b5 8311                 sta     17,s
    \ 0002b7 a309                 lda     9,s
    \ 0002b9 830f                 sta     15,s
    \ 0002bb a305                 lda     5,s
    \ 0002bd 8307                 sta     7,s
    \ 0002bf          `?L300`:
0807                  		 {  /* loop */
0808                  			setPixel (x0,y0, col);
    \ 0002bf a322                 lda     34,s
    \ 0002c1 48                   pha
    \ 0002c2 a311                 lda     17,s
    \ 0002c4 a20000               ldx     ##0
    \ 0002c7 a8                   tay
    \ 0002c8 1001                 bpl     `?L770`
    \ 0002ca ca                   dex
    \ 0002cb          `?L770`:
    \ 0002cb 86..                 stx     dp:.tiny (_Dp+2)
    \ 0002cd 85..                 sta     dp:.tiny _Dp
    \ 0002cf a313                 lda     19,s
    \ 0002d1 a20000               ldx     ##0
    \ 0002d4 a8                   tay
    \ 0002d5 1001                 bpl     `?L772`
    \ 0002d7 ca                   dex
    \ 0002d8          `?L772`:
    \ 0002d8 22......             jsl     long:setPixel
0809                  			if (x0 == x1 && y0 == y1) break;
    \ 0002dc 68                   pla
    \ 0002dd a313                 lda     19,s
    \ 0002df c311                 cmp     17,s
    \ 0002e1 d019                 bne     `?L305`
    \ 0002e3 a320                 lda     32,s
    \ 0002e5 c30f                 cmp     15,s
    \ 0002e7 d013                 bne     `?L305`
    \ 0002e9          `?L266`:
0810                  			e2 = 2 * err;
0811                  			if (e2 >= dy) { err += dy; x0 += sx; } /* e_xy+e_x > 0 */
0812                  			if (e2 <= dx) { err += dx; y0 += sy; } /* e_xy+e_y < 0 */
0813                  		 }
0814                  	}
0815                  }
    \ 0002e9 3b                   tsc
    \ 0002ea 18                   clc
    \ 0002eb 691400               adc     ##20
    \ 0002ee 1b                   tcs
    \ 0002ef 7a                   ply
    \ 0002f0 84..                 sty     dp:.tiny (_Dp+14)
    \ 0002f2 7a                   ply
    \ 0002f3 84..                 sty     dp:.tiny (_Dp+12)
    \ 0002f5 7a                   ply
    \ 0002f6 84..                 sty     dp:.tiny (_Dp+10)
    \ 0002f8 7a                   ply
    \ 0002f9 84..                 sty     dp:.tiny (_Dp+8)
    \ 0002fb 6b                   rtl
    \ 0002fc a307     `?L305`:    lda     7,s
    \ 0002fe 0a                   asl     a
    \ 0002ff 8309                 sta     9,s
    \ 000301 38                   sec
    \ 000302 e30d                 sbc     13,s
    \ 000304 5003                 bvc     `?L775`
    \ 000306 490080               eor     ##-32768
    \ 000309 3010     `?L775`:    bmi     `?L308`
    \ 00030b a30d                 lda     13,s
    \ 00030d 18                   clc
    \ 00030e 6307                 adc     7,s
    \ 000310 8307                 sta     7,s
    \ 000312 a301                 lda     1,s
    \ 000314 18                   clc
    \ 000315 6311                 adc     17,s
    \ 000317 8305                 sta     5,s
    \ 000319 8002                 bra     `?L1170`
    \ 00031b a311     `?L308`:    lda     17,s
    \ 00031d 8305     `?L1170`:   sta     5,s
    \ 00031f a30b                 lda     11,s
    \ 000321 38                   sec
    \ 000322 e309                 sbc     9,s
    \ 000324 5003                 bvc     `?L777`
    \ 000326 490080               eor     ##-32768
    \ 000329 3010     `?L777`:    bmi     `?L311`
    \ 00032b a30b                 lda     11,s
    \ 00032d 18                   clc
    \ 00032e 6307                 adc     7,s
    \ 000330 8307                 sta     7,s
    \ 000332 a303                 lda     3,s
    \ 000334 18                   clc
    \ 000335 630f                 adc     15,s
    \ 000337 8309                 sta     9,s
    \ 000339 8002                 bra     `?L1171`
    \ 00033b a30f     `?L311`:    lda     15,s
    \ 00033d 8309     `?L1171`:   sta     9,s
    \ 00033f a305                 lda     5,s
    \ 000341 8311                 sta     17,s
    \ 000343 a309                 lda     9,s
    \ 000345 830f                 sta     15,s
    \ 000347 4c....               jmp     .kbank `?L300`
0816                  
0817                  
0818                  void plot_circle (int xm, int ym, int r, uint8_t col)
0819                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public plot_circle
    \ 000000          plot_circle:
    \ 000000 a8                   tay
    \ 000001 3b                   tsc
    \ 000002 38                   sec
    \ 000003 e90e00               sbc     ##14
    \ 000006 1b                   tcs
    \ 000007 98                   tya
    \ 000008 8307                 sta     7,s
    \ 00000a a5..                 lda     dp:.tiny _Dp
    \ 00000c 8309                 sta     9,s
    \ 00000e a5..                 lda     dp:.tiny (_Dp+2)
    \ 000010 8301                 sta     1,s
0820                     int x = -r, y = 0, err = 2-2*r; /* II. Quadrant */ 
    \ 000012 a301                 lda     1,s
    \ 000014 85..                 sta     dp:.tiny _Dp
    \ 000016 38                   sec
    \ 000017 a90000               lda     ##0
    \ 00001a e5..                 sbc     dp:.tiny _Dp
    \ 00001c aa                   tax
    \ 00001d a00000               ldy     ##0
    \ 000020 a301                 lda     1,s
    \ 000022 0a                   asl     a
    \ 000023 85..                 sta     dp:.tiny _Dp
    \ 000025 a90200               lda     ##2
    \ 000028 38                   sec
    \ 000029 e5..                 sbc     dp:.tiny _Dp
    \ 00002b 8301                 sta     1,s
0821                     {
0822                  	   do {
    \ 00002d 8a                   txa
    \ 00002e 830d                 sta     13,s
    \ 000030 98                   tya
    \ 000031 830b                 sta     11,s
    \ 000033          `?L317`:
0823                  			setPixel (xm-x, ym+y, col); /*   I. Quadrant */
    \ 000033 a312                 lda     18,s
    \ 000035 48                   pha
    \ 000036 a30d                 lda     13,s
    \ 000038 18                   clc
    \ 000039 630b                 adc     11,s
    \ 00003b a20000               ldx     ##0
    \ 00003e a8                   tay
    \ 00003f 1001                 bpl     `?L779`
    \ 000041 ca                   dex
    \ 000042          `?L779`:
    \ 000042 86..                 stx     dp:.tiny (_Dp+2)
    \ 000044 85..                 sta     dp:.tiny _Dp
    \ 000046 a309                 lda     9,s
    \ 000048 38                   sec
    \ 000049 e30f                 sbc     15,s
    \ 00004b a20000               ldx     ##0
    \ 00004e a8                   tay
    \ 00004f 1001                 bpl     `?L781`
    \ 000051 ca                   dex
    \ 000052          `?L781`:
    \ 000052 22......             jsl     long:setPixel
0824                  			setPixel (xm-y, ym-x, col); /*  II. Quadrant */
    \ 000056 68                   pla
    \ 000057 a312                 lda     18,s
    \ 000059 48                   pha
    \ 00005a a30b                 lda     11,s
    \ 00005c 38                   sec
    \ 00005d e30f                 sbc     15,s
    \ 00005f a20000               ldx     ##0
    \ 000062 a8                   tay
    \ 000063 1001                 bpl     `?L784`
    \ 000065 ca                   dex
    \ 000066          `?L784`:
    \ 000066 86..                 stx     dp:.tiny (_Dp+2)
    \ 000068 85..                 sta     dp:.tiny _Dp
    \ 00006a a309                 lda     9,s
    \ 00006c 38                   sec
    \ 00006d e30d                 sbc     13,s
    \ 00006f a20000               ldx     ##0
    \ 000072 a8                   tay
    \ 000073 1001                 bpl     `?L786`
    \ 000075 ca                   dex
    \ 000076          `?L786`:
    \ 000076 22......             jsl     long:setPixel
0825                  			setPixel (xm+x, ym-y, col); /* III. Quadrant */
    \ 00007a 68                   pla
    \ 00007b a312                 lda     18,s
    \ 00007d 48                   pha
    \ 00007e a30b                 lda     11,s
    \ 000080 38                   sec
    \ 000081 e30d                 sbc     13,s
    \ 000083 a20000               ldx     ##0
    \ 000086 a8                   tay
    \ 000087 1001                 bpl     `?L789`
    \ 000089 ca                   dex
    \ 00008a          `?L789`:
    \ 00008a 86..                 stx     dp:.tiny (_Dp+2)
    \ 00008c 85..                 sta     dp:.tiny _Dp
    \ 00008e a30f                 lda     15,s
    \ 000090 18                   clc
    \ 000091 6309                 adc     9,s
    \ 000093 a20000               ldx     ##0
    \ 000096 a8                   tay
    \ 000097 1001                 bpl     `?L791`
    \ 000099 ca                   dex
    \ 00009a          `?L791`:
    \ 00009a 22......             jsl     long:setPixel
0826                  			setPixel (xm+y, ym+x, col); /*  IV. Quadrant */
    \ 00009e 68                   pla
    \ 00009f a312                 lda     18,s
    \ 0000a1 48                   pha
    \ 0000a2 a30f                 lda     15,s
    \ 0000a4 18                   clc
    \ 0000a5 630b                 adc     11,s
    \ 0000a7 a20000               ldx     ##0
    \ 0000aa a8                   tay
    \ 0000ab 1001                 bpl     `?L794`
    \ 0000ad ca                   dex
    \ 0000ae          `?L794`:
    \ 0000ae 86..                 stx     dp:.tiny (_Dp+2)
    \ 0000b0 85..                 sta     dp:.tiny _Dp
    \ 0000b2 a30d                 lda     13,s
    \ 0000b4 18                   clc
    \ 0000b5 6309                 adc     9,s
    \ 0000b7 a20000               ldx     ##0
    \ 0000ba a8                   tay
    \ 0000bb 1001                 bpl     `?L796`
    \ 0000bd ca                   dex
    \ 0000be          `?L796`:
    \ 0000be 22......             jsl     long:setPixel
0827                  		  r = err;
    \ 0000c2 68                   pla
    \ 0000c3 a301                 lda     1,s
    \ 0000c5 8303                 sta     3,s
0828                  		  if (r >  x) err += ++x*2+1; /* e_xy+e_x > 0 */
    \ 0000c7 a30d                 lda     13,s
    \ 0000c9 38                   sec
    \ 0000ca e303                 sbc     3,s
    \ 0000cc 5003                 bvc     `?L799`
    \ 0000ce 490080               eor     ##-32768
    \ 0000d1 1010     `?L799`:    bpl     `?L320`
    \ 0000d3 a30d                 lda     13,s
    \ 0000d5 1a                   inc     a
    \ 0000d6 8305                 sta     5,s
    \ 0000d8 a305                 lda     5,s
    \ 0000da 0a                   asl     a
    \ 0000db 1a                   inc     a
    \ 0000dc 18                   clc
    \ 0000dd 6301                 adc     1,s
    \ 0000df 8301                 sta     1,s
    \ 0000e1 8004                 bra     `?L321`
    \ 0000e3 a30d     `?L320`:    lda     13,s
    \ 0000e5 8305                 sta     5,s
    \ 0000e7          `?L321`:
0829                  		  if (r <= y) err += ++y*2+1; /* e_xy+e_y < 0 */
    \ 0000e7 a30b                 lda     11,s
    \ 0000e9 38                   sec
    \ 0000ea e303                 sbc     3,s
    \ 0000ec 5003                 bvc     `?L801`
    \ 0000ee 490080               eor     ##-32768
    \ 0000f1 3012     `?L801`:    bmi     `?L323`
    \ 0000f3 a30b                 lda     11,s
    \ 0000f5 1a                   inc     a
    \ 0000f6 8303                 sta     3,s
    \ 0000f8 a303                 lda     3,s
    \ 0000fa 0a                   asl     a
    \ 0000fb 1a                   inc     a
    \ 0000fc 18                   clc
    \ 0000fd 6301                 adc     1,s
    \ 0000ff aa                   tax
    \ 000100 8a                   txa
    \ 000101 8301                 sta     1,s
    \ 000103 8004                 bra     `?L319`
    \ 000105 a30b     `?L323`:    lda     11,s
    \ 000107 8303                 sta     3,s
    \ 000109          `?L319`:
0830                  	   } while (x < 0);
    \ 000109 a305                 lda     5,s
    \ 00010b 830d                 sta     13,s
    \ 00010d a303                 lda     3,s
    \ 00010f 830b                 sta     11,s
    \ 000111 a305                 lda     5,s
    \ 000113 1003                 bpl     `?L1430`
    \ 000115 4c....               jmp     .kbank `?L317`
    \ 000118          `?L1430`:
0831                     }
0832                  }
    \ 000118 3b                   tsc
    \ 000119 18                   clc
    \ 00011a 690e00               adc     ##14
    \ 00011d 1b                   tcs
    \ 00011e 6b                   rtl
0833                  
0834                  
0835                  // -------------------------------------------------------------------
0836                  // Midpoint Ellipse Algorithm C++ Code
0837                  // X,y of center point
0838                  // a, b Horizontal, vertical axis length
0839                  // https://educativesite.com/midpoint-ellipse-algorithm-c-code/
0840                  // -------------------------------------------------------------------
0841                  void plot_ellipse(int xc, int yc, double a, double b, uint8_t col)
0842                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public plot_ellipse
    \ 000000          plot_ellipse:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 a8                   tay
    \ 000009 3b                   tsc
    \ 00000a 38                   sec
    \ 00000b e90e00               sbc     ##14
    \ 00000e 1b                   tcs
    \ 00000f 98                   tya
    \ 000010 830b                 sta     11,s
    \ 000012 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000014 85..                 sta     dp:.tiny (_Dp+12)
    \ 000016 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000018 85..                 sta     dp:.tiny (_Dp+14)
    \ 00001a a5..                 lda     dp:.tiny _Dp
    \ 00001c 830d                 sta     13,s
    \ 00001e a31c                 lda     28,s
    \ 000020 85..                 sta     dp:.tiny (_Dp+10)
    \ 000022 a31a                 lda     26,s
    \ 000024 85..                 sta     dp:.tiny (_Dp+8)
0843                      double p=b*b-a*a*b+a*a/4;
    \ 000026 22......             jsl     long:`?L1204`
    \ 00002a a6..                 ldx     dp:.tiny (_Dp+10)
    \ 00002c a5..                 lda     dp:.tiny (_Dp+8)
    \ 00002e 22......             jsl     long:_Float32Mul
    \ 000032 da                   phx
    \ 000033 48                   pha
    \ 000034 22......             jsl     long:`?L1226`
    \ 000038 22......             jsl     long:`?L1191`
    \ 00003c 68                   pla
    \ 00003d fa                   plx
    \ 00003e 22......             jsl     long:_Float32Sub
    \ 000042 da                   phx
    \ 000043 48                   pha
    \ 000044 22......             jsl     long:`?L1210`
    \ 000048 a5..                 lda     dp:.tiny (_Dp+12)
    \ 00004a 22......             jsl     long:`?L1234`
    \ 00004e 22......             jsl     long:_FillDP4
    \ 000052 ..                   .byte   .tiny _Dp
    \ 000053 22......             jsl     long:`?L1263`
0844                      int x=0, y=b;
    \ 000057 a90000               lda     ##0
    \ 00005a 8301                 sta     1,s
    \ 00005c a6..                 ldx     dp:.tiny (_Dp+10)
    \ 00005e a5..                 lda     dp:.tiny (_Dp+8)
    \ 000060 22......             jsl     long:_Float32ToSInt32
    \ 000064 8303                 sta     3,s
0845                  	
0846                      while(2.0*b*b*x <= 2.0*a*a*y)
    \ 000066 a5..                 lda     dp:.tiny _Dp
    \ 000068 8305                 sta     5,s
    \ 00006a a5..                 lda     dp:.tiny (_Dp+2)
    \ 00006c 8307                 sta     7,s
    \ 00006e a301                 lda     1,s
    \ 000070 8309                 sta     9,s
    \ 000072 a90000   `?L329`:    lda     ##0
    \ 000075 22......             jsl     long:`?L1198`
    \ 000079 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 00007b 84..                 sty     dp:.tiny _Dp
    \ 00007d a4..                 ldy     dp:.tiny (_Dp+14)
    \ 00007f 22......             jsl     long:`?L1193`
    \ 000083 a303                 lda     3,s
    \ 000085 a20000               ldx     ##0
    \ 000088 a8                   tay
    \ 000089 1001                 bpl     `?L813`
    \ 00008b ca                   dex
    \ 00008c          `?L813`:
    \ 00008c 22......             jsl     long:_SInt32ToFloat32
    \ 000090 22......             jsl     long:_Float32Mul
    \ 000094 da                   phx
    \ 000095 48                   pha
    \ 000096 a90000               lda     ##0
    \ 000099 a20040               ldx     ##16384
    \ 00009c 22......             jsl     long:`?L1190`
    \ 0000a0 a30d                 lda     13,s
    \ 0000a2 a20000               ldx     ##0
    \ 0000a5 a8                   tay
    \ 0000a6 1001                 bpl     `?L819`
    \ 0000a8 ca                   dex
    \ 0000a9          `?L819`:
    \ 0000a9 22......             jsl     long:_SInt32ToFloat32
    \ 0000ad 22......             jsl     long:`?L1194`
    \ 0000b1 68                   pla
    \ 0000b2 fa                   plx
    \ 0000b3 22......             jsl     long:_Float32LT
    \ 0000b7 b003                 bcs     `?L1431`
    \ 0000b9 4c....               jmp     .kbank `?L330`
    \ 0000bc          `?L1431`:
0847                      {
0848                          if(p < 0)
    \ 0000bc a307                 lda     7,s
    \ 0000be aa                   tax
    \ 0000bf a305                 lda     5,s
    \ 0000c1 22......             jsl     long:`?L1248`
    \ 0000c5 b05d                 bcs     `?L332`
0849                          {
0850                              x++;
    \ 0000c7 a309                 lda     9,s
    \ 0000c9 1a                   inc     a
    \ 0000ca 8301                 sta     1,s
0851                              p = p+2*b*b*x+b*b;
    \ 0000cc a307                 lda     7,s
    \ 0000ce 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000d0 a305                 lda     5,s
    \ 0000d2 85..                 sta     dp:.tiny _Dp
    \ 0000d4 d4..                 pei     dp:.tiny (_Dp+2)
    \ 0000d6 d4..                 pei     dp:.tiny _Dp
    \ 0000d8 98                   tya
    \ 0000d9 a20040               ldx     ##16384
    \ 0000dc 22......             jsl     long:`?L1190`
    \ 0000e0 a305                 lda     5,s
    \ 0000e2 a20000               ldx     ##0
    \ 0000e5 a8                   tay
    \ 0000e6 1001                 bpl     `?L827`
    \ 0000e8 ca                   dex
    \ 0000e9          `?L827`:
    \ 0000e9 22......             jsl     long:_SInt32ToFloat32
    \ 0000ed 22......             jsl     long:_Float32Mul
    \ 0000f1 22......             jsl     long:_FillDP2
    \ 0000f5 ..                   .byte   .tiny _Dp
    \ 0000f6 22......             jsl     long:_FillDP2
    \ 0000fa ..                   .byte   .tiny (_Dp+2)
    \ 0000fb 22......             jsl     long:_Float32Add
    \ 0000ff da                   phx
    \ 000100 48                   pha
    \ 000101 22......             jsl     long:`?L1204`
    \ 000105 a6..                 ldx     dp:.tiny (_Dp+10)
    \ 000107 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000109 22......             jsl     long:_Float32Mul
    \ 00010d 22......             jsl     long:_FillDP4
    \ 000111 ..                   .byte   .tiny _Dp
    \ 000112 22......             jsl     long:_Float32Add
    \ 000116 8305                 sta     5,s
    \ 000118 8a                   txa
    \ 000119 8307                 sta     7,s
    \ 00011b a301                 lda     1,s
    \ 00011d 8309                 sta     9,s
    \ 00011f a303                 lda     3,s
    \ 000121 4c....               jmp     .kbank `?L1172`
    \ 000124          `?L332`:
0852                          }
0853                          else
0854                          {
0855                              x++;
    \ 000124 a309                 lda     9,s
    \ 000126 1a                   inc     a
    \ 000127 8301                 sta     1,s
0856                              y--;
    \ 000129 3b                   tsc
0857                              p = p+2*b*b*x-2*a*a*y-b*b;
    \ 00012a 22......             jsl     long:`?L1250`
    \ 00012e a307                 lda     7,s
    \ 000130 85..                 sta     dp:.tiny (_Dp+2)
    \ 000132 a305                 lda     5,s
    \ 000134 85..                 sta     dp:.tiny _Dp
    \ 000136 d4..                 pei     dp:.tiny (_Dp+2)
    \ 000138 d4..                 pei     dp:.tiny _Dp
    \ 00013a 98                   tya
    \ 00013b a20040               ldx     ##16384
    \ 00013e 22......             jsl     long:`?L1190`
    \ 000142 a305                 lda     5,s
    \ 000144 a20000               ldx     ##0
    \ 000147 a8                   tay
    \ 000148 1001                 bpl     `?L836`
    \ 00014a ca                   dex
    \ 00014b          `?L836`:
    \ 00014b 22......             jsl     long:_SInt32ToFloat32
    \ 00014f 22......             jsl     long:_Float32Mul
    \ 000153 22......             jsl     long:_FillDP2
    \ 000157 ..                   .byte   .tiny _Dp
    \ 000158 22......             jsl     long:_FillDP2
    \ 00015c ..                   .byte   .tiny (_Dp+2)
    \ 00015d 22......             jsl     long:_Float32Add
    \ 000161 da                   phx
    \ 000162 48                   pha
    \ 000163 a90000               lda     ##0
    \ 000166 22......             jsl     long:`?L1198`
    \ 00016a a4..                 ldy     dp:.tiny (_Dp+12)
    \ 00016c 84..                 sty     dp:.tiny _Dp
    \ 00016e a4..                 ldy     dp:.tiny (_Dp+14)
    \ 000170 22......             jsl     long:`?L1193`
    \ 000174 a307                 lda     7,s
    \ 000176 a20000               ldx     ##0
    \ 000179 a8                   tay
    \ 00017a 1001                 bpl     `?L843`
    \ 00017c ca                   dex
    \ 00017d          `?L843`:
    \ 00017d 22......             jsl     long:_SInt32ToFloat32
    \ 000181 22......             jsl     long:`?L1194`
    \ 000185 68                   pla
    \ 000186 fa                   plx
    \ 000187 22......             jsl     long:_Float32Sub
    \ 00018b da                   phx
    \ 00018c 48                   pha
    \ 00018d 22......             jsl     long:`?L1228`
    \ 000191 22......             jsl     long:`?L1194`
    \ 000195 68                   pla
    \ 000196 fa                   plx
    \ 000197 22......             jsl     long:`?L1230`
    \ 00019b 8305                 sta     5,s
    \ 00019d a5..                 lda     dp:.tiny (_Dp+2)
    \ 00019f 8307                 sta     7,s
    \ 0001a1 a301                 lda     1,s
    \ 0001a3 8309                 sta     9,s
    \ 0001a5 a303                 lda     3,s
    \ 0001a7 8301     `?L1172`:   sta     1,s
0858                          }
0859                          setPixel(xc+x,yc+y,col);
    \ 0001a9 a31e                 lda     30,s
    \ 0001ab 48                   pha
    \ 0001ac a303                 lda     3,s
    \ 0001ae 22......             jsl     long:`?L1242`
    \ 0001b2 1001                 bpl     `?L850`
    \ 0001b4 ca                   dex
    \ 0001b5          `?L850`:
    \ 0001b5 86..                 stx     dp:.tiny (_Dp+2)
    \ 0001b7 85..                 sta     dp:.tiny _Dp
    \ 0001b9 a30b                 lda     11,s
    \ 0001bb 22......             jsl     long:`?L1241`
    \ 0001bf 1001                 bpl     `?L852`
    \ 0001c1 ca                   dex
    \ 0001c2          `?L852`:
    \ 0001c2 22......             jsl     long:setPixel
0860                          setPixel(xc+x,yc-y,col);
    \ 0001c6 68                   pla
    \ 0001c7 a31e                 lda     30,s
    \ 0001c9 48                   pha
    \ 0001ca a30f                 lda     15,s
    \ 0001cc 38                   sec
    \ 0001cd e303                 sbc     3,s
    \ 0001cf a20000               ldx     ##0
    \ 0001d2 a8                   tay
    \ 0001d3 1001                 bpl     `?L855`
    \ 0001d5 ca                   dex
    \ 0001d6          `?L855`:
    \ 0001d6 86..                 stx     dp:.tiny (_Dp+2)
    \ 0001d8 85..                 sta     dp:.tiny _Dp
    \ 0001da a30b                 lda     11,s
    \ 0001dc 22......             jsl     long:`?L1241`
    \ 0001e0 1001                 bpl     `?L857`
    \ 0001e2 ca                   dex
    \ 0001e3          `?L857`:
    \ 0001e3 22......             jsl     long:setPixel
0861                          setPixel(xc-x,yc+y,col);
    \ 0001e7 68                   pla
    \ 0001e8 a31e                 lda     30,s
    \ 0001ea 48                   pha
    \ 0001eb a303                 lda     3,s
    \ 0001ed 22......             jsl     long:`?L1242`
    \ 0001f1 1001                 bpl     `?L860`
    \ 0001f3 ca                   dex
    \ 0001f4          `?L860`:
    \ 0001f4 22......             jsl     long:`?L1247`
    \ 0001f8 1001                 bpl     `?L862`
    \ 0001fa ca                   dex
    \ 0001fb          `?L862`:
    \ 0001fb 22......             jsl     long:setPixel
0862                          setPixel(xc-x,yc-y,col);
    \ 0001ff 68                   pla
    \ 000200 a31e                 lda     30,s
    \ 000202 48                   pha
    \ 000203 a30f                 lda     15,s
    \ 000205 38                   sec
    \ 000206 e303                 sbc     3,s
    \ 000208 a20000               ldx     ##0
    \ 00020b a8                   tay
    \ 00020c 1001                 bpl     `?L865`
    \ 00020e ca                   dex
    \ 00020f          `?L865`:
    \ 00020f 22......             jsl     long:`?L1247`
    \ 000213 1001                 bpl     `?L867`
    \ 000215 ca                   dex
    \ 000216          `?L867`:
    \ 000216 22......             jsl     long:setPixel
    \ 00021a 68                   pla
    \ 00021b a301                 lda     1,s
    \ 00021d 8303                 sta     3,s
    \ 00021f 4c....               jmp     .kbank `?L329`
    \ 000222          `?L330`:
0863                      }
0864                   
0865                      p=b*b*(x+0.5)*(x+0.5)+a*a*(y-1)*(y-1)-a*a*b*b;
    \ 000222 22......             jsl     long:`?L1204`
    \ 000226 a6..                 ldx     dp:.tiny (_Dp+10)
    \ 000228 a5..                 lda     dp:.tiny (_Dp+8)
    \ 00022a 22......             jsl     long:_Float32Mul
    \ 00022e da                   phx
    \ 00022f 48                   pha
    \ 000230 a30d                 lda     13,s
    \ 000232 a20000               ldx     ##0
    \ 000235 a8                   tay
    \ 000236 1001                 bpl     `?L871`
    \ 000238 ca                   dex
    \ 000239          `?L871`:
    \ 000239 22......             jsl     long:`?L1205`
    \ 00023d 22......             jsl     long:_FillDP4
    \ 000241 ..                   .byte   .tiny _Dp
    \ 000242 22......             jsl     long:_Float32Mul
    \ 000246 da                   phx
    \ 000247 48                   pha
    \ 000248 a30d                 lda     13,s
    \ 00024a a20000               ldx     ##0
    \ 00024d a8                   tay
    \ 00024e 1001                 bpl     `?L876`
    \ 000250 ca                   dex
    \ 000251          `?L876`:
    \ 000251 22......             jsl     long:`?L1205`
    \ 000255 22......             jsl     long:_FillDP4
    \ 000259 ..                   .byte   .tiny _Dp
    \ 00025a 22......             jsl     long:_Float32Mul
    \ 00025e da                   phx
    \ 00025f 48                   pha
    \ 000260 22......             jsl     long:`?L1210`
    \ 000264 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000266 22......             jsl     long:`?L1194`
    \ 00026a a307                 lda     7,s
    \ 00026c 3a                   dec     a
    \ 00026d a20000               ldx     ##0
    \ 000270 a8                   tay
    \ 000271 1001                 bpl     `?L882`
    \ 000273 ca                   dex
    \ 000274          `?L882`:
    \ 000274 22......             jsl     long:_SInt32ToFloat32
    \ 000278 22......             jsl     long:`?L1194`
    \ 00027c a307                 lda     7,s
    \ 00027e 3a                   dec     a
    \ 00027f a20000               ldx     ##0
    \ 000282 a8                   tay
    \ 000283 1001                 bpl     `?L886`
    \ 000285 ca                   dex
    \ 000286          `?L886`:
    \ 000286 22......             jsl     long:_SInt32ToFloat32
    \ 00028a 22......             jsl     long:_Float32Mul
    \ 00028e 22......             jsl     long:_FillDP4
    \ 000292 ..                   .byte   .tiny _Dp
    \ 000293 22......             jsl     long:_Float32Add
    \ 000297 da                   phx
    \ 000298 48                   pha
    \ 000299 22......             jsl     long:`?L1226`
    \ 00029d 22......             jsl     long:_Float32Mul
    \ 0002a1 22......             jsl     long:`?L1190`
    \ 0002a5 68                   pla
    \ 0002a6 fa                   plx
    \ 0002a7 22......             jsl     long:`?L1230`
0866                      while(y > 0)
    \ 0002ab 8305                 sta     5,s
    \ 0002ad a5..                 lda     dp:.tiny (_Dp+2)
    \ 0002af 8307                 sta     7,s
    \ 0002b1 a309                 lda     9,s
    \ 0002b3 8301                 sta     1,s
    \ 0002b5 a90000   `?L335`:    lda     ##0
    \ 0002b8 38                   sec
    \ 0002b9 e303                 sbc     3,s
    \ 0002bb 5003                 bvc     `?L895`
    \ 0002bd 490080               eor     ##-32768
    \ 0002c0 3003     `?L895`:    bmi     `?L1432`
    \ 0002c2 4c....               jmp     .kbank `?L336`
    \ 0002c5          `?L1432`:
0867                      {
0868                          if(p <= 0)
    \ 0002c5 a307                 lda     7,s
    \ 0002c7 85..                 sta     dp:.tiny (_Dp+2)
    \ 0002c9 a305                 lda     5,s
    \ 0002cb 22......             jsl     long:`?L1270`
    \ 0002cf 9067                 bcc     `?L338`
0869                          {
0870                              x++;
    \ 0002d1 a301                 lda     1,s
    \ 0002d3 1a                   inc     a
    \ 0002d4 8301                 sta     1,s
0871                              y--;
    \ 0002d6 3b                   tsc
0872                              p = p+2*b*b*x-2*a*a*y+a*a;
    \ 0002d7 22......             jsl     long:`?L1250`
    \ 0002db a307                 lda     7,s
    \ 0002dd 85..                 sta     dp:.tiny (_Dp+2)
    \ 0002df a305                 lda     5,s
    \ 0002e1 85..                 sta     dp:.tiny _Dp
    \ 0002e3 d4..                 pei     dp:.tiny (_Dp+2)
    \ 0002e5 d4..                 pei     dp:.tiny _Dp
    \ 0002e7 a90000               lda     ##0
    \ 0002ea a20040               ldx     ##16384
    \ 0002ed 22......             jsl     long:`?L1190`
    \ 0002f1 a305                 lda     5,s
    \ 0002f3 a20000               ldx     ##0
    \ 0002f6 a8                   tay
    \ 0002f7 1001                 bpl     `?L900`
    \ 0002f9 ca                   dex
    \ 0002fa          `?L900`:
    \ 0002fa 22......             jsl     long:_SInt32ToFloat32
    \ 0002fe 22......             jsl     long:_Float32Mul
    \ 000302 22......             jsl     long:_FillDP2
    \ 000306 ..                   .byte   .tiny _Dp
    \ 000307 22......             jsl     long:_FillDP2
    \ 00030b ..                   .byte   .tiny (_Dp+2)
    \ 00030c 22......             jsl     long:_Float32Add
    \ 000310 da                   phx
    \ 000311 48                   pha
    \ 000312 a90000               lda     ##0
    \ 000315 22......             jsl     long:`?L1198`
    \ 000319 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 00031b 84..                 sty     dp:.tiny _Dp
    \ 00031d a4..                 ldy     dp:.tiny (_Dp+14)
    \ 00031f 22......             jsl     long:`?L1193`
    \ 000323 a307                 lda     7,s
    \ 000325 a20000               ldx     ##0
    \ 000328 a8                   tay
    \ 000329 1001                 bpl     `?L907`
    \ 00032b ca                   dex
    \ 00032c          `?L907`:
    \ 00032c 22......             jsl     long:_SInt32ToFloat32
    \ 000330 22......             jsl     long:`?L1194`
    \ 000334 68                   pla
    \ 000335 fa                   plx
    \ 000336 802c                 bra     `?L1176`
    \ 000338          `?L338`:
0873                          }
0874                          else
0875                          {
0876                              y--;
    \ 000338 3b                   tsc
0877                              p = p-2*a*a*y+a*a;
    \ 000339 22......             jsl     long:`?L1250`
    \ 00033d a90000               lda     ##0
    \ 000340 22......             jsl     long:`?L1198`
    \ 000344 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 000346 84..                 sty     dp:.tiny _Dp
    \ 000348 a4..                 ldy     dp:.tiny (_Dp+14)
    \ 00034a 22......             jsl     long:`?L1193`
    \ 00034e a303                 lda     3,s
    \ 000350 a20000               ldx     ##0
    \ 000353 a8                   tay
    \ 000354 1001                 bpl     `?L916`
    \ 000356 ca                   dex
    \ 000357          `?L916`:
    \ 000357 22......             jsl     long:_SInt32ToFloat32
    \ 00035b 22......             jsl     long:`?L1194`
    \ 00035f a307                 lda     7,s
    \ 000361 aa                   tax
    \ 000362 a305                 lda     5,s
    \ 000364          `?L1176`:
    \ 000364 22......             jsl     long:_Float32Sub
    \ 000368 da                   phx
    \ 000369 48                   pha
    \ 00036a 22......             jsl     long:`?L1210`
    \ 00036e a5..                 lda     dp:.tiny (_Dp+12)
    \ 000370 22......             jsl     long:_Float32Mul
    \ 000374 22......             jsl     long:_FillDP4
    \ 000378 ..                   .byte   .tiny _Dp
    \ 000379 22......             jsl     long:_Float32Add
    \ 00037d 8305                 sta     5,s
    \ 00037f 8a                   txa
    \ 000380 8307                 sta     7,s
0878                          }
0879                          setPixel(xc+x,yc+y,col);
    \ 000382 a31e                 lda     30,s
    \ 000384 48                   pha
    \ 000385 a305                 lda     5,s
    \ 000387 22......             jsl     long:`?L1242`
    \ 00038b 1001                 bpl     `?L923`
    \ 00038d ca                   dex
    \ 00038e          `?L923`:
    \ 00038e 86..                 stx     dp:.tiny (_Dp+2)
    \ 000390 85..                 sta     dp:.tiny _Dp
    \ 000392 a303                 lda     3,s
    \ 000394 22......             jsl     long:`?L1241`
    \ 000398 1001                 bpl     `?L925`
    \ 00039a ca                   dex
    \ 00039b          `?L925`:
    \ 00039b 22......             jsl     long:setPixel
0880                          setPixel(xc+x,yc-y,col);
    \ 00039f 68                   pla
    \ 0003a0 a31e                 lda     30,s
    \ 0003a2 48                   pha
    \ 0003a3 a30f                 lda     15,s
    \ 0003a5 38                   sec
    \ 0003a6 e305                 sbc     5,s
    \ 0003a8 a20000               ldx     ##0
    \ 0003ab a8                   tay
    \ 0003ac 1001                 bpl     `?L928`
    \ 0003ae ca                   dex
    \ 0003af          `?L928`:
    \ 0003af 86..                 stx     dp:.tiny (_Dp+2)
    \ 0003b1 85..                 sta     dp:.tiny _Dp
    \ 0003b3 a303                 lda     3,s
    \ 0003b5 22......             jsl     long:`?L1241`
    \ 0003b9 1001                 bpl     `?L930`
    \ 0003bb ca                   dex
    \ 0003bc          `?L930`:
    \ 0003bc 22......             jsl     long:setPixel
0881                          setPixel(xc-x,yc+y,col);
    \ 0003c0 68                   pla
    \ 0003c1 a31e                 lda     30,s
    \ 0003c3 48                   pha
    \ 0003c4 a305                 lda     5,s
    \ 0003c6 22......             jsl     long:`?L1242`
    \ 0003ca 1001                 bpl     `?L933`
    \ 0003cc ca                   dex
    \ 0003cd          `?L933`:
    \ 0003cd 22......             jsl     long:`?L1246`
    \ 0003d1 1001                 bpl     `?L935`
    \ 0003d3 ca                   dex
    \ 0003d4          `?L935`:
    \ 0003d4 22......             jsl     long:setPixel
0882                          setPixel(xc-x,yc-y,col);
    \ 0003d8 68                   pla
    \ 0003d9 a31e                 lda     30,s
    \ 0003db 48                   pha
    \ 0003dc a30f                 lda     15,s
    \ 0003de 38                   sec
    \ 0003df e305                 sbc     5,s
    \ 0003e1 a20000               ldx     ##0
    \ 0003e4 a8                   tay
    \ 0003e5 1001                 bpl     `?L938`
    \ 0003e7 ca                   dex
    \ 0003e8          `?L938`:
    \ 0003e8 22......             jsl     long:`?L1246`
    \ 0003ec 1001                 bpl     `?L940`
    \ 0003ee ca                   dex
    \ 0003ef          `?L940`:
    \ 0003ef 22......             jsl     long:setPixel
    \ 0003f3 68                   pla
    \ 0003f4 4c....               jmp     .kbank `?L335`
    \ 0003f7          `?L336`:
0883                      }
0884                  	// draw final pixels to close the ellipse - Modification Ernesto Contreras 
0885                  	setPixel(xc,(int)(yc+b),col);
    \ 0003f7 a31e                 lda     30,s
    \ 0003f9 48                   pha
    \ 0003fa a30f                 lda     15,s
    \ 0003fc a20000               ldx     ##0
    \ 0003ff a8                   tay
    \ 000400 1001                 bpl     `?L943`
    \ 000402 ca                   dex
    \ 000403          `?L943`:
    \ 000403 22......             jsl     long:`?L1257`
    \ 000407 22......             jsl     long:_Float32Add
    \ 00040b 22......             jsl     long:`?L1243`
    \ 00040f 1001                 bpl     `?L948`
    \ 000411 ca                   dex
    \ 000412          `?L948`:
    \ 000412 22......             jsl     long:`?L1269`
    \ 000416 1001                 bpl     `?L950`
    \ 000418 ca                   dex
    \ 000419          `?L950`:
    \ 000419 22......             jsl     long:setPixel
0886                  	setPixel(xc,(int)(yc-b),col);
    \ 00041d 68                   pla
    \ 00041e a31e                 lda     30,s
    \ 000420 48                   pha
    \ 000421 a30f                 lda     15,s
    \ 000423 a20000               ldx     ##0
    \ 000426 a8                   tay
    \ 000427 1001                 bpl     `?L953`
    \ 000429 ca                   dex
    \ 00042a          `?L953`:
    \ 00042a 22......             jsl     long:`?L1257`
    \ 00042e 22......             jsl     long:_Float32Sub
    \ 000432 22......             jsl     long:`?L1243`
    \ 000436 1001                 bpl     `?L958`
    \ 000438 ca                   dex
    \ 000439          `?L958`:
    \ 000439 22......             jsl     long:`?L1269`
    \ 00043d 1001                 bpl     `?L960`
    \ 00043f ca                   dex
    \ 000440          `?L960`:
    \ 000440 22......             jsl     long:setPixel
    \ 000444 68                   pla
0887                  }
    \ 000445 3b                   tsc
    \ 000446 18                   clc
    \ 000447 690e00               adc     ##14
    \ 00044a 5c......             jmp     long:`?L1189`
0888                  
0889                  //----------------------------------------------
0890                  // Modified MidPoint ellipse algorith to draw a "Faster" Solid Ellipse
0891                  // By Ernesto Contreras
0892                  // ---------------------------------------------
0893                  void plot_solid_ellipse(int xc, int yc, double a, double b, uint8_t col)
0894                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public plot_solid_ellipse
    \ 000000          plot_solid_ellipse:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 a8                   tay
    \ 000009 3b                   tsc
    \ 00000a 38                   sec
    \ 00000b e91600               sbc     ##22
    \ 00000e 1b                   tcs
    \ 00000f 98                   tya
    \ 000010 8313                 sta     19,s
    \ 000012 a5..                 lda     dp:.tiny _Dp
    \ 000014 8315                 sta     21,s
    \ 000016 a324                 lda     36,s
    \ 000018 85..                 sta     dp:.tiny (_Dp+14)
    \ 00001a a322                 lda     34,s
    \ 00001c 85..                 sta     dp:.tiny (_Dp+12)
0895                  	// 1 pixel height or width ellipses are not allowed!!, force at least 2 pixels in either dimension
0896                  	if (a==1) {a++;}
    \ 00001e 22......             jsl     long:`?L1253`
    \ 000022 a90000               lda     ##0
    \ 000025 a2803f               ldx     ##16256
    \ 000028 22......             jsl     long:_Float32EQ
    \ 00002c d013                 bne     `?L344`
    \ 00002e 22......             jsl     long:`?L1253`
    \ 000032 a90000               lda     ##0
    \ 000035 e8                   inx
    \ 000036 ca                   dex
    \ 000037 22......             jsl     long:_Float32Add
    \ 00003b 86..                 stx     dp:.tiny (_Dp+10)
    \ 00003d 85..                 sta     dp:.tiny (_Dp+8)
    \ 00003f 8008                 bra     `?L345`
    \ 000041          `?L344`:
    \ 000041 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000043 85..                 sta     dp:.tiny (_Dp+8)
    \ 000045 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000047 85..                 sta     dp:.tiny (_Dp+10)
    \ 000049          `?L345`:
0897                  	if (b==1) {b++;}
    \ 000049 22......             jsl     long:`?L1260`
    \ 00004d a2803f               ldx     ##16256
    \ 000050 22......             jsl     long:_Float32EQ
    \ 000054 d00e                 bne     `?L348`
    \ 000056 22......             jsl     long:`?L1260`
    \ 00005a e8                   inx
    \ 00005b ca                   dex
    \ 00005c 22......             jsl     long:_Float32Add
    \ 000060 86..                 stx     dp:.tiny (_Dp+14)
    \ 000062 85..                 sta     dp:.tiny (_Dp+12)
    \ 000064          `?L348`:
0898                  	
0899                      double p=b*b-a*a*b+a*a/4;
    \ 000064 22......             jsl     long:`?L1210`
    \ 000068 a5..                 lda     dp:.tiny (_Dp+12)
    \ 00006a 22......             jsl     long:_Float32Mul
    \ 00006e da                   phx
    \ 00006f 48                   pha
    \ 000070 22......             jsl     long:`?L1228`
    \ 000074 22......             jsl     long:_Float32Mul
    \ 000078 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 00007a 84..                 sty     dp:.tiny _Dp
    \ 00007c a4..                 ldy     dp:.tiny (_Dp+14)
    \ 00007e 22......             jsl     long:`?L1193`
    \ 000082 68                   pla
    \ 000083 fa                   plx
    \ 000084 22......             jsl     long:_Float32Sub
    \ 000088 da                   phx
    \ 000089 48                   pha
    \ 00008a 22......             jsl     long:`?L1204`
    \ 00008e a6..                 ldx     dp:.tiny (_Dp+10)
    \ 000090 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000092 22......             jsl     long:`?L1234`
    \ 000096 22......             jsl     long:_FillDP4
    \ 00009a ..                   .byte   .tiny _Dp
    \ 00009b 22......             jsl     long:_Float32Add
    \ 00009f 8301                 sta     1,s
    \ 0000a1 8a                   txa
    \ 0000a2 8303                 sta     3,s
0900                      int x=0, y=b;
    \ 0000a4 a90000               lda     ##0
    \ 0000a7 8305                 sta     5,s
    \ 0000a9 a6..                 ldx     dp:.tiny (_Dp+14)
    \ 0000ab a5..                 lda     dp:.tiny (_Dp+12)
    \ 0000ad 22......             jsl     long:_Float32ToSInt32
    \ 0000b1 8307                 sta     7,s
0901                  	int ra,rb;
0902                  	
0903                  	ra=(int) a*(0.70);
    \ 0000b3 a6..                 ldx     dp:.tiny (_Dp+10)
    \ 0000b5 a5..                 lda     dp:.tiny (_Dp+8)
    \ 0000b7 22......             jsl     long:`?L1243`
    \ 0000bb 1001                 bpl     `?L976`
    \ 0000bd ca                   dex
    \ 0000be          `?L976`:
    \ 0000be 22......             jsl     long:`?L1255`
    \ 0000c2 a0333f               ldy     ##16179
    \ 0000c5 22......             jsl     long:`?L1200`
    \ 0000c9 22......             jsl     long:_Float32ToSInt32
    \ 0000cd 8311                 sta     17,s
0904                  	rb=(int) b*(0.70);
    \ 0000cf a6..                 ldx     dp:.tiny (_Dp+14)
    \ 0000d1 a5..                 lda     dp:.tiny (_Dp+12)
    \ 0000d3 22......             jsl     long:`?L1243`
    \ 0000d7 1001                 bpl     `?L982`
    \ 0000d9 ca                   dex
    \ 0000da          `?L982`:
    \ 0000da 22......             jsl     long:`?L1255`
    \ 0000de a0333f               ldy     ##16179
    \ 0000e1 22......             jsl     long:`?L1200`
    \ 0000e5 22......             jsl     long:_Float32ToSInt32
    \ 0000e9 830d                 sta     13,s
0905                  	
0906                  	// plot solid square with VDMA inside ellipse to save precious time!
0907                  	plot_solid_rectangle(xc-ra,yc-rb,xc+ra,yc+rb,col);
    \ 0000eb a326                 lda     38,s
    \ 0000ed 48                   pha
    \ 0000ee a30f                 lda     15,s
    \ 0000f0 18                   clc
    \ 0000f1 6317                 adc     23,s
    \ 0000f3 48                   pha
    \ 0000f4 a315                 lda     21,s
    \ 0000f6 22......             jsl     long:`?L1251`
    \ 0000fa e311                 sbc     17,s
    \ 0000fc 85..                 sta     dp:.tiny _Dp
    \ 0000fe a317                 lda     23,s
    \ 000100 38                   sec
    \ 000101 e315                 sbc     21,s
    \ 000103 22......             jsl     long:plot_solid_rectangle
0908                  	
0909                      while(2.0*b*b*x <= 2.0*a*a*y)
    \ 000107 68                   pla
    \ 000108 68                   pla
    \ 000109 a305                 lda     5,s
    \ 00010b 830f                 sta     15,s
    \ 00010d a90000   `?L350`:    lda     ##0
    \ 000110 a20040               ldx     ##16384
    \ 000113 22......             jsl     long:`?L1190`
    \ 000117 a307                 lda     7,s
    \ 000119 a20000               ldx     ##0
    \ 00011c a8                   tay
    \ 00011d 1001                 bpl     `?L990`
    \ 00011f ca                   dex
    \ 000120          `?L990`:
    \ 000120 22......             jsl     long:_SInt32ToFloat32
    \ 000124 22......             jsl     long:_Float32Mul
    \ 000128 da                   phx
    \ 000129 48                   pha
    \ 00012a a90000               lda     ##0
    \ 00012d 22......             jsl     long:`?L1198`
    \ 000131 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 000133 84..                 sty     dp:.tiny _Dp
    \ 000135 a4..                 ldy     dp:.tiny (_Dp+14)
    \ 000137 22......             jsl     long:`?L1193`
    \ 00013b a313                 lda     19,s
    \ 00013d a20000               ldx     ##0
    \ 000140 a8                   tay
    \ 000141 1001                 bpl     `?L996`
    \ 000143 ca                   dex
    \ 000144          `?L996`:
    \ 000144 22......             jsl     long:_SInt32ToFloat32
    \ 000148 22......             jsl     long:`?L1194`
    \ 00014c 68                   pla
    \ 00014d fa                   plx
    \ 00014e 22......             jsl     long:_Float32LT
    \ 000152 b003                 bcs     `?L1433`
    \ 000154 4c....               jmp     .kbank `?L351`
    \ 000157          `?L1433`:
0910                      {
0911                          if(p < 0)
    \ 000157 a303                 lda     3,s
    \ 000159 aa                   tax
    \ 00015a a301                 lda     1,s
    \ 00015c 22......             jsl     long:`?L1248`
    \ 000160 b065                 bcs     `?L353`
0912                          {
0913                              x++;
    \ 000162 a30f                 lda     15,s
    \ 000164 1a                   inc     a
    \ 000165 8305                 sta     5,s
0914                              p = p+2*b*b*x+b*b;
    \ 000167 a303                 lda     3,s
    \ 000169 85..                 sta     dp:.tiny (_Dp+2)
    \ 00016b a301                 lda     1,s
    \ 00016d 85..                 sta     dp:.tiny _Dp
    \ 00016f d4..                 pei     dp:.tiny (_Dp+2)
    \ 000171 d4..                 pei     dp:.tiny _Dp
    \ 000173 98                   tya
    \ 000174 22......             jsl     long:`?L1198`
    \ 000178 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 00017a 84..                 sty     dp:.tiny _Dp
    \ 00017c a4..                 ldy     dp:.tiny (_Dp+14)
    \ 00017e 22......             jsl     long:`?L1193`
    \ 000182 a309                 lda     9,s
    \ 000184 a20000               ldx     ##0
    \ 000187 a8                   tay
    \ 000188 1001                 bpl     `?L1004`
    \ 00018a ca                   dex
    \ 00018b          `?L1004`:
    \ 00018b 22......             jsl     long:_SInt32ToFloat32
    \ 00018f 22......             jsl     long:_Float32Mul
    \ 000193 22......             jsl     long:_FillDP2
    \ 000197 ..                   .byte   .tiny _Dp
    \ 000198 22......             jsl     long:_FillDP2
    \ 00019c ..                   .byte   .tiny (_Dp+2)
    \ 00019d 22......             jsl     long:_Float32Add
    \ 0001a1 da                   phx
    \ 0001a2 48                   pha
    \ 0001a3 22......             jsl     long:`?L1210`
    \ 0001a7 a5..                 lda     dp:.tiny (_Dp+12)
    \ 0001a9 22......             jsl     long:_Float32Mul
    \ 0001ad 22......             jsl     long:_FillDP4
    \ 0001b1 ..                   .byte   .tiny _Dp
    \ 0001b2 22......             jsl     long:`?L1263`
    \ 0001b6 a5..                 lda     dp:.tiny _Dp
    \ 0001b8 8301                 sta     1,s
    \ 0001ba a5..                 lda     dp:.tiny (_Dp+2)
    \ 0001bc 8303                 sta     3,s
    \ 0001be a305                 lda     5,s
    \ 0001c0 8309                 sta     9,s
    \ 0001c2 a307                 lda     7,s
    \ 0001c4 4c....               jmp     .kbank `?L1178`
    \ 0001c7          `?L353`:
0915                          }
0916                          else
0917                          {
0918                              x++;
    \ 0001c7 a30f                 lda     15,s
    \ 0001c9 1a                   inc     a
    \ 0001ca 8305                 sta     5,s
0919                              y--;
    \ 0001cc 3b                   tsc
    \ 0001cd 18                   clc
    \ 0001ce 690700               adc     ##7
    \ 0001d1 aa                   tax
    \ 0001d2 de0000               dec     0,x
0920                              p = p+2*b*b*x-2*a*a*y-b*b;
    \ 0001d5 a303                 lda     3,s
    \ 0001d7 85..                 sta     dp:.tiny (_Dp+2)
    \ 0001d9 a301                 lda     1,s
    \ 0001db 85..                 sta     dp:.tiny _Dp
    \ 0001dd d4..                 pei     dp:.tiny (_Dp+2)
    \ 0001df d4..                 pei     dp:.tiny _Dp
    \ 0001e1 98                   tya
    \ 0001e2 22......             jsl     long:`?L1198`
    \ 0001e6 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 0001e8 84..                 sty     dp:.tiny _Dp
    \ 0001ea a4..                 ldy     dp:.tiny (_Dp+14)
    \ 0001ec 22......             jsl     long:`?L1193`
    \ 0001f0 a309                 lda     9,s
    \ 0001f2 a20000               ldx     ##0
    \ 0001f5 a8                   tay
    \ 0001f6 1001                 bpl     `?L1013`
    \ 0001f8 ca                   dex
    \ 0001f9          `?L1013`:
    \ 0001f9 22......             jsl     long:_SInt32ToFloat32
    \ 0001fd 22......             jsl     long:_Float32Mul
    \ 000201 22......             jsl     long:_FillDP2
    \ 000205 ..                   .byte   .tiny _Dp
    \ 000206 22......             jsl     long:_FillDP2
    \ 00020a ..                   .byte   .tiny (_Dp+2)
    \ 00020b 22......             jsl     long:_Float32Add
    \ 00020f da                   phx
    \ 000210 48                   pha
    \ 000211 a90000               lda     ##0
    \ 000214 a20040               ldx     ##16384
    \ 000217 22......             jsl     long:`?L1190`
    \ 00021b a30b                 lda     11,s
    \ 00021d a20000               ldx     ##0
    \ 000220 a8                   tay
    \ 000221 1001                 bpl     `?L1020`
    \ 000223 ca                   dex
    \ 000224          `?L1020`:
    \ 000224 22......             jsl     long:_SInt32ToFloat32
    \ 000228 22......             jsl     long:`?L1194`
    \ 00022c 68                   pla
    \ 00022d fa                   plx
    \ 00022e 22......             jsl     long:_Float32Sub
    \ 000232 da                   phx
    \ 000233 48                   pha
    \ 000234 22......             jsl     long:`?L1226`
    \ 000238 22......             jsl     long:`?L1194`
    \ 00023c 68                   pla
    \ 00023d fa                   plx
    \ 00023e 22......             jsl     long:`?L1230`
    \ 000242 8301                 sta     1,s
    \ 000244 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000246 8303                 sta     3,s
    \ 000248 a305                 lda     5,s
    \ 00024a 8309                 sta     9,s
    \ 00024c a307                 lda     7,s
    \ 00024e 8305     `?L1178`:   sta     5,s
0921                          }
0922                  		plot_line(xc-x,yc+y,xc+x,yc+y,col);
    \ 000250 a326                 lda     38,s
    \ 000252 48                   pha
    \ 000253 a307                 lda     7,s
    \ 000255 18                   clc
    \ 000256 6317                 adc     23,s
    \ 000258 48                   pha
    \ 000259 a30d                 lda     13,s
    \ 00025b 18                   clc
    \ 00025c 6317                 adc     23,s
    \ 00025e 85..                 sta     dp:.tiny (_Dp+2)
    \ 000260 a309                 lda     9,s
    \ 000262 18                   clc
    \ 000263 6319                 adc     25,s
    \ 000265 22......             jsl     long:`?L1254`
0923                  		plot_line(xc-x,yc-y,xc+x,yc-y,col);
    \ 000269 68                   pla
    \ 00026a 68                   pla
    \ 00026b a326                 lda     38,s
    \ 00026d 48                   pha
    \ 00026e a317                 lda     23,s
    \ 000270 38                   sec
    \ 000271 e307                 sbc     7,s
    \ 000273 48                   pha
    \ 000274 a30d                 lda     13,s
    \ 000276 22......             jsl     long:`?L1251`
    \ 00027a e309                 sbc     9,s
    \ 00027c 22......             jsl     long:`?L1254`
    \ 000280 68                   pla
    \ 000281 68                   pla
    \ 000282 a309                 lda     9,s
    \ 000284 830f                 sta     15,s
    \ 000286 a305                 lda     5,s
    \ 000288 8307                 sta     7,s
    \ 00028a 4c....               jmp     .kbank `?L350`
    \ 00028d          `?L351`:
0924                      }
0925                   
0926                      p=b*b*(x+0.5)*(x+0.5)+a*a*(y-1)*(y-1)-a*a*b*b;
    \ 00028d 22......             jsl     long:`?L1210`
    \ 000291 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000293 22......             jsl     long:_Float32Mul
    \ 000297 da                   phx
    \ 000298 48                   pha
    \ 000299 a313                 lda     19,s
    \ 00029b a20000               ldx     ##0
    \ 00029e a8                   tay
    \ 00029f 1001                 bpl     `?L1030`
    \ 0002a1 ca                   dex
    \ 0002a2          `?L1030`:
    \ 0002a2 22......             jsl     long:`?L1205`
    \ 0002a6 22......             jsl     long:_FillDP4
    \ 0002aa ..                   .byte   .tiny _Dp
    \ 0002ab 22......             jsl     long:_Float32Mul
    \ 0002af da                   phx
    \ 0002b0 48                   pha
    \ 0002b1 a313                 lda     19,s
    \ 0002b3 a20000               ldx     ##0
    \ 0002b6 a8                   tay
    \ 0002b7 1001                 bpl     `?L1035`
    \ 0002b9 ca                   dex
    \ 0002ba          `?L1035`:
    \ 0002ba 22......             jsl     long:`?L1205`
    \ 0002be 22......             jsl     long:_FillDP4
    \ 0002c2 ..                   .byte   .tiny _Dp
    \ 0002c3 22......             jsl     long:_Float32Mul
    \ 0002c7 da                   phx
    \ 0002c8 48                   pha
    \ 0002c9 22......             jsl     long:`?L1204`
    \ 0002cd a6..                 ldx     dp:.tiny (_Dp+10)
    \ 0002cf a5..                 lda     dp:.tiny (_Dp+8)
    \ 0002d1 22......             jsl     long:`?L1194`
    \ 0002d5 a30b                 lda     11,s
    \ 0002d7 3a                   dec     a
    \ 0002d8 a20000               ldx     ##0
    \ 0002db a8                   tay
    \ 0002dc 1001                 bpl     `?L1041`
    \ 0002de ca                   dex
    \ 0002df          `?L1041`:
    \ 0002df 22......             jsl     long:_SInt32ToFloat32
    \ 0002e3 22......             jsl     long:`?L1194`
    \ 0002e7 a30b                 lda     11,s
    \ 0002e9 3a                   dec     a
    \ 0002ea a20000               ldx     ##0
    \ 0002ed a8                   tay
    \ 0002ee 1001                 bpl     `?L1045`
    \ 0002f0 ca                   dex
    \ 0002f1          `?L1045`:
    \ 0002f1 22......             jsl     long:_SInt32ToFloat32
    \ 0002f5 22......             jsl     long:_Float32Mul
    \ 0002f9 22......             jsl     long:_FillDP4
    \ 0002fd ..                   .byte   .tiny _Dp
    \ 0002fe 22......             jsl     long:_Float32Add
    \ 000302 da                   phx
    \ 000303 48                   pha
    \ 000304 22......             jsl     long:`?L1228`
    \ 000308 22......             jsl     long:_Float32Mul
    \ 00030c 22......             jsl     long:`?L1199`
    \ 000310 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 000312 84..                 sty     dp:.tiny _Dp
    \ 000314 a4..                 ldy     dp:.tiny (_Dp+14)
    \ 000316 22......             jsl     long:`?L1193`
    \ 00031a 68                   pla
    \ 00031b fa                   plx
    \ 00031c 22......             jsl     long:`?L1230`
0927                      while(y > 0)
    \ 000320 8309                 sta     9,s
    \ 000322 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000324 830b                 sta     11,s
    \ 000326 a30f                 lda     15,s
    \ 000328 8305                 sta     5,s
    \ 00032a a307                 lda     7,s
    \ 00032c 8301     `?L1177`:   sta     1,s
    \ 00032e a90000               lda     ##0
    \ 000331 38                   sec
    \ 000332 e301                 sbc     1,s
    \ 000334 5003                 bvc     `?L1054`
    \ 000336 490080               eor     ##-32768
    \ 000339 3003     `?L1054`:   bmi     `?L1434`
    \ 00033b 4c....               jmp     .kbank `?L343`
    \ 00033e          `?L1434`:
0928                      {
0929                          if(p <= 0)
    \ 00033e a30b                 lda     11,s
    \ 000340 85..                 sta     dp:.tiny (_Dp+2)
    \ 000342 a309                 lda     9,s
    \ 000344 22......             jsl     long:`?L1270`
    \ 000348 9065                 bcc     `?L359`
0930                          {
0931                              x++;
    \ 00034a a305                 lda     5,s
    \ 00034c 1a                   inc     a
    \ 00034d 8305                 sta     5,s
0932                              y--;
    \ 00034f a301                 lda     1,s
    \ 000351 3a                   dec     a
    \ 000352 8307                 sta     7,s
0933                              p = p+2*b*b*x-2*a*a*y+a*a;
    \ 000354 a30b                 lda     11,s
    \ 000356 85..                 sta     dp:.tiny (_Dp+2)
    \ 000358 a309                 lda     9,s
    \ 00035a 85..                 sta     dp:.tiny _Dp
    \ 00035c d4..                 pei     dp:.tiny (_Dp+2)
    \ 00035e d4..                 pei     dp:.tiny _Dp
    \ 000360 8a                   txa
    \ 000361 22......             jsl     long:`?L1198`
    \ 000365 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 000367 84..                 sty     dp:.tiny _Dp
    \ 000369 a4..                 ldy     dp:.tiny (_Dp+14)
    \ 00036b 22......             jsl     long:`?L1193`
    \ 00036f a309                 lda     9,s
    \ 000371 a20000               ldx     ##0
    \ 000374 a8                   tay
    \ 000375 1001                 bpl     `?L1059`
    \ 000377 ca                   dex
    \ 000378          `?L1059`:
    \ 000378 22......             jsl     long:_SInt32ToFloat32
    \ 00037c 22......             jsl     long:_Float32Mul
    \ 000380 22......             jsl     long:_FillDP2
    \ 000384 ..                   .byte   .tiny _Dp
    \ 000385 22......             jsl     long:_FillDP2
    \ 000389 ..                   .byte   .tiny (_Dp+2)
    \ 00038a 22......             jsl     long:_Float32Add
    \ 00038e da                   phx
    \ 00038f 48                   pha
    \ 000390 a90000               lda     ##0
    \ 000393 a20040               ldx     ##16384
    \ 000396 22......             jsl     long:`?L1190`
    \ 00039a a30b                 lda     11,s
    \ 00039c a20000               ldx     ##0
    \ 00039f a8                   tay
    \ 0003a0 1001                 bpl     `?L1066`
    \ 0003a2 ca                   dex
    \ 0003a3          `?L1066`:
    \ 0003a3 22......             jsl     long:_SInt32ToFloat32
    \ 0003a7 22......             jsl     long:`?L1194`
    \ 0003ab 68                   pla
    \ 0003ac fa                   plx
    \ 0003ad 8023                 bra     `?L1182`
    \ 0003af          `?L359`:
0934                          }
0935                          else
0936                          {
0937                              y--;
    \ 0003af a301                 lda     1,s
    \ 0003b1 3a                   dec     a
    \ 0003b2 8307                 sta     7,s
0938                              p = p-2*a*a*y+a*a;
    \ 0003b4 8a                   txa
    \ 0003b5 a20040               ldx     ##16384
    \ 0003b8 22......             jsl     long:`?L1190`
    \ 0003bc a307                 lda     7,s
    \ 0003be a20000               ldx     ##0
    \ 0003c1 a8                   tay
    \ 0003c2 1001                 bpl     `?L1075`
    \ 0003c4 ca                   dex
    \ 0003c5          `?L1075`:
    \ 0003c5 22......             jsl     long:_SInt32ToFloat32
    \ 0003c9 22......             jsl     long:`?L1194`
    \ 0003cd a30b                 lda     11,s
    \ 0003cf aa                   tax
    \ 0003d0 a309                 lda     9,s
    \ 0003d2          `?L1182`:
    \ 0003d2 22......             jsl     long:_Float32Sub
    \ 0003d6 da                   phx
    \ 0003d7 48                   pha
    \ 0003d8 22......             jsl     long:`?L1204`
    \ 0003dc a6..                 ldx     dp:.tiny (_Dp+10)
    \ 0003de a5..                 lda     dp:.tiny (_Dp+8)
    \ 0003e0 22......             jsl     long:_Float32Mul
    \ 0003e4 22......             jsl     long:_FillDP4
    \ 0003e8 ..                   .byte   .tiny _Dp
    \ 0003e9 22......             jsl     long:`?L1263`
    \ 0003ed a5..                 lda     dp:.tiny _Dp
    \ 0003ef 8301                 sta     1,s
    \ 0003f1 a5..                 lda     dp:.tiny (_Dp+2)
    \ 0003f3 8303                 sta     3,s
0939                          }
0940                  		if (a>b)
    \ 0003f5 a6..                 ldx     dp:.tiny (_Dp+14)
    \ 0003f7 a5..                 lda     dp:.tiny (_Dp+12)
    \ 0003f9 a4..                 ldy     dp:.tiny (_Dp+8)
    \ 0003fb 84..                 sty     dp:.tiny _Dp
    \ 0003fd a4..                 ldy     dp:.tiny (_Dp+10)
    \ 0003ff 22......             jsl     long:`?L1249`
    \ 000403 b03d                 bcs     `?L362`
0941                  		{
0942                  			plot_line(xc-ra,yc+y,xc-x,yc+y,col);
    \ 000405 a326                 lda     38,s
    \ 000407 48                   pha
    \ 000408 a309                 lda     9,s
    \ 00040a 18                   clc
    \ 00040b 6317                 adc     23,s
    \ 00040d 48                   pha
    \ 00040e 22......             jsl     long:`?L1217`
0943                  			plot_line(xc+ra,yc+y,xc+x,yc+y,col);
    \ 000412 a32a                 lda     42,s
    \ 000414 48                   pha
    \ 000415 a30d                 lda     13,s
    \ 000417 18                   clc
    \ 000418 631b                 adc     27,s
    \ 00041a 48                   pha
    \ 00041b 22......             jsl     long:`?L1213`
0944                  			plot_line(xc-ra,yc-y,xc-x,yc-y,col);
    \ 00041f a32e                 lda     46,s
    \ 000421 48                   pha
    \ 000422 a31f                 lda     31,s
    \ 000424 38                   sec
    \ 000425 e311                 sbc     17,s
    \ 000427 48                   pha
    \ 000428 22......             jsl     long:`?L1218`
0945                  			plot_line(xc+ra,yc-y,xc+x,yc-y,col);
    \ 00042c a332                 lda     50,s
    \ 00042e 48                   pha
    \ 00042f a323                 lda     35,s
    \ 000431 38                   sec
    \ 000432 e315                 sbc     21,s
    \ 000434 48                   pha
    \ 000435 22......             jsl     long:`?L1214`
    \ 000439 3b                   tsc
    \ 00043a 18                   clc
    \ 00043b 691000               adc     ##16
    \ 00043e 1b                   tcs
    \ 00043f 4c....               jmp     .kbank `?L363`
    \ 000442          `?L362`:
0946                  		}
0947                  		else
0948                  		{
0949                  			if (yc-y<yc-rb)
    \ 000442 a315                 lda     21,s
    \ 000444 38                   sec
    \ 000445 e307                 sbc     7,s
    \ 000447 48                   pha
    \ 000448 a317                 lda     23,s
    \ 00044a 38                   sec
    \ 00044b e30f                 sbc     15,s
    \ 00044d 85..                 sta     dp:.tiny _Dp
    \ 00044f 68                   pla
    \ 000450 38                   sec
    \ 000451 e5..                 sbc     dp:.tiny _Dp
    \ 000453 5003                 bvc     `?L1087`
    \ 000455 490080               eor     ##-32768
    \ 000458 1028     `?L1087`:   bpl     `?L365`
0950                  			{
0951                  				plot_line(xc-x,yc-y,xc+x,yc-y,col);
    \ 00045a a326                 lda     38,s
    \ 00045c 48                   pha
    \ 00045d a317                 lda     23,s
    \ 00045f 38                   sec
    \ 000460 e309                 sbc     9,s
    \ 000462 48                   pha
    \ 000463 a309                 lda     9,s
    \ 000465 22......             jsl     long:`?L1251`
    \ 000469 e30b                 sbc     11,s
    \ 00046b 22......             jsl     long:`?L1216`
0952                  				plot_line(xc-x,yc+y,xc+x,yc+y,col);
    \ 00046f 68                   pla
    \ 000470 68                   pla
    \ 000471 a326                 lda     38,s
    \ 000473 48                   pha
    \ 000474 a309                 lda     9,s
    \ 000476 18                   clc
    \ 000477 6317                 adc     23,s
    \ 000479 48                   pha
    \ 00047a 22......             jsl     long:`?L1215`
    \ 00047e 68                   pla
    \ 00047f 68                   pla
    \ 000480 8059                 bra     `?L363`
    \ 000482          `?L365`:
0953                  			}
0954                  			else
0955                  			{
0956                  				// special case - if you remove it a line wont be completely filled in vertical ellipses
0957                  				if (yc-y==yc-rb) {plot_line(xc-x,yc+y,xc+x,yc+y,col);}
    \ 000482 a315                 lda     21,s
    \ 000484 38                   sec
    \ 000485 e307                 sbc     7,s
    \ 000487 85..                 sta     dp:.tiny _Dp
    \ 000489 a315                 lda     21,s
    \ 00048b 38                   sec
    \ 00048c e30d                 sbc     13,s
    \ 00048e c5..                 cmp     dp:.tiny _Dp
    \ 000490 d00f                 bne     `?L369`
    \ 000492 a326                 lda     38,s
    \ 000494 48                   pha
    \ 000495 a309                 lda     9,s
    \ 000497 18                   clc
    \ 000498 6317                 adc     23,s
    \ 00049a 48                   pha
    \ 00049b 22......             jsl     long:`?L1215`
    \ 00049f 68                   pla
    \ 0004a0 68                   pla
    \ 0004a1          `?L369`:
0958                  				plot_line(xc-ra,yc+y,xc-x,yc+y,col);
    \ 0004a1 a326                 lda     38,s
    \ 0004a3 48                   pha
    \ 0004a4 a309                 lda     9,s
    \ 0004a6 18                   clc
    \ 0004a7 6317                 adc     23,s
    \ 0004a9 48                   pha
    \ 0004aa 22......             jsl     long:`?L1217`
0959                  				plot_line(xc+ra,yc+y,xc+x,yc+y,col);
    \ 0004ae a32a                 lda     42,s
    \ 0004b0 48                   pha
    \ 0004b1 a30d                 lda     13,s
    \ 0004b3 18                   clc
    \ 0004b4 631b                 adc     27,s
    \ 0004b6 48                   pha
    \ 0004b7 22......             jsl     long:`?L1213`
0960                  				plot_line(xc-ra,yc-y,xc-x,yc-y,col);
    \ 0004bb a32e                 lda     46,s
    \ 0004bd 48                   pha
    \ 0004be a31f                 lda     31,s
    \ 0004c0 38                   sec
    \ 0004c1 e311                 sbc     17,s
    \ 0004c3 48                   pha
    \ 0004c4 22......             jsl     long:`?L1218`
0961                  				plot_line(xc+ra,yc-y,xc+x,yc-y,col);
    \ 0004c8 a332                 lda     50,s
    \ 0004ca 48                   pha
    \ 0004cb a323                 lda     35,s
    \ 0004cd 38                   sec
    \ 0004ce e315                 sbc     21,s
    \ 0004d0 48                   pha
    \ 0004d1 22......             jsl     long:`?L1214`
    \ 0004d5 3b                   tsc
    \ 0004d6 18                   clc
    \ 0004d7 691000               adc     ##16
    \ 0004da 1b                   tcs
    \ 0004db a301     `?L363`:    lda     1,s
    \ 0004dd 8309                 sta     9,s
    \ 0004df a303                 lda     3,s
    \ 0004e1 830b                 sta     11,s
    \ 0004e3 a307                 lda     7,s
    \ 0004e5 4c....               jmp     .kbank `?L1177`
    \ 0004e8          `?L343`:
0962                  			}
0963                  		}
0964                      }
0965                  }
    \ 0004e8 3b                   tsc
    \ 0004e9 18                   clc
    \ 0004ea 691600               adc     ##22
    \ 0004ed 1b       `?L1189`:   tcs
    \ 0004ee 7a                   ply
    \ 0004ef 84..                 sty     dp:.tiny (_Dp+14)
    \ 0004f1 7a                   ply
    \ 0004f2 84..                 sty     dp:.tiny (_Dp+12)
    \ 0004f4 7a                   ply
    \ 0004f5 84..                 sty     dp:.tiny (_Dp+10)
    \ 0004f7 7a                   ply
    \ 0004f8 84..                 sty     dp:.tiny (_Dp+8)
    \ 0004fa 6b                   rtl
0966                  
0967                  //--------------------------------------
0968                  // "Faster" Solid Circle
0969                  // By Ernesto Contreras 
0970                  //--------------------------------------
0971                  void plot_solid_circle(int xc,int yc, int r, uint8_t col) 
0972                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public plot_solid_circle
    \ 000000          plot_solid_circle:
    \ 000000 a8                   tay
    \ 000001 3b                   tsc
    \ 000002 38                   sec
    \ 000003 e90e00               sbc     ##14
    \ 000006 1b                   tcs
    \ 000007 98                   tya
    \ 000008 8309                 sta     9,s
    \ 00000a a5..                 lda     dp:.tiny _Dp
    \ 00000c 830b                 sta     11,s
    \ 00000e a5..                 lda     dp:.tiny (_Dp+2)
    \ 000010 8301                 sta     1,s
0973                  	int x;
0974                  	int y;
0975                  	int p;
0976                  	int r1;
0977                  	r1=(int)(r*0.70);
    \ 000012 a301                 lda     1,s
    \ 000014 a20000               ldx     ##0
    \ 000017 a8                   tay
    \ 000018 1001                 bpl     `?L1096`
    \ 00001a ca                   dex
    \ 00001b          `?L1096`:
    \ 00001b 22......             jsl     long:`?L1255`
    \ 00001f a0333f               ldy     ##16179
    \ 000022 22......             jsl     long:`?L1200`
    \ 000026 22......             jsl     long:_Float32ToSInt32
    \ 00002a 8307                 sta     7,s
0978                  	
0979                  	// 1 pixel radius circles are not allowed!!, force 2 radius!
0980                  	if (r==1) {r++;}
    \ 00002c a301                 lda     1,s
    \ 00002e c90100               cmp     ##1
    \ 000031 d007                 bne     `?L1183`
    \ 000033 a301                 lda     1,s
    \ 000035 1a                   inc     a
    \ 000036 8301                 sta     1,s
    \ 000038 a301                 lda     1,s
    \ 00003a 8303     `?L1183`:   sta     3,s
0981                  
0982                  	// plot solid square with VDMA inside circle to save precious time!
0983                  	plot_solid_rectangle (xc-r1,yc-r1,xc+r1,yc+r1,col);
    \ 00003c a312                 lda     18,s
    \ 00003e 48                   pha
    \ 00003f a309                 lda     9,s
    \ 000041 18                   clc
    \ 000042 630d                 adc     13,s
    \ 000044 48                   pha
    \ 000045 a30b                 lda     11,s
    \ 000047 18                   clc
    \ 000048 630d                 adc     13,s
    \ 00004a 85..                 sta     dp:.tiny (_Dp+2)
    \ 00004c a30f                 lda     15,s
    \ 00004e 38                   sec
    \ 00004f e30b                 sbc     11,s
    \ 000051 85..                 sta     dp:.tiny _Dp
    \ 000053 a30d                 lda     13,s
    \ 000055 38                   sec
    \ 000056 e30b                 sbc     11,s
    \ 000058 22......             jsl     long:plot_solid_rectangle
0984                  	x = 0;
    \ 00005c 68                   pla
    \ 00005d 68                   pla
    \ 00005e a90000               lda     ##0
    \ 000061 8301                 sta     1,s
0985                  	y = r;
    \ 000063 a303                 lda     3,s
    \ 000065 8301                 sta     1,s
0986                  	p=3-(2*r);
    \ 000067 1a                   inc     a
    \ 000068 3a                   dec     a
    \ 000069 0a                   asl     a
    \ 00006a 85..                 sta     dp:.tiny _Dp
    \ 00006c a90300               lda     ##3
    \ 00006f 38                   sec
    \ 000070 e5..                 sbc     dp:.tiny _Dp
    \ 000072 8303                 sta     3,s
0987                  
0988                  	for(x=0;x<=y;x++)
    \ 000074 a90000               lda     ##0
    \ 000077 830d                 sta     13,s
    \ 000079 a301                 lda     1,s
    \ 00007b 8305                 sta     5,s
    \ 00007d a303                 lda     3,s
    \ 00007f 8301                 sta     1,s
    \ 000081 a305     `?L378`:    lda     5,s
    \ 000083 38                   sec
    \ 000084 e30d                 sbc     13,s
    \ 000086 5003                 bvc     `?L1102`
    \ 000088 490080               eor     ##-32768
    \ 00008b 102b     `?L1102`:   bpl     `?L377`
0989                  	{
0990                  		if (p < 0)
0991                  			{
0992                  				p = p + (4 * x)+6;
0993                  			}
0994                  			else
0995                  			{
0996                  				y=y-1;
0997                  				p = p +4 *(x-y)+10;
0998                  			}
0999                  		plot_line(xc+x,yc-y,xc-x,yc-y,col);
1000                  		plot_line(xc+x,yc+y,xc-x,yc+y,col);
1001                  		plot_line(xc-y,yc-x,xc-r1,yc-x,col);
1002                  		plot_line(xc+r1,yc-x,xc+y,yc-x,col);
1003                  		plot_line(xc-y,yc+x,xc-r1,yc+x,col);
1004                  		plot_line(xc+r1,yc+x,xc+y,yc+x,col);
1005                  	}
1006                  	// special case if you remove it on certain circles a line won't be filled
1007                  	plot_line(xc-x,yc+y-1,xc+x,yc+y-1,col);
    \ 00008d a312                 lda     18,s
    \ 00008f 48                   pha
    \ 000090 a307                 lda     7,s
    \ 000092 18                   clc
    \ 000093 630d                 adc     13,s
    \ 000095 3a                   dec     a
    \ 000096 48                   pha
    \ 000097 a311                 lda     17,s
    \ 000099 18                   clc
    \ 00009a 630d                 adc     13,s
    \ 00009c 85..                 sta     dp:.tiny (_Dp+2)
    \ 00009e a309                 lda     9,s
    \ 0000a0 18                   clc
    \ 0000a1 630f                 adc     15,s
    \ 0000a3 3a                   dec     a
    \ 0000a4 85..                 sta     dp:.tiny _Dp
    \ 0000a6 a30d                 lda     13,s
    \ 0000a8 38                   sec
    \ 0000a9 e311                 sbc     17,s
    \ 0000ab 22......             jsl     long:plot_line
    \ 0000af 68                   pla
    \ 0000b0 68                   pla
1008                  }
    \ 0000b1 3b                   tsc
    \ 0000b2 18                   clc
    \ 0000b3 690e00               adc     ##14
    \ 0000b6 1b                   tcs
    \ 0000b7 6b                   rtl
    \ 0000b8 a301     `?L377`:    lda     1,s
    \ 0000ba 100f                 bpl     `?L381`
    \ 0000bc a30d                 lda     13,s
    \ 0000be 0a                   asl     a
    \ 0000bf 0a                   asl     a
    \ 0000c0 18                   clc
    \ 0000c1 6301                 adc     1,s
    \ 0000c3 18                   clc
    \ 0000c4 690600               adc     ##6
    \ 0000c7 8301                 sta     1,s
    \ 0000c9 8019                 bra     `?L382`
    \ 0000cb a305     `?L381`:    lda     5,s
    \ 0000cd 3a                   dec     a
    \ 0000ce 8303                 sta     3,s
    \ 0000d0 a30d                 lda     13,s
    \ 0000d2 38                   sec
    \ 0000d3 e303                 sbc     3,s
    \ 0000d5 0a                   asl     a
    \ 0000d6 0a                   asl     a
    \ 0000d7 18                   clc
    \ 0000d8 6301                 adc     1,s
    \ 0000da 18                   clc
    \ 0000db 690a00               adc     ##10
    \ 0000de 8301                 sta     1,s
    \ 0000e0 a303                 lda     3,s
    \ 0000e2 8305                 sta     5,s
    \ 0000e4 a312     `?L382`:    lda     18,s
    \ 0000e6 48                   pha
    \ 0000e7 a30d                 lda     13,s
    \ 0000e9 38                   sec
    \ 0000ea e307                 sbc     7,s
    \ 0000ec 48                   pha
    \ 0000ed a30d                 lda     13,s
    \ 0000ef 38                   sec
    \ 0000f0 e311                 sbc     17,s
    \ 0000f2 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000f4 a30f                 lda     15,s
    \ 0000f6 38                   sec
    \ 0000f7 e309                 sbc     9,s
    \ 0000f9 85..                 sta     dp:.tiny _Dp
    \ 0000fb a311                 lda     17,s
    \ 0000fd 18                   clc
    \ 0000fe 630d                 adc     13,s
    \ 000100 22......             jsl     long:plot_line
    \ 000104 a316                 lda     22,s
    \ 000106 48                   pha
    \ 000107 a30b                 lda     11,s
    \ 000109 18                   clc
    \ 00010a 6311                 adc     17,s
    \ 00010c 48                   pha
    \ 00010d a311                 lda     17,s
    \ 00010f 38                   sec
    \ 000110 e315                 sbc     21,s
    \ 000112 85..                 sta     dp:.tiny (_Dp+2)
    \ 000114 a30d                 lda     13,s
    \ 000116 18                   clc
    \ 000117 6313                 adc     19,s
    \ 000119 85..                 sta     dp:.tiny _Dp
    \ 00011b a315                 lda     21,s
    \ 00011d 18                   clc
    \ 00011e 6311                 adc     17,s
    \ 000120 22......             jsl     long:plot_line
    \ 000124 a31a                 lda     26,s
    \ 000126 48                   pha
    \ 000127 a315                 lda     21,s
    \ 000129 38                   sec
    \ 00012a e317                 sbc     23,s
    \ 00012c 48                   pha
    \ 00012d a315                 lda     21,s
    \ 00012f 38                   sec
    \ 000130 e313                 sbc     19,s
    \ 000132 85..                 sta     dp:.tiny (_Dp+2)
    \ 000134 a317                 lda     23,s
    \ 000136 38                   sec
    \ 000137 e319                 sbc     25,s
    \ 000139 85..                 sta     dp:.tiny _Dp
    \ 00013b a315                 lda     21,s
    \ 00013d 38                   sec
    \ 00013e e311                 sbc     17,s
    \ 000140 22......             jsl     long:plot_line
    \ 000144 a31e                 lda     30,s
    \ 000146 48                   pha
    \ 000147 a319                 lda     25,s
    \ 000149 38                   sec
    \ 00014a e31b                 sbc     27,s
    \ 00014c 48                   pha
    \ 00014d a315                 lda     21,s
    \ 00014f 18                   clc
    \ 000150 6319                 adc     25,s
    \ 000152 85..                 sta     dp:.tiny (_Dp+2)
    \ 000154 a31b                 lda     27,s
    \ 000156 38                   sec
    \ 000157 e31d                 sbc     29,s
    \ 000159 85..                 sta     dp:.tiny _Dp
    \ 00015b a317                 lda     23,s
    \ 00015d 18                   clc
    \ 00015e 6319                 adc     25,s
    \ 000160 22......             jsl     long:plot_line
    \ 000164 a322                 lda     34,s
    \ 000166 48                   pha
    \ 000167 a31f                 lda     31,s
    \ 000169 18                   clc
    \ 00016a 631d                 adc     29,s
    \ 00016c 48                   pha
    \ 00016d a31d                 lda     29,s
    \ 00016f 38                   sec
    \ 000170 e31b                 sbc     27,s
    \ 000172 85..                 sta     dp:.tiny (_Dp+2)
    \ 000174 a321                 lda     33,s
    \ 000176 18                   clc
    \ 000177 631f                 adc     31,s
    \ 000179 85..                 sta     dp:.tiny _Dp
    \ 00017b a31d                 lda     29,s
    \ 00017d 38                   sec
    \ 00017e e319                 sbc     25,s
    \ 000180 22......             jsl     long:plot_line
    \ 000184 3b                   tsc
    \ 000185 18                   clc
    \ 000186 691400               adc     ##20
    \ 000189 1b                   tcs
    \ 00018a a312                 lda     18,s
    \ 00018c 48                   pha
    \ 00018d a30f                 lda     15,s
    \ 00018f 18                   clc
    \ 000190 630d                 adc     13,s
    \ 000192 48                   pha
    \ 000193 a309                 lda     9,s
    \ 000195 18                   clc
    \ 000196 630d                 adc     13,s
    \ 000198 85..                 sta     dp:.tiny (_Dp+2)
    \ 00019a a311                 lda     17,s
    \ 00019c 18                   clc
    \ 00019d 630f                 adc     15,s
    \ 00019f 85..                 sta     dp:.tiny _Dp
    \ 0001a1 a30b                 lda     11,s
    \ 0001a3 18                   clc
    \ 0001a4 630d                 adc     13,s
    \ 0001a6 22......             jsl     long:plot_line
    \ 0001aa 68                   pla
    \ 0001ab 68                   pla
    \ 0001ac a30d                 lda     13,s
    \ 0001ae 1a                   inc     a
    \ 0001af 8303                 sta     3,s
    \ 0001b1 a303                 lda     3,s
    \ 0001b3 830d                 sta     13,s
    \ 0001b5 4c....               jmp     .kbank `?L378`
1009                  
1010                  
1011                  // ----------------------------------------------------------------------------------
1012                  // Custom Stack Functions (needed for Flood fill Implementation)
1013                  // Original Version: https://www.tutorialspoint.com/data_structures_algorithms/stack_program_in_c.htm
1014                  // Modified by Ernesto Contreras 
1015                  // ----------------------------------------------------------------------------------
1016                  
1017                  
1018                  
1019                  bool isStackEmpty() {
    \ 000000                      .section farcode,text
    \ 000000                      .public isStackEmpty
    \ 000000          isStackEmpty:
1020                     if(stackTop == 0)
    \ 000000 ad....               lda     stackTop
    \ 000003 d004                 bne     `?L387`
1021                        return true;
    \ 000005 a90100               lda     ##1
    \ 000008 6b                   rtl
    \ 000009          `?L387`:
1022                     else
1023                        return false;
    \ 000009 a90000               lda     ##0
    \ 00000c 6b                   rtl
1024                  }
1025                     
1026                  bool isStackFull() {
    \ 000000                      .section farcode,text
    \ 000000                      .public isStackFull
    \ 000000          isStackFull:
1027                     if(stackTop == STACK_MAXSIZE )
    \ 000000 a28000               ldx     ##128
    \ 000003 ec....               cpx     stackTop
    \ 000006 d004                 bne     `?L395`
1028                     {
1029                  	   //printf ("stacklevel: %d MaxSize: %d\n\r",stackTop,STACK_MAXSIZE);
1030                         return true;
    \ 000008 a90100               lda     ##1
    \ 00000b 6b                   rtl
    \ 00000c          `?L395`:
1031                     }
1032                     else
1033                     {
1034                        return false;
    \ 00000c a90000               lda     ##0
    \ 00000f 6b                   rtl
1035                     }
1036                  }
1037                  
1038                  bool stackPeek(int *x, int *y) {
    \ 000000                      .section farcode,text
    \ 000000                      .public stackPeek
    \ 000000 a8       stackPeek:  tay
1039                     *x=stack[stackTop][0];
    \ 000001 ad....               lda     stackTop
    \ 000004 0a                   asl     a
    \ 000005 0a                   asl     a
    \ 000006 aa                   tax
    \ 000007 bd....               lda     stack,x
    \ 00000a bb                   tyx
    \ 00000b 9d0000               sta     0,x
1040                     *y=stack[stackTop][1];
1041                     return true;
    \ 00000e 22......             jsl     long:`?L1237`
    \ 000012 bd0200               lda     2,x
    \ 000015 92..                 sta     (.tiny _Dp)
    \ 000017 a90100               lda     ##1
1042                  }
    \ 00001a 6b                   rtl
1043                  
1044                  bool stackPop(int *x, int *y) {
    \ 000000                      .section farcode,text
    \ 000000                      .public stackPop
    \ 000000          stackPop:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 5a                   phy
    \ 000003 8301                 sta     1,s
    \ 000005 a5..                 lda     dp:.tiny _Dp
    \ 000007 85..                 sta     dp:.tiny (_Dp+8)
1045                     int data;
1046                     if(isStackEmpty()==false) {
    \ 000009 22......             jsl     long:isStackEmpty
    \ 00000d 1a                   inc     a
    \ 00000e 3a                   dec     a
    \ 00000f d01f                 bne     `?L407`
1047                  	  *x = stack[stackTop][0];
    \ 000011 ad....               lda     stackTop
    \ 000014 0a                   asl     a
    \ 000015 0a                   asl     a
    \ 000016 aa                   tax
    \ 000017 bd....               lda     stack,x
    \ 00001a a00000               ldy     ##0
    \ 00001d 9301                 sta     (1,s),y
1048                  	  *y = stack[stackTop][1];
1049                        stackTop--;   
1050                        return true;
    \ 00001f 22......             jsl     long:`?L1237`
    \ 000023 bd0200               lda     2,x
    \ 000026 92..                 sta     (.tiny (_Dp+8))
    \ 000028 ce....               dec     stackTop
    \ 00002b a90100               lda     ##1
    \ 00002e 8003                 bra     `?L406`
    \ 000030          `?L407`:
1051                     } else {
1052                        //printf("Could not insert data, Stack is full. stackSize:%d \n\r",stackTop);
1053                  	  return false;
    \ 000030 a90000               lda     ##0
    \ 000033          `?L406`:
1054                     }
1055                  }
    \ 000033 5c......             jmp     long:`?L414`
1056                  
1057                  bool stackPush(int x, int y) {
    \ 000000                      .section farcode,text
    \ 000000                      .public stackPush
    \ 000000          stackPush:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 5a                   phy
    \ 000003 8301                 sta     1,s
    \ 000005 a5..                 lda     dp:.tiny _Dp
    \ 000007 85..                 sta     dp:.tiny (_Dp+8)
1058                  
1059                     if(isStackFull()==false) {
    \ 000009 22......             jsl     long:isStackFull
    \ 00000d 1a                   inc     a
    \ 00000e 3a                   dec     a
    \ 00000f d01e                 bne     `?L415`
1060                        stackTop++;   
    \ 000011 ee....               inc     stackTop
1061                  	  stack[stackTop][0] = x;
    \ 000014 ad....               lda     stackTop
    \ 000017 0a                   asl     a
    \ 000018 0a                   asl     a
    \ 000019 aa                   tax
    \ 00001a a301                 lda     1,s
    \ 00001c 9d....               sta     stack,x
1062                  	  stack[stackTop][1] = y;
    \ 00001f a5..                 lda     dp:.tiny (_Dp+8)
    \ 000021 a8                   tay
1063                  	  return true;
    \ 000022 22......             jsl     long:`?L1237`
    \ 000026 98                   tya
    \ 000027 9d0200               sta     2,x
    \ 00002a a90100               lda     ##1
    \ 00002d 8003                 bra     `?L414`
    \ 00002f          `?L415`:
1064                     } else {
1065                        //printf("Could not insert data, Stack is full. stackSize:%d \n\r",stackTop);
1066                  	  return false;
    \ 00002f a90000               lda     ##0
    \ 000032          `?L414`:
1067                     }
1068                  }
    \ 000032 7a                   ply
    \ 000033 7a                   ply
    \ 000034 84..                 sty     dp:.tiny (_Dp+8)
    \ 000036 6b                   rtl
1069                  
1070                  //------------------------------------------------------------------------------
1071                  // Scanline floodfill algorithm using stack instead of recursion, more robust
1072                  // Modified floodFillScanlineStack(int x, int y, int newColor, int oldColor)
1073                  // Credits to Lode Vandevenne.
1074                  // https://lodev.org/cgtutor/floodfill.html
1075                  // modified by Ernesto Contreras 
1076                  // -----------------------------------------------------------------------------
1077                  void floodFill(int x, int y, uint8_t newColor)
1078                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public floodFill
    \ 000000 a8       floodFill:  tay
    \ 000001 3b                   tsc
    \ 000002 38                   sec
    \ 000003 e90e0c               sbc     ##3086
    \ 000006 1b                   tcs
    \ 000007 98                   tya
    \ 000008 8309                 sta     9,s
    \ 00000a a5..                 lda     dp:.tiny _Dp
    \ 00000c 830c                 sta     12,s
1079                  // Global Array for Pixel buffer read
1080                    int st, dbcount;
1081                    uint8_t oldColor;
1082                    int x1;
1083                    int xInit;
1084                    
1085                    // Use of static to ask for this buffer memory only Once!
1086                    uint8_t BufferAbove[1024];
1087                    uint8_t BufferCurrent[1024];
1088                    uint8_t BufferBelow[1024];
1089                  
1090                    // init variables
1091                    x1=0;
1092                    xInit=0;
1093                    dbcount=0;
1094                    stackTop=0;
    \ 00000e a20000               ldx     ##0
    \ 000011 8e....               stx     stackTop
1095                    st=0;
1096                   
1097                   // Init Floodfill Algorithm
1098                    st=getScanLine(y,BufferCurrent);  // read "current" scan line y into bufferCurrent[]
    \ 000014 3b                   tsc
    \ 000015 22......             jsl     long:`?L1240`
    \ 000019 8301                 sta     1,s
1099                    oldColor=BufferCurrent[x];
    \ 00001b 3b                   tsc
    \ 00001c 18                   clc
    \ 00001d 690e08               adc     ##2062
    \ 000020 a8                   tay
    \ 000021 b309                 lda     (9,s),y
    \ 000023 e220                 sep     #32
    \ 000025 830b                 sta     11,s
    \ 000027 c220                 rep     #32
1100                    if(oldColor == newColor) return;
    \ 000029 3b                   tsc
    \ 00002a 18                   clc
    \ 00002b 69120c               adc     ##3090
    \ 00002e aa                   tax
    \ 00002f bd0000               lda     0,x
    \ 000032 e220                 sep     #32
    \ 000034 c30b                 cmp     11,s
    \ 000036 c220                 rep     #32
    \ 000038 d003                 bne     `?L1435`
    \ 00003a 4c....               jmp     .kbank `?L422`
    \ 00003d          `?L1435`:
1101                    // Global Buffers for FloodFill
1102                    bool spanAbove, spanBelow;
1103                    stackPush(x, y);
    \ 00003d a30c                 lda     12,s
    \ 00003f 85..                 sta     dp:.tiny _Dp
    \ 000041 a309                 lda     9,s
    \ 000043 22......             jsl     long:stackPush
    \ 000047          `?L427`:
1104                    while(stackPop(&x, &y))
    \ 000047 3b                   tsc
    \ 000048 18                   clc
    \ 000049 690c00               adc     ##12
    \ 00004c 85..                 sta     dp:.tiny _Dp
    \ 00004e 3b                   tsc
    \ 00004f 18                   clc
    \ 000050 690900               adc     ##9
    \ 000053 22......             jsl     long:stackPop
    \ 000057 1a                   inc     a
    \ 000058 3a                   dec     a
    \ 000059 d003                 bne     `?L1436`
    \ 00005b 4c....               jmp     .kbank `?L422`
    \ 00005e          `?L1436`:
1105                    {
1106                  	if (y>=1)
    \ 00005e a30c                 lda     12,s
    \ 000060 38                   sec
    \ 000061 e90100               sbc     ##1
    \ 000064 5003                 bvc     `?L1116`
    \ 000066 490080               eor     ##-32768
    \ 000069 3012     `?L1116`:   bmi     `?L431`
1107                  		st=getScanLine(y-1,BufferAbove);  // read scan line "above" line y into bufferAbove[]
    \ 00006b 3b                   tsc
    \ 00006c 18                   clc
    \ 00006d 690e00               adc     ##14
    \ 000070 85..                 sta     dp:.tiny _Dp
    \ 000072 64..                 stz     dp:.tiny (_Dp+2)
    \ 000074 a30c                 lda     12,s
    \ 000076 3a                   dec     a
    \ 000077 22......             jsl     long:getScanLine
    \ 00007b 8301                 sta     1,s
    \ 00007d          `?L431`:
1108                  	if (y>=0)
    \ 00007d a30c                 lda     12,s
    \ 00007f 3007                 bmi     `?L434`
1109                  		st=getScanLine(y,BufferCurrent);  // read "current" scan line y into bufferCurrent[]
    \ 000081 3b                   tsc
    \ 000082 22......             jsl     long:`?L1240`
    \ 000086 8301                 sta     1,s
    \ 000088          `?L434`:
1110                  	if (y < vickyResY-1)
    \ 000088 a30c                 lda     12,s
    \ 00008a a20000               ldx     ##0
    \ 00008d a8                   tay
    \ 00008e 1001                 bpl     `?L1120`
    \ 000090 ca                   dex
    \ 000091          `?L1120`:
    \ 000091 22......             jsl     long:`?L1239`
    \ 000095 d001                 bne     `?L1122`
    \ 000097 ca                   dex
    \ 000098          `?L1122`:
    \ 000098 22......             jsl     long:`?L1222`
    \ 00009c 5003                 bvc     `?L1124`
    \ 00009e 490080               eor     ##-32768
    \ 0000a1 1012     `?L1124`:   bpl     `?L437`
1111                  		st=getScanLine(y+1,BufferBelow);  // read scan line "below" line y into bufferBelow[]
    \ 0000a3 3b                   tsc
    \ 0000a4 18                   clc
    \ 0000a5 690e04               adc     ##1038
    \ 0000a8 85..                 sta     dp:.tiny _Dp
    \ 0000aa 64..                 stz     dp:.tiny (_Dp+2)
    \ 0000ac a30c                 lda     12,s
    \ 0000ae 1a                   inc     a
    \ 0000af 22......             jsl     long:getScanLine
    \ 0000b3 8301                 sta     1,s
    \ 0000b5          `?L437`:
1112                  
1113                  	x1 = x;
    \ 0000b5 a309                 lda     9,s
    \ 0000b7          `?L1185`:
1114                  	while((x1 >= 0) && BufferCurrent[x1] == oldColor) 
1115                  		x1--; //find leftmost pixel with color != oldcolor to begin fill
    \ 0000b7 a8                   tay
    \ 0000b8 84..                 sty     dp:.tiny _Dp
    \ 0000ba a5..                 lda     dp:.tiny _Dp
    \ 0000bc 301e                 bmi     `?L440`
    \ 0000be 3b                   tsc
    \ 0000bf 18                   clc
    \ 0000c0 690e08               adc     ##2062
    \ 0000c3 84..                 sty     dp:.tiny _Dp
    \ 0000c5 18                   clc
    \ 0000c6 65..                 adc     dp:.tiny _Dp
    \ 0000c8 aa                   tax
    \ 0000c9 a30b                 lda     11,s
    \ 0000cb e220                 sep     #32
    \ 0000cd dd0000               cmp     0,x
    \ 0000d0 c220                 rep     #32
    \ 0000d2 d008                 bne     `?L440`
    \ 0000d4 98                   tya
    \ 0000d5 3a                   dec     a
    \ 0000d6 8301                 sta     1,s
    \ 0000d8 a301                 lda     1,s
    \ 0000da 80db                 bra     `?L1185`
    \ 0000dc          `?L440`:
1116                  	xInit=++x1;
    \ 0000dc 98                   tya
    \ 0000dd 1a                   inc     a
    \ 0000de 8303                 sta     3,s
    \ 0000e0 a303                 lda     3,s
    \ 0000e2 8301                 sta     1,s
1117                  	spanAbove = spanBelow = 0;
    \ 0000e4 a90000               lda     ##0
    \ 0000e7 8305                 sta     5,s
    \ 0000e9 aa                   tax
1118                  	while(x1 < (vickyResX) && BufferCurrent[x1] == oldColor)
    \ 0000ea a303                 lda     3,s
    \ 0000ec 8307                 sta     7,s
    \ 0000ee 8a                   txa
    \ 0000ef 8303                 sta     3,s
    \ 0000f1 a20000   `?L442`:    ldx     ##0
    \ 0000f4 a307                 lda     7,s
    \ 0000f6 1001                 bpl     `?L1127`
    \ 0000f8 ca                   dex
    \ 0000f9          `?L1127`:
    \ 0000f9 22......             jsl     long:`?L1232`
    \ 0000fd 5003                 bvc     `?L1129`
    \ 0000ff 490080               eor     ##-32768
    \ 000102 3003     `?L1129`:   bmi     `?L1437`
    \ 000104 4c....               jmp     .kbank `?L443`
    \ 000107 3b       `?L1437`:   tsc
    \ 000108 18                   clc
    \ 000109 690e08               adc     ##2062
    \ 00010c 22......             jsl     long:`?L1211`
    \ 000110 f003                 beq     `?L1438`
    \ 000112 4c....               jmp     .kbank `?L443`
    \ 000115          `?L1438`:
1119                  	{
1120                  	  if(!spanAbove && (y > 0) && BufferAbove[x1] == oldColor)
    \ 000115 a303                 lda     3,s
    \ 000117 d025                 bne     `?L445`
    \ 000119 a90000               lda     ##0
    \ 00011c 38                   sec
    \ 00011d e30c                 sbc     12,s
    \ 00011f 5003                 bvc     `?L1131`
    \ 000121 490080               eor     ##-32768
    \ 000124 1018     `?L1131`:   bpl     `?L445`
    \ 000126 3b                   tsc
    \ 000127 18                   clc
    \ 000128 690e00               adc     ##14
    \ 00012b 22......             jsl     long:`?L1211`
    \ 00012f d00d                 bne     `?L445`
1121                  	  {
1122                  		stackPush(x1, y - 1);
    \ 000131 a30c                 lda     12,s
    \ 000133 3a                   dec     a
    \ 000134 22......             jsl     long:`?L1261`
1123                  		spanAbove = 1;
    \ 000138 8303                 sta     3,s
    \ 00013a 8303                 sta     3,s
    \ 00013c 8023                 bra     `?L446`
    \ 00013e          `?L445`:
1124                  	  }
1125                  	  else if(spanAbove && (y > 0) && BufferAbove[x1] != oldColor)
    \ 00013e a303                 lda     3,s
    \ 000140 f01f                 beq     `?L446`
    \ 000142 a90000               lda     ##0
    \ 000145 38                   sec
    \ 000146 e30c                 sbc     12,s
    \ 000148 5003                 bvc     `?L1134`
    \ 00014a 490080               eor     ##-32768
    \ 00014d 1012     `?L1134`:   bpl     `?L446`
    \ 00014f 3b                   tsc
    \ 000150 18                   clc
    \ 000151 690e00               adc     ##14
    \ 000154 22......             jsl     long:`?L1211`
    \ 000158 f007                 beq     `?L446`
1126                  	  {
1127                  		spanAbove = 0;
    \ 00015a a90000               lda     ##0
    \ 00015d 8303                 sta     3,s
    \ 00015f 8303                 sta     3,s
    \ 000161          `?L446`:
1128                  	  }
1129                  	  if(!spanBelow && (y < (vickyResY - 1)) && BufferBelow[x1]== oldColor)
    \ 000161 a305                 lda     5,s
    \ 000163 d033                 bne     `?L451`
    \ 000165 a30c                 lda     12,s
    \ 000167 a20000               ldx     ##0
    \ 00016a a8                   tay
    \ 00016b 1001                 bpl     `?L1136`
    \ 00016d ca                   dex
    \ 00016e          `?L1136`:
    \ 00016e 22......             jsl     long:`?L1239`
    \ 000172 d001                 bne     `?L1138`
    \ 000174 ca                   dex
    \ 000175          `?L1138`:
    \ 000175 22......             jsl     long:`?L1222`
    \ 000179 5003                 bvc     `?L1140`
    \ 00017b 490080               eor     ##-32768
    \ 00017e 1018     `?L1140`:   bpl     `?L451`
    \ 000180 3b                   tsc
    \ 000181 18                   clc
    \ 000182 690e04               adc     ##1038
    \ 000185 22......             jsl     long:`?L1211`
    \ 000189 d00d                 bne     `?L451`
1130                  	  {
1131                  		stackPush(x1, y + 1);
    \ 00018b a30c                 lda     12,s
    \ 00018d 1a                   inc     a
    \ 00018e 22......             jsl     long:`?L1261`
1132                  		spanBelow = 1;
    \ 000192 8305                 sta     5,s
    \ 000194 8305                 sta     5,s
    \ 000196 8031                 bra     `?L452`
    \ 000198          `?L451`:
1133                  	  }
1134                  	  else if(spanBelow && (y < (vickyResY - 1)) && BufferBelow[x1]!= oldColor)
    \ 000198 a305                 lda     5,s
    \ 00019a f02d                 beq     `?L452`
    \ 00019c a30c                 lda     12,s
    \ 00019e a20000               ldx     ##0
    \ 0001a1 a8                   tay
    \ 0001a2 1001                 bpl     `?L1143`
    \ 0001a4 ca                   dex
    \ 0001a5          `?L1143`:
    \ 0001a5 22......             jsl     long:`?L1239`
    \ 0001a9 d001                 bne     `?L1145`
    \ 0001ab ca                   dex
    \ 0001ac          `?L1145`:
    \ 0001ac 22......             jsl     long:`?L1222`
    \ 0001b0 5003                 bvc     `?L1147`
    \ 0001b2 490080               eor     ##-32768
    \ 0001b5 1012     `?L1147`:   bpl     `?L452`
    \ 0001b7 3b                   tsc
    \ 0001b8 18                   clc
    \ 0001b9 690e04               adc     ##1038
    \ 0001bc 22......             jsl     long:`?L1211`
    \ 0001c0 f007                 beq     `?L452`
1135                  	  {
1136                  		spanBelow = 0;
    \ 0001c2 a90000               lda     ##0
    \ 0001c5 8305                 sta     5,s
    \ 0001c7 8305                 sta     5,s
    \ 0001c9          `?L452`:
1137                  	  }
1138                  	  x1++;
    \ 0001c9 a307                 lda     7,s
    \ 0001cb 1a                   inc     a
    \ 0001cc 8307                 sta     7,s
    \ 0001ce 4c....               jmp     .kbank `?L442`
    \ 0001d1          `?L443`:
1139                  	}
1140                  	// Fill horizontal Line (optimization)
1141                  	if (BufferCurrent[x1]!=oldColor)
    \ 0001d1 3b                   tsc
    \ 0001d2 18                   clc
    \ 0001d3 690e08               adc     ##2062
    \ 0001d6 22......             jsl     long:`?L1211`
    \ 0001da f005                 beq     `?L457`
1142                  		x1--;
    \ 0001dc a307                 lda     7,s
    \ 0001de 3a                   dec     a
    \ 0001df 8002                 bra     `?L1184`
    \ 0001e1 a307     `?L457`:    lda     7,s
    \ 0001e3 a8       `?L1184`:   tay
1143                  	plot_line(xInit,y,x1,y,newColor);
    \ 0001e4 3b                   tsc
    \ 0001e5 18                   clc
    \ 0001e6 69120c               adc     ##3090
    \ 0001e9 aa                   tax
    \ 0001ea bd0000               lda     0,x
    \ 0001ed 48                   pha
    \ 0001ee a30e                 lda     14,s
    \ 0001f0 48                   pha
    \ 0001f1 84..                 sty     dp:.tiny (_Dp+2)
    \ 0001f3 a310                 lda     16,s
    \ 0001f5 85..                 sta     dp:.tiny _Dp
    \ 0001f7 a305                 lda     5,s
    \ 0001f9 22......             jsl     long:plot_line
    \ 0001fd 68                   pla
    \ 0001fe 68                   pla
    \ 0001ff 4c....               jmp     .kbank `?L427`
    \ 000202          `?L422`:
1144                    }
1145                  }
    \ 000202 3b                   tsc
    \ 000203 18                   clc
    \ 000204 690e0c               adc     ##3086
    \ 000207 1b                   tcs
    \ 000208 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1190`:
    \ 000000 a4..                 ldy     dp:.tiny (_Dp+8)
    \ 000002 84..                 sty     dp:.tiny _Dp
    \ 000004 a4..                 ldy     dp:.tiny (_Dp+10)
    \ 000006 84..                 sty     dp:.tiny (_Dp+2)
    \ 000008          `?L1191`:
    \ 000008 22......             jsl     long:_Float32Mul
    \ 00000c a4..                 ldy     dp:.tiny (_Dp+8)
    \ 00000e 84..                 sty     dp:.tiny _Dp
    \ 000010 a4..                 ldy     dp:.tiny (_Dp+10)
    \ 000012          `?L1193`:
    \ 000012 84..                 sty     dp:.tiny (_Dp+2)
    \ 000014          `?L1194`:
    \ 000014 22......             jsl     long:_Float32Mul
    \ 000018 86..                 stx     dp:.tiny (_Dp+2)
    \ 00001a 85..                 sta     dp:.tiny _Dp
    \ 00001c 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1196`:
    \ 000000 86..                 stx     dp:.tiny (_Dp+2)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 ad....               lda     vickyResX
    \ 000007 85..                 sta     dp:.tiny (_Dp+4)
    \ 000009 ad....               lda     vickyResX+2
    \ 00000c 85..                 sta     dp:.tiny (_Dp+6)
    \ 00000e 22......             jsl     long:_Mul32
    \ 000012 18                   clc
    \ 000013 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a20040   `?L1198`:   ldx     ##16384
    \ 000003          `?L1199`:
    \ 000003 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 000005 84..                 sty     dp:.tiny _Dp
    \ 000007 a4..                 ldy     dp:.tiny (_Dp+14)
    \ 000009          `?L1200`:
    \ 000009 84..                 sty     dp:.tiny (_Dp+2)
    \ 00000b 5c......             jmp     long:_Float32Mul
    \ 000000                      .section farcode,text
    \ 000000 a90000   `?L1201`:   lda     ##0
    \ 000003 a2803f               ldx     ##16256
    \ 000006 a4..                 ldy     dp:.tiny (_Dp+8)
    \ 000008 84..                 sty     dp:.tiny _Dp
    \ 00000a a4..                 ldy     dp:.tiny (_Dp+10)
    \ 00000c 84..                 sty     dp:.tiny (_Dp+2)
    \ 00000e 5c......             jmp     long:_Float32Sub
    \ 000000                      .section farcode,text
    \ 000000          `?L1202`:
    \ 000000 86..                 stx     dp:.tiny (_Dp+2)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a90001               lda     ##256
    \ 000007 85..                 sta     dp:.tiny (_Dp+4)
    \ 000009 a9af00               lda     ##175
    \ 00000c 85..                 sta     dp:.tiny (_Dp+6)
    \ 00000e ad....               lda     vickyBitmapPage
    \ 000011 0a                   asl     a
    \ 000012 0a                   asl     a
    \ 000013 0a                   asl     a
    \ 000014 85..                 sta     dp:.tiny (_Dp+8)
    \ 000016 18                   clc
    \ 000017 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000019 65..                 adc     dp:.tiny (_Dp+8)
    \ 00001b 85..                 sta     dp:.tiny (_Dp+4)
    \ 00001d 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a30b     `?L1203`:   lda     11,s
    \ 000002 29ff00               and     ##255
    \ 000005 0a                   asl     a
    \ 000006 0a                   asl     a
    \ 000007 a20000               ldx     ##0
    \ 00000a a8                   tay
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1204`:
    \ 000000 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000006 85..                 sta     dp:.tiny (_Dp+2)
    \ 000008 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1205`:
    \ 000000 22......             jsl     long:_SInt32ToFloat32
    \ 000004 a00000               ldy     ##0
    \ 000007 84..                 sty     dp:.tiny _Dp
    \ 000009 a0003f               ldy     ##16128
    \ 00000c 84..                 sty     dp:.tiny (_Dp+2)
    \ 00000e 5c......             jmp     long:_Float32Add
    \ 000000                      .section farcode,text
    \ 000000 a90001   `?L1207`:   lda     ##256
    \ 000003 85..                 sta     dp:.tiny (_Dp+4)
    \ 000005 a9af00               lda     ##175
    \ 000008 85..                 sta     dp:.tiny (_Dp+6)
    \ 00000a ad....               lda     vickyBitmapPage
    \ 00000d 0a                   asl     a
    \ 00000e 0a                   asl     a
    \ 00000f 0a                   asl     a
    \ 000010 85..                 sta     dp:.tiny _Dp
    \ 000012 18                   clc
    \ 000013 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000015 65..                 adc     dp:.tiny _Dp
    \ 000017 85..                 sta     dp:.tiny (_Dp+4)
    \ 000019 a00300               ldy     ##3
    \ 00001c b7..                 lda     [.tiny (_Dp+4)],y
    \ 00001e 85..                 sta     dp:.tiny (_Dp+2)
    \ 000020 a00100               ldy     ##1
    \ 000023 b7..                 lda     [.tiny (_Dp+4)],y
    \ 000025 85..                 sta     dp:.tiny _Dp
    \ 000027 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 0a       `?L1208`:   asl     a
    \ 000001 0a                   asl     a
    \ 000002 0a                   asl     a
    \ 000003          `?L1209`:
    \ 000003 85..                 sta     dp:.tiny (_Dp+4)
    \ 000005 18                   clc
    \ 000006 a5..                 lda     dp:.tiny _Dp
    \ 000008 65..                 adc     dp:.tiny (_Dp+4)
    \ 00000a 85..                 sta     dp:.tiny _Dp
    \ 00000c 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1210`:
    \ 000000 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a5..                 lda     dp:.tiny (_Dp+14)
    \ 000006 85..                 sta     dp:.tiny (_Dp+2)
    \ 000008 a6..                 ldx     dp:.tiny (_Dp+14)
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a8       `?L1211`:   tay
    \ 000001 a30e                 lda     14,s
    \ 000003 e220                 sep     #32
    \ 000005 d30a                 cmp     (10,s),y
    \ 000007 c220                 rep     #32
    \ 000009 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1212`:
    \ 000000 ad....               lda     vickyResX
    \ 000003 85..                 sta     dp:.tiny _Dp
    \ 000005 ad....               lda     vickyResX+2
    \ 000008 85..                 sta     dp:.tiny (_Dp+2)
    \ 00000a ad....               lda     vickyResY
    \ 00000d 85..                 sta     dp:.tiny (_Dp+4)
    \ 00000f ad....               lda     vickyResY+2
    \ 000012 85..                 sta     dp:.tiny (_Dp+6)
    \ 000014 5c......             jmp     long:_Mul32
    \ 000000                      .section farcode,text
    \ 000000 a310     `?L1213`:   lda     16,s
    \ 000002 18                   clc
    \ 000003 631e                 adc     30,s
    \ 000005 85..                 sta     dp:.tiny (_Dp+2)
    \ 000007 a312                 lda     18,s
    \ 000009 18                   clc
    \ 00000a 6320                 adc     32,s
    \ 00000c 85..                 sta     dp:.tiny _Dp
    \ 00000e a31c                 lda     28,s
    \ 000010 18                   clc
    \ 000011 631e                 adc     30,s
    \ 000013 5c......             jmp     long:plot_line
    \ 000000                      .section farcode,text
    \ 000000 a318     `?L1214`:   lda     24,s
    \ 000002 18                   clc
    \ 000003 6326                 adc     38,s
    \ 000005 85..                 sta     dp:.tiny (_Dp+2)
    \ 000007 a328                 lda     40,s
    \ 000009 38                   sec
    \ 00000a e31a                 sbc     26,s
    \ 00000c 85..                 sta     dp:.tiny _Dp
    \ 00000e a324                 lda     36,s
    \ 000010 18                   clc
    \ 000011 6326                 adc     38,s
    \ 000013 5c......             jmp     long:plot_line
    \ 000000                      .section farcode,text
    \ 000000 a30c     `?L1215`:   lda     12,s
    \ 000002 18                   clc
    \ 000003 631a                 adc     26,s
    \ 000005 85..                 sta     dp:.tiny (_Dp+2)
    \ 000007 a30e                 lda     14,s
    \ 000009 18                   clc
    \ 00000a 631c                 adc     28,s
    \ 00000c          `?L1216`:
    \ 00000c 85..                 sta     dp:.tiny _Dp
    \ 00000e a31a                 lda     26,s
    \ 000010 38                   sec
    \ 000011 e30c                 sbc     12,s
    \ 000013 5c......             jmp     long:plot_line
    \ 000000                      .section farcode,text
    \ 000000 a31a     `?L1217`:   lda     26,s
    \ 000002 38                   sec
    \ 000003 e30c                 sbc     12,s
    \ 000005 85..                 sta     dp:.tiny (_Dp+2)
    \ 000007 a30e                 lda     14,s
    \ 000009 18                   clc
    \ 00000a 631c                 adc     28,s
    \ 00000c 85..                 sta     dp:.tiny _Dp
    \ 00000e a31a                 lda     26,s
    \ 000010 38                   sec
    \ 000011 e318                 sbc     24,s
    \ 000013 5c......             jmp     long:plot_line
    \ 000000                      .section farcode,text
    \ 000000 a322     `?L1218`:   lda     34,s
    \ 000002 38                   sec
    \ 000003 e314                 sbc     20,s
    \ 000005 85..                 sta     dp:.tiny (_Dp+2)
    \ 000007 a324                 lda     36,s
    \ 000009 38                   sec
    \ 00000a e316                 sbc     22,s
    \ 00000c 85..                 sta     dp:.tiny _Dp
    \ 00000e a322                 lda     34,s
    \ 000010 38                   sec
    \ 000011 e320                 sbc     32,s
    \ 000013 5c......             jmp     long:plot_line
    \ 000000                      .section farcode,text
    \ 000000 e220     `?L1219`:   sep     #32
    \ 000002 a980                 lda     #-128
    \ 000004 0f0004af             ora     long:11469824
    \ 000008 8f0004af             sta     long:11469824
    \ 00000c c220                 rep     #32
    \ 00000e 22......             jsl     long:DMA_wait_delay
    \ 000012 5c......             jmp     long:wait_for_DMA_to_finish
    \ 000000                      .section farcode,text
    \ 000000          `?L1221`:
    \ 000000 86..                 stx     dp:.tiny _Dp
    \ 000002 a6..                 ldx     dp:.tiny (_Dp+10)
    \ 000004 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000006 5c......             jmp     long:pow
    \ 000000                      .section farcode,text
    \ 000000 3a       `?L1222`:   dec     a
    \ 000001 86..                 stx     dp:.tiny (_Dp+6)
    \ 000003 85..                 sta     dp:.tiny (_Dp+4)
    \ 000005 a5..                 lda     dp:.tiny _Dp
    \ 000007 c5..                 cmp     dp:.tiny (_Dp+4)
    \ 000009 a5..                 lda     dp:.tiny (_Dp+2)
    \ 00000b e5..                 sbc     dp:.tiny (_Dp+6)
    \ 00000d 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a90100   `?L1223`:   lda     ##1
    \ 000003 8f0209af             sta     long:11471106
    \ 000007 3a                   dec     a
    \ 000008 8f0209af             sta     long:11471106
    \ 00000c 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1224`:
    \ 000000 86..                 stx     dp:.tiny (_Dp+10)
    \ 000002 85..                 sta     dp:.tiny (_Dp+8)
    \ 000004 ad....               lda     vickyResX
    \ 000007 85..                 sta     dp:.tiny (_Dp+4)
    \ 000009 ad....               lda     vickyResX+2
    \ 00000c 85..                 sta     dp:.tiny (_Dp+6)
    \ 00000e 22......             jsl     long:_Mul32
    \ 000012 18                   clc
    \ 000013 65..                 adc     dp:.tiny (_Dp+8)
    \ 000015 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1226`:
    \ 000000 a4..                 ldy     dp:.tiny (_Dp+12)
    \ 000002 84..                 sty     dp:.tiny _Dp
    \ 000004 a4..                 ldy     dp:.tiny (_Dp+14)
    \ 000006 84..                 sty     dp:.tiny (_Dp+2)
    \ 000008 a6..                 ldx     dp:.tiny (_Dp+14)
    \ 00000a a5..                 lda     dp:.tiny (_Dp+12)
    \ 00000c 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 0f0004af `?L1227`:   ora     long:11469824
    \ 000004 8f0004af             sta     long:11469824
    \ 000008 c220                 rep     #32
    \ 00000a a5..                 lda     dp:.tiny _Dp
    \ 00000c 8f0504af             sta     long:11469829
    \ 000010 e220                 sep     #32
    \ 000012 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000014 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1228`:
    \ 000000 a4..                 ldy     dp:.tiny (_Dp+8)
    \ 000002 84..                 sty     dp:.tiny _Dp
    \ 000004 a4..                 ldy     dp:.tiny (_Dp+10)
    \ 000006 84..                 sty     dp:.tiny (_Dp+2)
    \ 000008 a6..                 ldx     dp:.tiny (_Dp+10)
    \ 00000a a5..                 lda     dp:.tiny (_Dp+8)
    \ 00000c 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1229`:
    \ 000000 8d....               sta     vickyResX
    \ 000003 8d....               sta     vickyResX+2
    \ 000006 8d....               sta     vickyResY
    \ 000009 8d....               sta     vickyResY+2
    \ 00000c 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1230`:
    \ 000000 22......             jsl     long:_Float32Sub
    \ 000004 86..                 stx     dp:.tiny (_Dp+2)
    \ 000006 85..                 sta     dp:.tiny _Dp
    \ 000008 a5..                 lda     dp:.tiny _Dp
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1232`:
    \ 000000 cd....               cmp     vickyResX
    \ 000003 8a                   txa
    \ 000004 ed....               sbc     vickyResX+2
    \ 000007 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1233`:
    \ 000000 8d....               sta     vickyResY
    \ 000003 a90000               lda     ##0
    \ 000006 8d....               sta     vickyResY+2
    \ 000009 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1234`:
    \ 000000 22......             jsl     long:_Float32Mul
    \ 000004 a00000               ldy     ##0
    \ 000007 84..                 sty     dp:.tiny _Dp
    \ 000009 a08040               ldy     ##16512
    \ 00000c 84..                 sty     dp:.tiny (_Dp+2)
    \ 00000e 5c......             jmp     long:_Float32Div
    \ 000000                      .section farcode,text
    \ 000000 a90001   `?L1236`:   lda     ##256
    \ 000003 85..                 sta     dp:.tiny _Dp
    \ 000005 a9af00               lda     ##175
    \ 000008 85..                 sta     dp:.tiny (_Dp+2)
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1237`:
    \ 000000 ad....               lda     stackTop
    \ 000003 0a                   asl     a
    \ 000004 0a                   asl     a
    \ 000005 18                   clc
    \ 000006 69....               adc     ##stack
    \ 000009 aa                   tax
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1238`:
    \ 000000 ad....               lda     vickyBitmapPage
    \ 000003 0a                   asl     a
    \ 000004 aa                   tax
    \ 000005 bd....               lda     vBitPlane,x
    \ 000008 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1239`:
    \ 000000 86..                 stx     dp:.tiny (_Dp+2)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 ae....               ldx     vickyResY+2
    \ 000007 ad....               lda     vickyResY
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 18       `?L1240`:   clc
    \ 000001 690e08               adc     ##2062
    \ 000004 85..                 sta     dp:.tiny _Dp
    \ 000006 64..                 stz     dp:.tiny (_Dp+2)
    \ 000008 a30f                 lda     15,s
    \ 00000a 5c......             jmp     long:getScanLine
    \ 000000                      .section farcode,text
    \ 000000 18       `?L1241`:   clc
    \ 000001 6310                 adc     16,s
    \ 000003 a20000               ldx     ##0
    \ 000006 a8                   tay
    \ 000007 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 18       `?L1242`:   clc
    \ 000001 6312                 adc     18,s
    \ 000003 a20000               ldx     ##0
    \ 000006 a8                   tay
    \ 000007 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1243`:
    \ 000000 22......             jsl     long:_Float32ToSInt32
    \ 000004 a20000               ldx     ##0
    \ 000007 a8                   tay
    \ 000008 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1245`:
    \ 000000 cd....               cmp     vickyResY
    \ 000003 8a                   txa
    \ 000004 ed....               sbc     vickyResY+2
    \ 000007 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1246`:
    \ 000000 86..                 stx     dp:.tiny (_Dp+2)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a310                 lda     16,s
    \ 000006 38                   sec
    \ 000007 e306                 sbc     6,s
    \ 000009 a20000               ldx     ##0
    \ 00000c a8                   tay
    \ 00000d 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1247`:
    \ 000000 86..                 stx     dp:.tiny (_Dp+2)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a310                 lda     16,s
    \ 000006 38                   sec
    \ 000007 e30e                 sbc     14,s
    \ 000009 a20000               ldx     ##0
    \ 00000c a8                   tay
    \ 00000d 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a00000   `?L1248`:   ldy     ##0
    \ 000003 84..                 sty     dp:.tiny _Dp
    \ 000005 c8                   iny
    \ 000006 88                   dey
    \ 000007          `?L1249`:
    \ 000007 84..                 sty     dp:.tiny (_Dp+2)
    \ 000009 5c......             jmp     long:_Float32GE
    \ 000000                      .section farcode,text
    \ 000000 18       `?L1250`:   clc
    \ 000001 690300               adc     ##3
    \ 000004 aa                   tax
    \ 000005 de0000               dec     0,x
    \ 000008 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 18       `?L1251`:   clc
    \ 000001 631a                 adc     26,s
    \ 000003 85..                 sta     dp:.tiny (_Dp+2)
    \ 000005 a31c                 lda     28,s
    \ 000007 38                   sec
    \ 000008 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a90000   `?L1252`:   lda     ##0
    \ 000003 38                   sec
    \ 000004 ef0209af             sbc     long:11471106
    \ 000008 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1253`:
    \ 000000 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000006 85..                 sta     dp:.tiny (_Dp+2)
    \ 000008 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1254`:
    \ 000000 85..                 sta     dp:.tiny _Dp
    \ 000002 a31a                 lda     26,s
    \ 000004 38                   sec
    \ 000005 e310                 sbc     16,s
    \ 000007 5c......             jmp     long:plot_line
    \ 000000                      .section farcode,text
    \ 000000          `?L1255`:
    \ 000000 22......             jsl     long:_SInt32ToFloat32
    \ 000004 a03333               ldy     ##13107
    \ 000007 84..                 sty     dp:.tiny _Dp
    \ 000009 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1257`:
    \ 000000 22......             jsl     long:_SInt32ToFloat32
    \ 000004 a4..                 ldy     dp:.tiny (_Dp+8)
    \ 000006 84..                 sty     dp:.tiny _Dp
    \ 000008 a4..                 ldy     dp:.tiny (_Dp+10)
    \ 00000a 84..                 sty     dp:.tiny (_Dp+2)
    \ 00000c 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 8a       `?L1259`:   txa
    \ 000001 69b000               adc     ##176
    \ 000004 aa                   tax
    \ 000005 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1260`:
    \ 000000 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a5..                 lda     dp:.tiny (_Dp+14)
    \ 000006 85..                 sta     dp:.tiny (_Dp+2)
    \ 000008 a90000               lda     ##0
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1261`:
    \ 000000 85..                 sta     dp:.tiny _Dp
    \ 000002 a30a                 lda     10,s
    \ 000004 22......             jsl     long:stackPush
    \ 000008 a90100               lda     ##1
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1263`:
    \ 000000 22......             jsl     long:_Float32Add
    \ 000004 86..                 stx     dp:.tiny (_Dp+2)
    \ 000006 85..                 sta     dp:.tiny _Dp
    \ 000008 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a90000   `?L1265`:   lda     ##0
    \ 000003 85..                 sta     dp:.tiny _Dp
    \ 000005 a94040               lda     ##16448
    \ 000008 85..                 sta     dp:.tiny (_Dp+2)
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a90000   `?L1266`:   lda     ##0
    \ 000003 8d....               sta     vickyResX+2
    \ 000006 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a310     `?L1267`:   lda     16,s
    \ 000002 a20000               ldx     ##0
    \ 000005 a8                   tay
    \ 000006 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1268`:
    \ 000000 86..                 stx     dp:.tiny (_Dp+14)
    \ 000002 85..                 sta     dp:.tiny (_Dp+12)
    \ 000004 a30c                 lda     12,s
    \ 000006 a20000               ldx     ##0
    \ 000009 a8                   tay
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1269`:
    \ 000000 86..                 stx     dp:.tiny (_Dp+2)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a310                 lda     16,s
    \ 000006 a20000               ldx     ##0
    \ 000009 a8                   tay
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L1270`:
    \ 000000 85..                 sta     dp:.tiny _Dp
    \ 000002 a90000               lda     ##0
    \ 000005 aa                   tax
    \ 000006 5c......             jmp     long:_Float32LT
    \ 000000                      .section farcode,text
    \ 000000 0f2004af `?L1271`:   ora     long:11469856
    \ 000004 8f2004af             sta     long:11469856
    \ 000008 c220                 rep     #32
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a00300   `?L1272`:   ldy     ##3
    \ 000003 97..                 sta     [.tiny _Dp],y
    \ 000005 c220                 rep     #32
    \ 000007 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a90000   `?L1273`:   lda     ##0
    \ 000003 a24040               ldx     ##16448
    \ 000006 a4..                 ldy     dp:.tiny (_Dp+8)
    \ 000008 84..                 sty     dp:.tiny _Dp
    \ 00000a 6b                   rtl
    \ 000000                      .section switch,rodata
    \ 000000 ....     `?L464`:    .word   .word0 (`?L53`-1)
    \ 000002 ....                 .word   .word0 (`?L52`-1)
    \ 000004 ....                 .word   .word0 (`?L51`-1)
    \ 000006 ....                 .word   .word0 (`?L50`-1)
    \ 000000                      .section switch,rodata
    \ 000000 ....     `?L469`:    .word   .word0 (`?L101`-1)
    \ 000002 ....                 .word   .word0 (`?L100`-1)
    \ 000004 ....                 .word   .word0 (`?L99`-1)
    \ 000006 ....                 .word   .word0 (`?L98`-1)
    \ 000008 ....                 .word   .word0 (`?L97`-1)
    \ 00000a ....                 .word   .word0 (`?L96`-1)
    \ 00000c ....                 .word   .word0 (`?L95`-1)
    \ 00000e ....                 .word   .word0 (`?L94`-1)
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[27,91,37,100,59,37,100,72]`
    \ 000000          `_StringLiteral_[27,91,37,100,59,37,100,72]`:
    \ 000000 1b5b2564             .byte   27,91,37,100,59,37,100,72,0
    \ 000004 3b256448
    \ 000008 00
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[27,91,50,74]`
    \ 000000          `_StringLiteral_[27,91,50,74]`:
    \ 000000 1b5b324a             .byte   27,91,50,74,0
    \ 000004 00
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[27,101,91,56,59,37,100,44,37,100,59,49,72]`
    \ 000000          `_StringLiteral_[27,101,91,56,59,37,100,44,37,100,59,49,72]`:
    \ 000000 1b655b38             .byte   27,101,91,56,59,37,100,44,37,100,59,49,72,0
    \ 000004 3b25642c
    \ 000008 25643b31
    \ 00000c 4800
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_Bitmap page must be 0 or 1!`
    \ 000000          `_StringLiteral_Bitmap page must be 0 or 1!`:
    \ 000000 4269746d             .byte   66,105,116,109,97,112,32,112,97,103,101,32,109,117,115,116,32,98,101,32,48,32,111,114,32,49,33,0
    \ 000004 61702070
    \ 000008 61676520
    \ 00000c 6d757374
    \ 000010 20626520
    \ 000014 30206f72
    \ 000018 20312100
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[70,105,110,105,115,104,46,46,13]`
    \ 000000          `_StringLiteral_[70,105,110,105,115,104,46,46,13]`:
    \ 000000 46696e69             .byte   70,105,110,105,115,104,46,46,13,0
    \ 000004 73682e2e
    \ 000008 0d00
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[77,101,109,111,114,121,32,100,101,116,101,99,116,101,100,58,32,37,108,120,32,10,13]`
    \ 000000          `_StringLiteral_[77,101,109,111,114,121,32,100,101,116,101,99,116,101,100,58,32,37,108,120,32,10,13]`:
    \ 000000 4d656d6f             .byte   77,101,109,111,114,121,32,100,101,116,101,99,116,101,100,58,32,37,108,120,32,10,13,0
    \ 000004 72792064
    \ 000008 65746563
    \ 00000c 7465643a
    \ 000010 20256c78
    \ 000014 200a0d00
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[78,111,116,32,101,110,111,117,103,104,32,109,101,109,111,114,121,32,97,116,32,97,100,100,114,101,115,115,32,37,108,120,32,102,111,114,32,97,32,100,37,32,98,121,32,100,37,32,115,99,114,101,101,110,33,44,32,37,120,108,32,98,121,116,101,115,32,114,101,113,117,105,114,101,100,46,10,13]`
    \ 000000          `_StringLiteral_[78,111,116,32,101,110,111,117,103,104,32,109,101,109,111,114,121,32,97,116,32,97,100,100,114,101,115,115,32,37,108,120,32,102,111,114,32,97,32,100,37,32,98,121,32,100,37,32,115,99,114,101,101,110,33,44,32,37,120,108,32,98,121,116,101,115,32,114,101,113,117,105,114,101,100,46,10,13]`:
    \ 000000 4e6f7420             .byte   78,111,116,32,101,110,111,117,103,104,32,109,101,109,111,114,121,32,97,116,32,97,100,100,114,101,115,115,32,37,108,120,32,102,111,114,32,97,32,100,37,32,98,121,32,100,37,32,115,99,114,101,101,110,33,44,32,37,120,108,32,98,121,116,101,115,32,114,101,113,117,105,114,101,100,46,10,13,0
    \ 000004 656e6f75
    \ 000008 6768206d
    \ 00000c 656d6f72
    \ 000010 79206174
    \ 000014 20616464
    \ 000018 72657373
    \ 00001c 20256c78
    \ 000020 20666f72
    \ 000024 20612064
    \ 000028 25206279
    \ 00002c 20642520
    \ 000030 73637265
    \ 000034 656e212c
    \ 000038 2025786c
    \ 00003c 20627974
    \ 000040 65732072
    \ 000044 65717569
    \ 000048 7265642e
    \ 00004c 0a0d00
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[86,82,65,77,32,100,101,116,101,99,116,101,100,58,32,48,120,98,48,48,48,48,48,32,45,32,37,108,120,10,13]`
    \ 000000          `_StringLiteral_[86,82,65,77,32,100,101,116,101,99,116,101,100,58,32,48,120,98,48,48,48,48,48,32,45,32,37,108,120,10,13]`:
    \ 000000 5652414d             .byte   86,82,65,77,32,100,101,116,101,99,116,101,100,58,32,48,120,98,48,48,48,48,48,32,45,32,37,108,120,10,13,0
    \ 000004 20646574
    \ 000008 65637465
    \ 00000c 643a2030
    \ 000010 78623030
    \ 000014 30303020
    \ 000018 2d20256c
    \ 00001c 780a0d00
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[88,102,101,114,32,105,110,105,116,105,116,97,116,101,100,13]`
    \ 000000          `_StringLiteral_[88,102,101,114,32,105,110,105,116,105,116,97,116,101,100,13]`:
    \ 000000 58666572             .byte   88,102,101,114,32,105,110,105,116,105,116,97,116,101,100,13,0
    \ 000004 20696e69
    \ 000008 74697461
    \ 00000c 7465640d
    \ 000010 00
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[103,114,97,112,104,105,99,115,32,109,111,100,101,32,37,100,32,120,58,37,108,100,32,121,58,37,108,100,10,13]`
    \ 000000          `_StringLiteral_[103,114,97,112,104,105,99,115,32,109,111,100,101,32,37,100,32,120,58,37,108,100,32,121,58,37,108,100,10,13]`:
    \ 000000 67726170             .byte   103,114,97,112,104,105,99,115,32,109,111,100,101,32,37,100,32,120,58,37,108,100,32,121,58,37,108,100,10,13,0
    \ 000004 68696373
    \ 000008 206d6f64
    \ 00000c 65202564
    \ 000010 20783a25
    \ 000014 6c642079
    \ 000018 3a256c64
    \ 00001c 0a0d00
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[115,111,117,114,99,101,58,32,37,120,32,100,101,115,116,58,32,37,120,32,108,101,110,58,37,108,100,13]`
    \ 000000          `_StringLiteral_[115,111,117,114,99,101,58,32,37,120,32,100,101,115,116,58,32,37,120,32,108,101,110,58,37,108,100,13]`:
    \ 000000 736f7572             .byte   115,111,117,114,99,101,58,32,37,120,32,100,101,115,116,58,32,37,120,32,108,101,110,58,37,108,100,13,0
    \ 000004 63653a20
    \ 000008 25782064
    \ 00000c 6573743a
    \ 000010 20257820
    \ 000014 6c656e3a
    \ 000018 256c640d
    \ 00001c 00
    \ 000000                      .section cdata,rodata
    \ 000000                      .pubweak `_StringLiteral_[119,97,105,116,105,110,103,46,46,13]`
    \ 000000          `_StringLiteral_[119,97,105,116,105,110,103,46,46,13]`:
    \ 000000 77616974             .byte   119,97,105,116,105,110,103,46,46,13,0
    \ 000004 696e672e
    \ 000008 2e0d00

##########################
#                        #
# Memory sizes (decimal) #
#                        #
##########################

Executable              (Text): 9344 bytes
Zero initialized         (BSS):  532 bytes
Constant                      : 1313 bytes
Constant         __far        :   24 bytes
