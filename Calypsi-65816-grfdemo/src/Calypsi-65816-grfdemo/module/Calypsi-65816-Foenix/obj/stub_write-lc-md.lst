###############################################################################
#                                                                             #
# Calypsi ISO C compiler for 65816                              version 3.6.2 #
#                                                       06/Jul/2022  22:39:44 #
# Command line: --core=65816 --target=Foenix --code-model=large               #
#               --data-model=medium --debug -Iinclude                         #
#               --list-file=obj/stub_write-lc-md.lst -o                       #
#               obj/stub_write-lc-md.o src/stub_write.c                       #
#                                                                             #
###############################################################################

    \ 000000                      .rtmodel version,"1"
    \ 000000                      .rtmodel codeModel,"large"
    \ 000000                      .rtmodel dataModel,"medium"
    \ 000000                      .rtmodel core,"65816"
    \ 000000                      .rtmodel huge,"0"
    \ 000000                      .rtmodel doubleSize,"32"
    \ 000000                      .rtmodel target,"foenix"
    \ 000000                      .extern _Dp
    \ 000000                      .extern _Vfp
    \ 000000                      .extern errno
0001                  #include <errno.h>
0002                  #include <sys/types.h>
0003                  #include <stubs.h>
0004
0005                  // Can call kernel directly in large code model only.
0006                  #ifdef __CALYPSI_DATA_MODEL_SMALL__
0007                  #define CHROUT(c) _Stub_putchar(c)
0008                  #else
0009                  #define CHROUT(c) ( (void (*)(char) ) 0x1018) (c)
0010                  #endif
0011
0012                  size_t _Stub_write (int fd, const void *buf, size_t count) {
    \ 000000                      .section farcode,text
    \ 000000                      .public _Stub_write
    \ 000000          _Stub_write:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 5a                   phy
    \ 000005 5a                   phy
    \ 000006 aa                   tax
    \ 000007 a5..                 lda     dp:.tiny _Dp
    \ 000009 85..                 sta     dp:.tiny (_Dp+8)
    \ 00000b a5..                 lda     dp:.tiny (_Dp+2)
    \ 00000d 85..                 sta     dp:.tiny (_Dp+10)
0013                    const char *p = buf;
0014                    size_t n = 0;
    \ 00000f a90000               lda     ##0
    \ 000012 8301                 sta     1,s
0015
0016                    switch (fd) {
    \ 000014 e00100               cpx     ##1
    \ 000017 f00b                 beq     `?L7`
0017                    case 1: {
0018                      char c;
0019                      while (count) {
0020                        CHROUT(*p);
0021                        n += 1;
0022                        p += 1;
0023                        count -= 1;
0024                      }
0025                      break;
0026                      }
0027                    default:
0028                      __set_errno(EBADF);
    \ 000019 a20900               ldx     ##9
    \ 00001c 8e....               stx     .near errno
0029                      return (size_t) -1;
    \ 00001f a9ffff               lda     ##-1
    \ 000022 8028                 bra     `?L3`
    \ 000024          `?L7`:
    \ 000024 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000026 8303                 sta     3,s
    \ 000028 a301                 lda     1,s
    \ 00002a 8301                 sta     1,s
    \ 00002c a303     `?L8`:      lda     3,s
    \ 00002e f01a                 beq     `?L9`
    \ 000030 a7..                 lda     [.tiny (_Dp+8)]
    \ 000032 22181000             jsl     long:4120
    \ 000036 a301                 lda     1,s
    \ 000038 1a                   inc     a
    \ 000039 aa                   tax
    \ 00003a e6..                 inc     dp:.tiny (_Dp+8)
    \ 00003c a303                 lda     3,s
    \ 00003e 3a                   dec     a
    \ 00003f 8301                 sta     1,s
    \ 000041 a301                 lda     1,s
    \ 000043 8303                 sta     3,s
    \ 000045 8a                   txa
    \ 000046 8301                 sta     1,s
    \ 000048 80e2                 bra     `?L8`
    \ 00004a          `?L9`:
0030                    }
0031                    return n;
    \ 00004a a301                 lda     1,s
    \ 00004c          `?L3`:
0032                  }
    \ 00004c 7a                   ply
    \ 00004d 7a                   ply
    \ 00004e 7a                   ply
    \ 00004f 84..                 sty     dp:.tiny (_Dp+10)
    \ 000051 7a                   ply
    \ 000052 84..                 sty     dp:.tiny (_Dp+8)
    \ 000054 6b                   rtl

##########################
#                        #
# Memory sizes (decimal) #
#                        #
##########################

Executable  (Text): 85 bytes
